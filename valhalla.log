Started by remote host
Checking out git ssh://git@stash.test.com:1234/nav/tm-docker.git to read jenkinsfiles/valhalla-build-pipeline
 > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
Pruning obsolete local branches
Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
 > /usr/bin/git --version # timeout=10
using GIT_SSH to set credentials second sqa-auto for valhalla
 > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
 > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
 > /usr/bin/git config core.sparsecheckout # timeout=10
 > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
 > /usr/bin/git rev-list 095a4fbdf7fa0a0ee59387ff541f85eaee361686 # timeout=10
Cleaning workspace
 > /usr/bin/git rev-parse --verify HEAD # timeout=10
Resetting working tree
 > /usr/bin/git reset --hard # timeout=10
 > /usr/bin/git clean -fdx # timeout=10
[Pipeline] timestamps
[Pipeline] {
[Pipeline] node
Running on docker-tm-01 in /jenkins/workspace/ValhallaPipeline
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Setup)
[Pipeline] checkout
 > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
Pruning obsolete local branches
Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
 > /usr/bin/git --version # timeout=10
using GIT_SSH to set credentials second sqa-auto for valhalla
 > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
 > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
 > /usr/bin/git config core.sparsecheckout # timeout=10
 > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
Cleaning workspace
 > /usr/bin/git rev-parse --verify HEAD # timeout=10
Resetting working tree
 > /usr/bin/git reset --hard # timeout=10
 > /usr/bin/git clean -fdx # timeout=10
[Pipeline] sh
[ValhallaPipeline] Running shell script
+ scripts/setup.sh
++ realpath scripts/setup.sh
+ SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
+ SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
+ REPO_ROOT=/jenkins/workspace/ValhallaPipeline
++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
+ ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
+ [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
+ source /jenkins/workspace/ValhallaPipeline/env/docker.env
++ POSTGIS=mdillon/postgis
++ POSTGIS_LABEL=VALHALLA_DIAGNOSTICS
++ PG_USER=postgres
++ PG_PASSWD=
++ PG_DB=postgres
++ INSIGHT_SCHEMA=insight
++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
++ ROUTE_VALIDATORS_BRANCH=master
++ VALHALLA_BRANCH=origin/master
++ NAME_SERVER=12.34.5.67
++ VALHALLA_CONCURRENCY=
++ BASELINE_FILE=./baseline.txt
++ BUILD_FILE=./build.txt
++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
++ MAPDATA_DIR=/jenkins/autopilot-maps
++ MAPDATA_VERSION=NA-170714-148
++ MAPDATA_REGION=NA
++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
+++ sed -e s/-/_/g
++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
+ docker images --format '{{.Repository}}:{{.Tag}}'
+ grep docker.dev.test.com/user/tesla-nav-server:2.0.5
docker.dev.test.com/user/tesla-nav-server:2.0.5
+ [[ -n '' ]]
+ true
+ create_network
+ _network_exists_ jenkins_ValhallaPipeline_1004_NA
+ network=jenkins_ValhallaPipeline_1004_NA
++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
++ wc -l
+ network_count=1
+ test 1 -eq 2
+ echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
Creating network jenkins_ValhallaPipeline_1004_NA
+ docker network create jenkins_ValhallaPipeline_1004_NA
7ff398f9802a8fc94b0de96ab705d86839fe1a2a460bcac4f22fc34436c97466
+ launch_postgis
+ [[ -n '' ]]
+ docker inspect VALHALLA_DIAGNOSTICS
++ docker inspect VALHALLA_DIAGNOSTICS
++ grep Status
++ awk -F: '{print $2}'
++ tr -d ' ",'
+ container_status=running
+ [[ running == \e\x\i\t\e\d ]]
+ [[ running != \r\u\n\n\i\n\g ]]
+ _network_has_container_ jenkins_ValhallaPipeline_1004_NA VALHALLA_DIAGNOSTICS
+ network=jenkins_ValhallaPipeline_1004_NA
+ container=VALHALLA_DIAGNOSTICS
+ format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' VALHALLA_DIAGNOSTICS
+ output='<no value>'
+ [[ <no value> == *\<\n\o\ \v\a\l\u\e\>* ]]
+ return 1
+ docker network connect jenkins_ValhallaPipeline_1004_NA VALHALLA_DIAGNOSTICS
+ docker exec VALHALLA_DIAGNOSTICS /bin/bash -c 'echo '\''\d'\'' | psql -U postgres -d postgres &>/dev/null'
+ docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 /bin/bash -c 'echo '\''\d'\'' | psql -h VALHALLA_DIAGNOSTICS -U postgres -d postgres &>/dev/null'
+ docker ps -f name=VALHALLA_DIAGNOSTICS
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
f3e582fda856        mdillon/postgis     "docker-entrypoint..."   4 months ago        Up 3 months         0.0.0.0:5432->5432/tcp   VALHALLA_DIAGNOSTICS
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Guidance Regression Tests)
[Pipeline] parallel
[Pipeline] [guidance_regression_test-routes_uca] { (Branch: guidance_regression_test-routes_uca)
[Pipeline] [guidance_regression_test-routes_kr] { (Branch: guidance_regression_test-routes_kr)
[Pipeline] [guidance_regression_test-routes_tw] { (Branch: guidance_regression_test-routes_tw)
[Pipeline] [guidance_regression_test-routes_me] { (Branch: guidance_regression_test-routes_me)
[Pipeline] [guidance_regression_test-routes_uca] node
[guidance_regression_test-routes_uca] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [guidance_regression_test-routes_kr] node
[guidance_regression_test-routes_kr] Running on docker-aws-seoul-02 in /home/ec2-user/jenkins/workspace/ValhallaPipeline
[Pipeline] [guidance_regression_test-routes_tw] node
[guidance_regression_test-routes_tw] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [guidance_regression_test-routes_me] node
[guidance_regression_test-routes_me] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [guidance_regression_test-routes_uca] {
[Pipeline] [guidance_regression_test-routes_tw] {
[Pipeline] [guidance_regression_test-routes_kr] {
[Pipeline] [guidance_regression_test-routes_me] {
[Pipeline] [guidance_regression_test-routes_uca] withEnv
[Pipeline] [guidance_regression_test-routes_uca] {
[Pipeline] [guidance_regression_test-routes_tw] withEnv
[Pipeline] [guidance_regression_test-routes_tw] {
[Pipeline] [guidance_regression_test-routes_kr] withEnv
[Pipeline] [guidance_regression_test-routes_kr] {
[Pipeline] [guidance_regression_test-routes_me] withEnv
[Pipeline] [guidance_regression_test-routes_me] {
[Pipeline] [guidance_regression_test-routes_uca] checkout
[Pipeline] [guidance_regression_test-routes_tw] checkout
[guidance_regression_test-routes_uca]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[guidance_regression_test-routes_tw]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[Pipeline] [guidance_regression_test-routes_kr] timeout
[guidance_regression_test-routes_tw] Fetching changes from the remote Git repository
[guidance_regression_test-routes_kr] Timeout set to expire in 1 hr 0 min
[Pipeline] [guidance_regression_test-routes_kr] {
[Pipeline] [guidance_regression_test-routes_me] checkout
[guidance_regression_test-routes_uca] Fetching changes from the remote Git repository
[guidance_regression_test-routes_uca]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[guidance_regression_test-routes_uca] Pruning obsolete local branches
[guidance_regression_test-routes_uca] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[guidance_regression_test-routes_uca]  > /usr/bin/git --version # timeout=10
[guidance_regression_test-routes_uca] using GIT_SSH to set credentials second sqa-auto for valhalla
[guidance_regression_test-routes_uca]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[guidance_regression_test-routes_uca]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[guidance_regression_test-routes_uca]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[guidance_regression_test-routes_uca] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[guidance_regression_test-routes_uca]  > /usr/bin/git config core.sparsecheckout # timeout=10
[guidance_regression_test-routes_uca]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[guidance_regression_test-routes_uca] Cleaning workspace
[guidance_regression_test-routes_uca]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[guidance_regression_test-routes_uca] Resetting working tree
[guidance_regression_test-routes_uca]  > /usr/bin/git reset --hard # timeout=10
[guidance_regression_test-routes_uca]  > /usr/bin/git clean -fdx # timeout=10
[guidance_regression_test-routes_tw]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[guidance_regression_test-routes_tw] Pruning obsolete local branches
[guidance_regression_test-routes_tw] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[guidance_regression_test-routes_tw]  > /usr/bin/git --version # timeout=10
[guidance_regression_test-routes_tw] using GIT_SSH to set credentials second sqa-auto for valhalla
[guidance_regression_test-routes_tw]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[guidance_regression_test-routes_tw]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[guidance_regression_test-routes_tw]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[guidance_regression_test-routes_tw] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[guidance_regression_test-routes_tw]  > /usr/bin/git config core.sparsecheckout # timeout=10
[guidance_regression_test-routes_tw]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[guidance_regression_test-routes_tw] Cleaning workspace
[guidance_regression_test-routes_tw]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[guidance_regression_test-routes_tw] Resetting working tree
[guidance_regression_test-routes_tw]  > /usr/bin/git reset --hard # timeout=10
[guidance_regression_test-routes_tw]  > /usr/bin/git clean -fdx # timeout=10
[guidance_regression_test-routes_me]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[guidance_regression_test-routes_me] Fetching changes from the remote Git repository
[guidance_regression_test-routes_me]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[guidance_regression_test-routes_me] Pruning obsolete local branches
[guidance_regression_test-routes_me] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[guidance_regression_test-routes_me]  > /usr/bin/git --version # timeout=10
[guidance_regression_test-routes_me] using GIT_SSH to set credentials second sqa-auto for valhalla
[guidance_regression_test-routes_me]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[guidance_regression_test-routes_me]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[guidance_regression_test-routes_me]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[guidance_regression_test-routes_me] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[guidance_regression_test-routes_me]  > /usr/bin/git config core.sparsecheckout # timeout=10
[guidance_regression_test-routes_me]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[guidance_regression_test-routes_me] Cleaning workspace
[guidance_regression_test-routes_me]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[guidance_regression_test-routes_me] Resetting working tree
[guidance_regression_test-routes_me]  > /usr/bin/git reset --hard # timeout=10
[guidance_regression_test-routes_me]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [guidance_regression_test-routes_kr] sh
[guidance_regression_test-routes_kr] [ValhallaPipeline] Running shell script
[Pipeline] [guidance_regression_test-routes_uca] unstash
[Pipeline] [guidance_regression_test-routes_tw] unstash
[Pipeline] [guidance_regression_test-routes_me] unstash
[guidance_regression_test-routes_kr] + sudo rm -rf docker env guidance_seoul_boundary__jenkins-ValhallaPipeline-1003.csv guidance_steps_seoul_boundary__jenkins-ValhallaPipeline-1003.csv jenkinsfiles mapdata-seoul_boundary.version matched_seoul_boundary__jenkins-ValhallaPipeline-1003.csv max-error-hist-seoul_boundary.png max-error-table-seoul_boundary.png mismatched_seoul_boundary__jenkins-ValhallaPipeline-1003.csv mismatched_turn_angles_seoul_boundary__jenkins-ValhallaPipeline-1003.csv num_steps_failed_seoul_boundary__jenkins-ValhallaPipeline-1003.csv route_validators ROUTING_ENGINE_jenkins-ValhallaPipeline-1003_KR.log.gz scripts unnamed_roads_middle_seoul_boundary__jenkins-ValhallaPipeline-1003.csv valhalla-install.tgz valhalla-long-commit.txt .git .gitignore
[Pipeline] [guidance_regression_test-routes_kr] sh
[guidance_regression_test-routes_kr] [ValhallaPipeline] Running shell script
[Pipeline] [guidance_regression_test-routes_uca] sh
[guidance_regression_test-routes_uca] [ValhallaPipeline] Running shell script
[Pipeline] [guidance_regression_test-routes_tw] sh
[guidance_regression_test-routes_tw] [ValhallaPipeline] Running shell script
[Pipeline] [guidance_regression_test-routes_me] sh
[guidance_regression_test-routes_kr] + git clone ssh://git@localhost:3333/nav/tm-docker.git .
[guidance_regression_test-routes_kr] Cloning into '.'...
[guidance_regression_test-routes_uca] + scripts/setup.sh
[guidance_regression_test-routes_uca] ++ realpath scripts/setup.sh
[guidance_regression_test-routes_uca] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[guidance_regression_test-routes_uca] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[guidance_regression_test-routes_uca] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_uca] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_uca] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_uca] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_uca] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_uca] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_uca] ++ PG_USER=postgres
[guidance_regression_test-routes_uca] ++ PG_PASSWD=
[guidance_regression_test-routes_uca] ++ PG_DB=postgres
[guidance_regression_test-routes_uca] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_uca] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_uca] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_uca] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_uca] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_uca] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_uca] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_uca] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_uca] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_uca] ++ MAPDATA_VERSION=NA-170714-148
[guidance_regression_test-routes_uca] ++ MAPDATA_REGION=NA
[guidance_regression_test-routes_uca] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[guidance_regression_test-routes_uca] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[guidance_regression_test-routes_uca] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_uca] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] +++ sed -e s/-/_/g
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] + docker images --format '{{.Repository}}:{{.Tag}}'
[guidance_regression_test-routes_uca] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_uca] docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_uca] + [[ -n true ]]
[guidance_regression_test-routes_uca] + sync_aws_mapdata
[guidance_regression_test-routes_uca] + which aws
[guidance_regression_test-routes_uca] /usr/bin/aws
[guidance_regression_test-routes_uca] + [[ ! -d /jenkins/autopilot-maps ]]
[guidance_regression_test-routes_uca] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[guidance_regression_test-routes_tw] + scripts/setup.sh
[guidance_regression_test-routes_tw] ++ realpath scripts/setup.sh
[guidance_regression_test-routes_tw] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[guidance_regression_test-routes_tw] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[guidance_regression_test-routes_tw] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_tw] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_tw] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_tw] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_tw] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_tw] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_tw] ++ PG_USER=postgres
[guidance_regression_test-routes_tw] ++ PG_PASSWD=
[guidance_regression_test-routes_tw] ++ PG_DB=postgres
[guidance_regression_test-routes_tw] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_tw] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_tw] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_tw] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_tw] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_tw] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_tw] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_tw] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_tw] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_tw] ++ MAPDATA_VERSION=TW-170616-136
[guidance_regression_test-routes_tw] ++ MAPDATA_REGION=TW
[guidance_regression_test-routes_tw] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[guidance_regression_test-routes_tw] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[guidance_regression_test-routes_tw] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_tw] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] +++ sed -e s/-/_/g
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] + docker images --format '{{.Repository}}:{{.Tag}}'
[guidance_regression_test-routes_tw] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_tw] docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_tw] + [[ -n true ]]
[guidance_regression_test-routes_tw] + sync_aws_mapdata
[guidance_regression_test-routes_tw] + which aws
[guidance_regression_test-routes_tw] /usr/bin/aws
[guidance_regression_test-routes_tw] + [[ ! -d /jenkins/autopilot-maps ]]
[guidance_regression_test-routes_tw] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/TW-170616-136/ /jenkins/autopilot-maps/TW-170616-136
[guidance_regression_test-routes_me] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_me] + scripts/setup.sh
[guidance_regression_test-routes_me] ++ realpath scripts/setup.sh
[guidance_regression_test-routes_me] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[guidance_regression_test-routes_me] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[guidance_regression_test-routes_me] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_me] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_me] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_me] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_me] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_me] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_me] ++ PG_USER=postgres
[guidance_regression_test-routes_me] ++ PG_PASSWD=
[guidance_regression_test-routes_me] ++ PG_DB=postgres
[guidance_regression_test-routes_me] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_me] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_me] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_me] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_me] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_me] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_me] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_me] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_me] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_me] ++ MAPDATA_VERSION=ME-170803-183
[guidance_regression_test-routes_me] ++ MAPDATA_REGION=ME
[guidance_regression_test-routes_me] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[guidance_regression_test-routes_me] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[guidance_regression_test-routes_me] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_me] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] +++ sed -e s/-/_/g
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] + docker images --format '{{.Repository}}:{{.Tag}}'
[guidance_regression_test-routes_me] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_me] docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_me] + [[ -n true ]]
[guidance_regression_test-routes_me] + sync_aws_mapdata
[guidance_regression_test-routes_me] + which aws
[guidance_regression_test-routes_me] /usr/bin/aws
[guidance_regression_test-routes_me] + [[ ! -d /jenkins/autopilot-maps ]]
[guidance_regression_test-routes_me] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/ME-170803-183/ /jenkins/autopilot-maps/ME-170803-183
[guidance_regression_test-routes_tw] + create_network
[guidance_regression_test-routes_tw] + _network_exists_ jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] + network=jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] ++ wc -l
[guidance_regression_test-routes_tw] + network_count=1
[guidance_regression_test-routes_tw] + test 1 -eq 2
[guidance_regression_test-routes_tw] + echo 'Creating network jenkins_ValhallaPipeline_1004_TW'
[guidance_regression_test-routes_tw] Creating network jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] + docker network create jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] a6011d812db1cf25d7abf40f956574cb002f3cc0be8f20dc5121d26a83136109
[guidance_regression_test-routes_tw] + launch_postgis
[guidance_regression_test-routes_tw] + [[ -n yes ]]
[guidance_regression_test-routes_tw] + return 0
[Pipeline] [guidance_regression_test-routes_tw] sh
[guidance_regression_test-routes_tw] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_tw] + scripts/dump-map-info.sh routes_tw
[guidance_regression_test-routes_tw] ++ realpath scripts/dump-map-info.sh
[guidance_regression_test-routes_tw] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[guidance_regression_test-routes_tw] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[guidance_regression_test-routes_tw] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_tw] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_tw] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_tw] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_tw] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_tw] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_tw] ++ PG_USER=postgres
[guidance_regression_test-routes_tw] ++ PG_PASSWD=
[guidance_regression_test-routes_tw] ++ PG_DB=postgres
[guidance_regression_test-routes_tw] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_tw] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_tw] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_tw] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_tw] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_tw] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_tw] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_tw] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_tw] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_tw] ++ MAPDATA_VERSION=TW-170616-136
[guidance_regression_test-routes_tw] ++ MAPDATA_REGION=TW
[guidance_regression_test-routes_tw] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[guidance_regression_test-routes_tw] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[guidance_regression_test-routes_tw] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_tw] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] +++ sed -e s/-/_/g
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] + BOUNDARY=routes_tw
[guidance_regression_test-routes_tw] + dump_map_info routes_tw
[guidance_regression_test-routes_tw] + BOUNDARY=routes_tw
[guidance_regression_test-routes_tw] + [[ -r /jenkins/autopilot-maps/TW-170616-136/VERSION ]]
[guidance_regression_test-routes_tw] + mapdata_version=mapdata-routes_tw.version
[guidance_regression_test-routes_tw] + cp /jenkins/autopilot-maps/TW-170616-136/VERSION mapdata-routes_tw.version
[Pipeline] [guidance_regression_test-routes_tw] sh
[guidance_regression_test-routes_tw] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_tw] + scripts/run-guidance-regression-test.sh routes_tw
[guidance_regression_test-routes_tw] + SUITE=routes_tw
[guidance_regression_test-routes_tw] ++ realpath scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_tw] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_tw] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_tw] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_tw] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_tw] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_tw] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_tw] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_tw] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_tw] ++ PG_USER=postgres
[guidance_regression_test-routes_tw] ++ PG_PASSWD=
[guidance_regression_test-routes_tw] ++ PG_DB=postgres
[guidance_regression_test-routes_tw] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_tw] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_tw] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_tw] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_tw] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_tw] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_tw] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_tw] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_tw] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_tw] ++ MAPDATA_VERSION=TW-170616-136
[guidance_regression_test-routes_tw] ++ MAPDATA_REGION=TW
[guidance_regression_test-routes_tw] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[guidance_regression_test-routes_tw] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[guidance_regression_test-routes_tw] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_tw] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] +++ sed -e s/-/_/g
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] + launch_routing_engine nowait
[guidance_regression_test-routes_tw] + [[ -n '' ]]
[guidance_regression_test-routes_tw] + wait_for_routing_service=nowait
[guidance_regression_test-routes_tw] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P'
[guidance_regression_test-routes_tw] + [[ -d /jenkins/autopilot-maps/TW-170616-136/tm/TW ]]
[guidance_regression_test-routes_tw] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[guidance_regression_test-routes_tw] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[guidance_regression_test-routes_tw] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[guidance_regression_test-routes_kr] + git checkout origin/master
[guidance_regression_test-routes_kr] Note: checking out 'origin/master'.
[guidance_regression_test-routes_kr]
[guidance_regression_test-routes_kr] You are in 'detached HEAD' state. You can look around, make experimental
[guidance_regression_test-routes_kr] changes and commit them, and you can discard any commits you make in this
[guidance_regression_test-routes_kr] state without impacting any branches by performing another checkout.
[guidance_regression_test-routes_kr]
[guidance_regression_test-routes_kr] If you want to create a new branch to retain commits you create, you may
[guidance_regression_test-routes_kr] do so (now or later) by using -b with the checkout command again. Example:
[guidance_regression_test-routes_kr]
[guidance_regression_test-routes_kr]   git checkout -b <new-branch-name>
[guidance_regression_test-routes_kr]
[guidance_regression_test-routes_kr] HEAD is now at 095a4fb... Fix color_tag error
[guidance_regression_test-routes_kr] + git clone ssh://git@localhost:3333/nav/route_validators.git
[guidance_regression_test-routes_kr] Cloning into 'route_validators'...
[guidance_regression_test-routes_tw] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'ln -sf /mapdata/TW-170616-136/tm/TW /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[guidance_regression_test-routes_tw] + local_host=localhost:8002
[guidance_regression_test-routes_tw] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[guidance_regression_test-routes_tw] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[guidance_regression_test-routes_tw] ++ print_regional_request
[guidance_regression_test-routes_tw] ++ case "$MAPDATA_REGION" in
[guidance_regression_test-routes_tw] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_tw] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_tw] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_tw] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_tw] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_tw] + curl_opts='--silent --globoff --connect-timeout 5'
[guidance_regression_test-routes_tw] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_tw] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_kr] + git -C route_validators checkout -f master
[guidance_regression_test-routes_kr] Already on 'master'
[guidance_regression_test-routes_kr] Your branch is up-to-date with 'origin/master'.
[guidance_regression_test-routes_tw] + grep '"error":'
[guidance_regression_test-routes_tw] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[Pipeline] [guidance_regression_test-routes_kr] sh
[guidance_regression_test-routes_kr] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_me] + create_network
[guidance_regression_test-routes_me] + _network_exists_ jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] + network=jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] ++ wc -l
[guidance_regression_test-routes_me] + network_count=1
[guidance_regression_test-routes_me] + test 1 -eq 2
[guidance_regression_test-routes_me] + echo 'Creating network jenkins_ValhallaPipeline_1004_ME'
[guidance_regression_test-routes_me] Creating network jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] + docker network create jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] 4ca7dec736365d76e3ee6e3e58e9c641043cf7e58ba017cb9db66203cec9ba38
[guidance_regression_test-routes_me] + launch_postgis
[guidance_regression_test-routes_me] + [[ -n yes ]]
[guidance_regression_test-routes_me] + return 0
[guidance_regression_test-routes_tw] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[guidance_regression_test-routes_tw] 4e61cc0b5b10        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   5 seconds ago       Up 4 seconds        0.0.0.0:34569->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] + kill_valhalla
[guidance_regression_test-routes_tw] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pkill -f valhalla_route_service
[guidance_regression_test-routes_kr] + scripts/setup.sh
[guidance_regression_test-routes_kr] ++ realpath scripts/setup.sh
[guidance_regression_test-routes_kr] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[guidance_regression_test-routes_kr] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[guidance_regression_test-routes_kr] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_kr] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_kr] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_kr] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_kr] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_kr] ++ POSTGIS_LABEL=localhost
[guidance_regression_test-routes_kr] ++ PG_USER=postgres
[guidance_regression_test-routes_kr] ++ PG_PASSWD=
[guidance_regression_test-routes_kr] ++ PG_DB=postgres
[guidance_regression_test-routes_kr] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_kr] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[guidance_regression_test-routes_kr] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_kr] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_kr] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_kr] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_kr] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_kr] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_kr] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[guidance_regression_test-routes_kr] ++ MAPDATA_VERSION=KR-170530-111
[guidance_regression_test-routes_kr] ++ MAPDATA_REGION=KR
[guidance_regression_test-routes_kr] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[guidance_regression_test-routes_kr] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[guidance_regression_test-routes_kr] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[guidance_regression_test-routes_kr] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=host
[guidance_regression_test-routes_kr] +++ sed -e s/-/_/g
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=host
[guidance_regression_test-routes_kr] + docker images --format '{{.Repository}}:{{.Tag}}'
[guidance_regression_test-routes_kr] + grep 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[guidance_regression_test-routes_kr] 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[guidance_regression_test-routes_kr] + [[ -n true ]]
[guidance_regression_test-routes_kr] + sync_aws_mapdata
[guidance_regression_test-routes_kr] + which aws
[guidance_regression_test-routes_kr] /usr/bin/aws
[guidance_regression_test-routes_kr] + [[ ! -d /home/ec2-user/jenkins/data ]]
[guidance_regression_test-routes_kr] + aws s3 sync --only-show-errors s3://autopilot-maps-kr/osm/release/valhalla/KR-170530-111/ /home/ec2-user/jenkins/data/KR-170530-111
[guidance_regression_test-routes_kr] + create_network
[guidance_regression_test-routes_kr] + _network_exists_ host
[guidance_regression_test-routes_kr] + network=host
[guidance_regression_test-routes_kr] ++ docker network ls --filter name=host
[guidance_regression_test-routes_kr] ++ wc -l
[guidance_regression_test-routes_kr] + network_count=2
[guidance_regression_test-routes_kr] + test 2 -eq 2
[guidance_regression_test-routes_kr] + echo 'Network host already exists, skipping creation'
[guidance_regression_test-routes_kr] Network host already exists, skipping creation
[guidance_regression_test-routes_kr] + launch_postgis
[guidance_regression_test-routes_kr] + [[ -n yes ]]
[guidance_regression_test-routes_kr] + return 0
[Pipeline] [guidance_regression_test-routes_me] sh
[guidance_regression_test-routes_tw] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[guidance_regression_test-routes_tw] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[guidance_regression_test-routes_tw] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[guidance_regression_test-routes_tw] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:/navigation/valhalla-install.tgz
[guidance_regression_test-routes_me] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_me] + scripts/dump-map-info.sh routes_me
[guidance_regression_test-routes_me] ++ realpath scripts/dump-map-info.sh
[guidance_regression_test-routes_me] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[guidance_regression_test-routes_me] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[guidance_regression_test-routes_me] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_me] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_me] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_me] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_me] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_me] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_me] ++ PG_USER=postgres
[guidance_regression_test-routes_me] ++ PG_PASSWD=
[guidance_regression_test-routes_me] ++ PG_DB=postgres
[guidance_regression_test-routes_me] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_me] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_me] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_me] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_me] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_me] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_me] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_me] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_me] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_me] ++ MAPDATA_VERSION=ME-170803-183
[guidance_regression_test-routes_me] ++ MAPDATA_REGION=ME
[guidance_regression_test-routes_me] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[guidance_regression_test-routes_me] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[guidance_regression_test-routes_me] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_me] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] +++ sed -e s/-/_/g
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] + BOUNDARY=routes_me
[guidance_regression_test-routes_me] + dump_map_info routes_me
[guidance_regression_test-routes_me] + BOUNDARY=routes_me
[guidance_regression_test-routes_me] + [[ -r /jenkins/autopilot-maps/ME-170803-183/VERSION ]]
[guidance_regression_test-routes_me] + mapdata_version=mapdata-routes_me.version
[guidance_regression_test-routes_me] + cp /jenkins/autopilot-maps/ME-170803-183/VERSION mapdata-routes_me.version
[Pipeline] [guidance_regression_test-routes_me] sh
[guidance_regression_test-routes_me] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_me] + scripts/run-guidance-regression-test.sh routes_me
[guidance_regression_test-routes_me] + SUITE=routes_me
[guidance_regression_test-routes_me] ++ realpath scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_me] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_me] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_me] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_me] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_me] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_me] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_me] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_me] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_me] ++ PG_USER=postgres
[guidance_regression_test-routes_me] ++ PG_PASSWD=
[guidance_regression_test-routes_me] ++ PG_DB=postgres
[guidance_regression_test-routes_me] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_me] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_me] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_me] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_me] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_me] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_me] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_me] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_me] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_me] ++ MAPDATA_VERSION=ME-170803-183
[guidance_regression_test-routes_me] ++ MAPDATA_REGION=ME
[guidance_regression_test-routes_me] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[guidance_regression_test-routes_me] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[guidance_regression_test-routes_me] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_me] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] +++ sed -e s/-/_/g
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] + launch_routing_engine nowait
[guidance_regression_test-routes_me] + [[ -n '' ]]
[guidance_regression_test-routes_me] + wait_for_routing_service=nowait
[guidance_regression_test-routes_me] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P'
[guidance_regression_test-routes_me] + [[ -d /jenkins/autopilot-maps/ME-170803-183/tm/ME ]]
[guidance_regression_test-routes_me] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[guidance_regression_test-routes_me] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[guidance_regression_test-routes_me] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[guidance_regression_test-routes_tw] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[guidance_regression_test-routes_me] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'ln -sf /mapdata/ME-170803-183/tm/ME /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[guidance_regression_test-routes_me] + local_host=localhost:8002
[guidance_regression_test-routes_me] + [[ jenkins_ValhallaPipeline_1004_ME == \h\o\s\t ]]
[guidance_regression_test-routes_me] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002
[guidance_regression_test-routes_me] ++ print_regional_request
[guidance_regression_test-routes_me] ++ case "$MAPDATA_REGION" in
[guidance_regression_test-routes_me] ++ request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_me] ++ echo 'route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_me] + request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_me] + local_request='http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_me] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_me] + curl_opts='--silent --globoff --connect-timeout 5'
[guidance_regression_test-routes_me] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[Pipeline] [guidance_regression_test-routes_kr] sh
[guidance_regression_test-routes_kr] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_kr] + scripts/dump-map-info.sh routes_kr
[guidance_regression_test-routes_kr] ++ realpath scripts/dump-map-info.sh
[guidance_regression_test-routes_kr] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[guidance_regression_test-routes_kr] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[guidance_regression_test-routes_kr] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_kr] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_kr] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_kr] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_kr] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_kr] ++ POSTGIS_LABEL=localhost
[guidance_regression_test-routes_kr] ++ PG_USER=postgres
[guidance_regression_test-routes_kr] ++ PG_PASSWD=
[guidance_regression_test-routes_kr] ++ PG_DB=postgres
[guidance_regression_test-routes_kr] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_kr] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[guidance_regression_test-routes_kr] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_kr] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_kr] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_kr] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_kr] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_kr] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_kr] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[guidance_regression_test-routes_kr] ++ MAPDATA_VERSION=KR-170530-111
[guidance_regression_test-routes_kr] ++ MAPDATA_REGION=KR
[guidance_regression_test-routes_kr] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[guidance_regression_test-routes_kr] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[guidance_regression_test-routes_kr] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[guidance_regression_test-routes_kr] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=host
[guidance_regression_test-routes_kr] +++ sed -e s/-/_/g
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=host
[guidance_regression_test-routes_kr] + BOUNDARY=routes_kr
[guidance_regression_test-routes_kr] + dump_map_info routes_kr
[guidance_regression_test-routes_kr] + BOUNDARY=routes_kr
[guidance_regression_test-routes_kr] + [[ -r /home/ec2-user/jenkins/data/KR-170530-111/VERSION ]]
[guidance_regression_test-routes_kr] + mapdata_version=mapdata-routes_kr.version
[guidance_regression_test-routes_kr] + cp /home/ec2-user/jenkins/data/KR-170530-111/VERSION mapdata-routes_kr.version
[guidance_regression_test-routes_me] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[Pipeline] [guidance_regression_test-routes_kr] unstash
[guidance_regression_test-routes_me] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_me] + grep '"error":'
[guidance_regression_test-routes_tw] + trap post_process EXIT
[guidance_regression_test-routes_tw] + [[ TW == \K\R ]]
[guidance_regression_test-routes_tw] ++ cat /jenkins/workspace/ValhallaPipeline/valhalla-long-commit.txt
[guidance_regression_test-routes_tw] + VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb
[guidance_regression_test-routes_tw] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'cd /navigation/valhalla     && git fetch -q     && git checkout -q -f 2cd1734fa669c180f007999329e54fefc0d07feb'
[guidance_regression_test-routes_me] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[guidance_regression_test-routes_me] 71af3273a362        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   3 seconds ago       Up 3 seconds        0.0.0.0:35238->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] + kill_valhalla
[guidance_regression_test-routes_me] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME pkill -f valhalla_route_service
[guidance_regression_test-routes_me] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[guidance_regression_test-routes_me] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[guidance_regression_test-routes_me] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[guidance_regression_test-routes_me] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:/navigation/valhalla-install.tgz
[guidance_regression_test-routes_tw] + [[ routes_tw != \s\c\r\i\p\t\_\t\e\s\t\s ]]
[guidance_regression_test-routes_tw] ++ docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'cd /navigation/valhalla/test_requests/tesla/routes_tw                  && echo */'
[guidance_regression_test-routes_tw] + MAPDATA_DIRS='TW-170614-129/ current/'
[guidance_regression_test-routes_tw] + TEST_ENV='VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib'
[guidance_regression_test-routes_tw] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'rm -rf /navigation/valhalla/results && mkdir /navigation/valhalla/results'
[guidance_regression_test-routes_tw] + [[ ! -z TW-170614-129/ current/ ]]
[guidance_regression_test-routes_tw] + MAPDATA_DIRS=($MAPDATA_DIRS)
[guidance_regression_test-routes_tw] + for d in '"${MAPDATA_DIRS[@]}"'
[guidance_regression_test-routes_tw] + d=TW-170614-129
[guidance_regression_test-routes_tw] + [[ TW-170614-129 == \c\u\r\r\e\n\t ]]
[guidance_regression_test-routes_tw] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'ln -sf --no-dereference /mapdata/TW-170614-129/tm/TW /data'
[guidance_regression_test-routes_tw] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'cd /navigation/valhalla       && VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib ./test/test_guidance.sh test_requests/tesla/routes_tw.txt TW-170614-129 > results/routes_tw-TW-170614-129.log'
[guidance_regression_test-routes_me] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[guidance_regression_test-routes_me] + trap post_process EXIT
[guidance_regression_test-routes_me] + [[ ME == \K\R ]]
[guidance_regression_test-routes_me] ++ cat /jenkins/workspace/ValhallaPipeline/valhalla-long-commit.txt
[guidance_regression_test-routes_me] + VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb
[guidance_regression_test-routes_me] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'cd /navigation/valhalla     && git fetch -q     && git checkout -q -f 2cd1734fa669c180f007999329e54fefc0d07feb'
[guidance_regression_test-routes_me] + [[ routes_me != \s\c\r\i\p\t\_\t\e\s\t\s ]]
[guidance_regression_test-routes_me] ++ docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'cd /navigation/valhalla/test_requests/tesla/routes_me                  && echo */'
[guidance_regression_test-routes_me] + MAPDATA_DIRS='ME-170803-183/ current/'
[guidance_regression_test-routes_me] + TEST_ENV='VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib'
[guidance_regression_test-routes_me] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'rm -rf /navigation/valhalla/results && mkdir /navigation/valhalla/results'
[guidance_regression_test-routes_me] + [[ ! -z ME-170803-183/ current/ ]]
[guidance_regression_test-routes_me] + MAPDATA_DIRS=($MAPDATA_DIRS)
[guidance_regression_test-routes_me] + for d in '"${MAPDATA_DIRS[@]}"'
[guidance_regression_test-routes_me] + d=ME-170803-183
[guidance_regression_test-routes_me] + [[ ME-170803-183 == \c\u\r\r\e\n\t ]]
[guidance_regression_test-routes_me] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'ln -sf --no-dereference /mapdata/ME-170803-183/tm/ME /data'
[guidance_regression_test-routes_me] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'cd /navigation/valhalla       && VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib ./test/test_guidance.sh test_requests/tesla/routes_me.txt ME-170803-183 > results/routes_me-ME-170803-183.log'
[Pipeline] [guidance_regression_test-routes_kr] sh
[guidance_regression_test-routes_kr] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_kr] + scripts/run-guidance-regression-test.sh routes_kr
[guidance_regression_test-routes_kr] + SUITE=routes_kr
[guidance_regression_test-routes_kr] ++ realpath scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_kr] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_kr] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_kr] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_kr] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_kr] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_kr] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_kr] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_kr] ++ POSTGIS_LABEL=localhost
[guidance_regression_test-routes_kr] ++ PG_USER=postgres
[guidance_regression_test-routes_kr] ++ PG_PASSWD=
[guidance_regression_test-routes_kr] ++ PG_DB=postgres
[guidance_regression_test-routes_kr] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_kr] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[guidance_regression_test-routes_kr] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_kr] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_kr] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_kr] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_kr] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_kr] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_kr] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[guidance_regression_test-routes_kr] ++ MAPDATA_VERSION=KR-170530-111
[guidance_regression_test-routes_kr] ++ MAPDATA_REGION=KR
[guidance_regression_test-routes_kr] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[guidance_regression_test-routes_kr] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[guidance_regression_test-routes_kr] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[guidance_regression_test-routes_kr] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=host
[guidance_regression_test-routes_kr] +++ sed -e s/-/_/g
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=host
[guidance_regression_test-routes_kr] + launch_routing_engine nowait
[guidance_regression_test-routes_kr] + [[ -n '' ]]
[guidance_regression_test-routes_kr] + wait_for_routing_service=nowait
[guidance_regression_test-routes_kr] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P'
[guidance_regression_test-routes_kr] + [[ -d /home/ec2-user/jenkins/data/KR-170530-111/tm/KR ]]
[guidance_regression_test-routes_kr] + routing_args+=' --volume /home/ec2-user/jenkins/data:/mapdata'
[guidance_regression_test-routes_kr] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[guidance_regression_test-routes_kr] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[guidance_regression_test-routes_kr] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'ln -sf /mapdata/KR-170530-111/tm/KR /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[guidance_regression_test-routes_kr] + local_host=localhost:8002
[guidance_regression_test-routes_kr] + [[ host == \h\o\s\t ]]
[guidance_regression_test-routes_kr] ++ docker inspect --format '{{.Config.Hostname}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + remote_host=ip-172-31-21-244:8002
[guidance_regression_test-routes_kr] ++ print_regional_request
[guidance_regression_test-routes_kr] ++ case "$MAPDATA_REGION" in
[guidance_regression_test-routes_kr] ++ request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_kr] ++ echo 'route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_kr] + request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_kr] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_kr] + remote_request='http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_kr] + curl_opts='--silent --globoff --connect-timeout 5'
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_kr] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_kr] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_kr] + grep '"error":'
[guidance_regression_test-routes_kr] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] CONTAINER ID        IMAGE                                                              COMMAND               CREATED             STATUS              PORTS               NAMES
[guidance_regression_test-routes_kr] f60d454707d8        123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest   "tail -f /dev/null"   6 seconds ago       Up 6 seconds                            ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + kill_valhalla
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR pkill -f valhalla_route_service
[guidance_regression_test-routes_kr] + install_valhalla_from_package /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[guidance_regression_test-routes_kr] + inputfile=/home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[guidance_regression_test-routes_kr] + [[ ! -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[guidance_regression_test-routes_kr] + docker cp /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR:/navigation/valhalla-install.tgz
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[guidance_regression_test-routes_kr] + trap post_process EXIT
[guidance_regression_test-routes_kr] + [[ KR == \K\R ]]
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'cd /navigation/valhalla     && git remote set-url origin ssh://git@localhost:3333/nav/valhalla.git     && git remote -v'
[guidance_regression_test-routes_kr] origin ssh://git@localhost:3333/nav/valhalla.git (fetch)
[guidance_regression_test-routes_kr] origin ssh://git@localhost:3333/nav/valhalla.git (push)
[guidance_regression_test-routes_kr] ++ cat /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-long-commit.txt
[guidance_regression_test-routes_kr] + VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'cd /navigation/valhalla     && git fetch -q     && git checkout -q -f 2cd1734fa669c180f007999329e54fefc0d07feb'
[guidance_regression_test-routes_me] + for d in '"${MAPDATA_DIRS[@]}"'
[guidance_regression_test-routes_me] + d=current
[guidance_regression_test-routes_me] + [[ current == \c\u\r\r\e\n\t ]]
[guidance_regression_test-routes_me] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'ln -sf --no-dereference /mapdata/ME-170803-183/tm/ME /data'
[guidance_regression_test-routes_me] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'cd /navigation/valhalla       && VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib ./test/test_guidance.sh test_requests/tesla/routes_me.txt current > results/routes_me-current.log'
[guidance_regression_test-routes_uca] + create_network
[guidance_regression_test-routes_uca] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] + network=jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] ++ wc -l
[guidance_regression_test-routes_uca] + network_count=1
[guidance_regression_test-routes_uca] + test 1 -eq 2
[guidance_regression_test-routes_uca] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[guidance_regression_test-routes_uca] Creating network jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] + docker network create jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] ba6a7bd03be5d4c2cf7463e6aceab7e72f3fe40743fcb4b0659529590c4ebcc6
[guidance_regression_test-routes_uca] + launch_postgis
[guidance_regression_test-routes_uca] + [[ -n yes ]]
[guidance_regression_test-routes_uca] + return 0
[guidance_regression_test-routes_tw] + for d in '"${MAPDATA_DIRS[@]}"'
[guidance_regression_test-routes_tw] + d=current
[guidance_regression_test-routes_tw] + [[ current == \c\u\r\r\e\n\t ]]
[guidance_regression_test-routes_tw] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'ln -sf --no-dereference /mapdata/TW-170616-136/tm/TW /data'
[guidance_regression_test-routes_tw] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'cd /navigation/valhalla       && VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib ./test/test_guidance.sh test_requests/tesla/routes_tw.txt current > results/routes_tw-current.log'
[Pipeline] [guidance_regression_test-routes_uca] sh
[guidance_regression_test-routes_uca] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_uca] + scripts/dump-map-info.sh routes_uca
[guidance_regression_test-routes_uca] ++ realpath scripts/dump-map-info.sh
[guidance_regression_test-routes_uca] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[guidance_regression_test-routes_uca] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[guidance_regression_test-routes_uca] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_uca] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_uca] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_uca] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_uca] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_uca] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_uca] ++ PG_USER=postgres
[guidance_regression_test-routes_uca] ++ PG_PASSWD=
[guidance_regression_test-routes_uca] ++ PG_DB=postgres
[guidance_regression_test-routes_uca] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_uca] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_uca] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_uca] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_uca] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_uca] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_uca] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_uca] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_uca] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_uca] ++ MAPDATA_VERSION=NA-170714-148
[guidance_regression_test-routes_uca] ++ MAPDATA_REGION=NA
[guidance_regression_test-routes_uca] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[guidance_regression_test-routes_uca] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[guidance_regression_test-routes_uca] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_uca] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] +++ sed -e s/-/_/g
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] + BOUNDARY=routes_uca
[guidance_regression_test-routes_uca] + dump_map_info routes_uca
[guidance_regression_test-routes_uca] + BOUNDARY=routes_uca
[guidance_regression_test-routes_uca] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[guidance_regression_test-routes_uca] + mapdata_version=mapdata-routes_uca.version
[guidance_regression_test-routes_uca] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-routes_uca.version
[Pipeline] [guidance_regression_test-routes_uca] sh
[guidance_regression_test-routes_uca] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_uca] + scripts/run-guidance-regression-test.sh routes_uca
[guidance_regression_test-routes_uca] + SUITE=routes_uca
[guidance_regression_test-routes_uca] ++ realpath scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_uca] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_uca] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-guidance-regression-test.sh
[guidance_regression_test-routes_uca] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_uca] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_uca] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_uca] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_uca] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_uca] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_uca] ++ PG_USER=postgres
[guidance_regression_test-routes_uca] ++ PG_PASSWD=
[guidance_regression_test-routes_uca] ++ PG_DB=postgres
[guidance_regression_test-routes_uca] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_uca] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_uca] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_uca] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_uca] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_uca] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_uca] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_uca] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_uca] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_uca] ++ MAPDATA_VERSION=NA-170714-148
[guidance_regression_test-routes_uca] ++ MAPDATA_REGION=NA
[guidance_regression_test-routes_uca] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[guidance_regression_test-routes_uca] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[guidance_regression_test-routes_uca] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_uca] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] +++ sed -e s/-/_/g
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] + launch_routing_engine nowait
[guidance_regression_test-routes_uca] + [[ -n '' ]]
[guidance_regression_test-routes_uca] + wait_for_routing_service=nowait
[guidance_regression_test-routes_uca] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[guidance_regression_test-routes_uca] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[guidance_regression_test-routes_uca] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[guidance_regression_test-routes_uca] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[guidance_regression_test-routes_uca] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[guidance_regression_test-routes_uca] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[guidance_regression_test-routes_uca] + local_host=localhost:8002
[guidance_regression_test-routes_uca] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[guidance_regression_test-routes_uca] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[guidance_regression_test-routes_uca] ++ print_regional_request
[guidance_regression_test-routes_uca] ++ case "$MAPDATA_REGION" in
[guidance_regression_test-routes_uca] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_uca] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_uca] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_uca] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_uca] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_uca] + curl_opts='--silent --globoff --connect-timeout 5'
[guidance_regression_test-routes_uca] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_uca] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_me] + post_process
[guidance_regression_test-routes_me] + docker cp ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:/navigation/valhalla/results .
[guidance_regression_test-routes_me] + cleanup_routing_engine
[guidance_regression_test-routes_me] + [[ -n '' ]]
[guidance_regression_test-routes_me] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME'
[guidance_regression_test-routes_me] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] + gzip
[guidance_regression_test-routes_me] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_uca] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[guidance_regression_test-routes_uca] + grep '"error":'
[guidance_regression_test-routes_tw] + post_process
[guidance_regression_test-routes_tw] + docker cp ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:/navigation/valhalla/results .
[guidance_regression_test-routes_tw] + cleanup_routing_engine
[guidance_regression_test-routes_tw] + [[ -n '' ]]
[guidance_regression_test-routes_tw] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[guidance_regression_test-routes_tw] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] + gzip
[guidance_regression_test-routes_tw] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_uca] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[guidance_regression_test-routes_uca] 41a2b3787bf1        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   10 seconds ago      Up 10 seconds       0.0.0.0:34676->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] + kill_valhalla
[guidance_regression_test-routes_uca] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[guidance_regression_test-routes_uca] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[guidance_regression_test-routes_uca] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[guidance_regression_test-routes_uca] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[guidance_regression_test-routes_uca] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[guidance_regression_test-routes_uca] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[guidance_regression_test-routes_uca] + trap post_process EXIT
[guidance_regression_test-routes_uca] + [[ NA == \K\R ]]
[guidance_regression_test-routes_uca] ++ cat /jenkins/workspace/ValhallaPipeline/valhalla-long-commit.txt
[guidance_regression_test-routes_uca] + VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb
[guidance_regression_test-routes_uca] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'cd /navigation/valhalla     && git fetch -q     && git checkout -q -f 2cd1734fa669c180f007999329e54fefc0d07feb'
[guidance_regression_test-routes_uca] + [[ routes_uca != \s\c\r\i\p\t\_\t\e\s\t\s ]]
[guidance_regression_test-routes_uca] ++ docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'cd /navigation/valhalla/test_requests/tesla/routes_uca                  && echo */'
[guidance_regression_test-routes_uca] + MAPDATA_DIRS='NA-170618-138/ current/'
[guidance_regression_test-routes_uca] + TEST_ENV='VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib'
[guidance_regression_test-routes_uca] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'rm -rf /navigation/valhalla/results && mkdir /navigation/valhalla/results'
[guidance_regression_test-routes_uca] + [[ ! -z NA-170618-138/ current/ ]]
[guidance_regression_test-routes_uca] + MAPDATA_DIRS=($MAPDATA_DIRS)
[guidance_regression_test-routes_uca] + for d in '"${MAPDATA_DIRS[@]}"'
[guidance_regression_test-routes_uca] + d=NA-170618-138
[guidance_regression_test-routes_uca] + [[ NA-170618-138 == \c\u\r\r\e\n\t ]]
[guidance_regression_test-routes_uca] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf --no-dereference /mapdata/NA-170618-138/tm/NA /data'
[guidance_regression_test-routes_uca] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'cd /navigation/valhalla       && VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib ./test/test_guidance.sh test_requests/tesla/routes_uca.txt NA-170618-138 > results/routes_uca-NA-170618-138.log'
[guidance_regression_test-routes_me] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[Pipeline] [guidance_regression_test-routes_me] stash
[guidance_regression_test-routes_me] Stashed 94 file(s)
[Pipeline] [guidance_regression_test-routes_me] sh
[guidance_regression_test-routes_tw] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_me] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_me] + scripts/cleanup.sh
[guidance_regression_test-routes_me] ++ realpath scripts/cleanup.sh
[guidance_regression_test-routes_me] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[guidance_regression_test-routes_me] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[guidance_regression_test-routes_me] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_me] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_me] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_me] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_me] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_me] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_me] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_me] ++ PG_USER=postgres
[guidance_regression_test-routes_me] ++ PG_PASSWD=
[guidance_regression_test-routes_me] ++ PG_DB=postgres
[guidance_regression_test-routes_me] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_me] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_me] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_me] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_me] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_me] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_me] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_me] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_me] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_me] ++ MAPDATA_VERSION=ME-170803-183
[guidance_regression_test-routes_me] ++ MAPDATA_REGION=ME
[guidance_regression_test-routes_me] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[guidance_regression_test-routes_me] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[guidance_regression_test-routes_me] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_me] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] +++ sed -e s/-/_/g
[guidance_regression_test-routes_me] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] + cleanup_network
[guidance_regression_test-routes_me] + [[ jenkins_ValhallaPipeline_1004_ME != \h\o\s\t ]]
[guidance_regression_test-routes_me] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[guidance_regression_test-routes_me] + leading='s/^[[:space:]]*//'
[guidance_regression_test-routes_me] + trailing='s/[[:space:]]*$//'
[guidance_regression_test-routes_me] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[guidance_regression_test-routes_me] ++ tr -s ' '
[guidance_regression_test-routes_me] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_ME'
[guidance_regression_test-routes_me] Cleaning up network jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] + docker network rm jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] jenkins_ValhallaPipeline_1004_ME
[guidance_regression_test-routes_me] + cleanup_routing_engine
[guidance_regression_test-routes_me] + [[ -n '' ]]
[guidance_regression_test-routes_me] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME'
[guidance_regression_test-routes_me] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] + gzip
[guidance_regression_test-routes_me] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[guidance_regression_test-routes_me] + true
[Pipeline] [guidance_regression_test-routes_me] }
[Pipeline] [guidance_regression_test-routes_me] // withEnv
[Pipeline] [guidance_regression_test-routes_me] }
[Pipeline] [guidance_regression_test-routes_me] // node
[Pipeline] [guidance_regression_test-routes_me] }
[guidance_regression_test-routes_tw] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[Pipeline] [guidance_regression_test-routes_tw] stash
[guidance_regression_test-routes_tw] Stashed 94 file(s)
[Pipeline] [guidance_regression_test-routes_tw] sh
[guidance_regression_test-routes_tw] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_tw] + scripts/cleanup.sh
[guidance_regression_test-routes_tw] ++ realpath scripts/cleanup.sh
[guidance_regression_test-routes_tw] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[guidance_regression_test-routes_tw] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[guidance_regression_test-routes_tw] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_tw] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_tw] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_tw] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_tw] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_tw] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_tw] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_tw] ++ PG_USER=postgres
[guidance_regression_test-routes_tw] ++ PG_PASSWD=
[guidance_regression_test-routes_tw] ++ PG_DB=postgres
[guidance_regression_test-routes_tw] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_tw] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_tw] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_tw] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_tw] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_tw] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_tw] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_tw] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_tw] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_tw] ++ MAPDATA_VERSION=TW-170616-136
[guidance_regression_test-routes_tw] ++ MAPDATA_REGION=TW
[guidance_regression_test-routes_tw] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[guidance_regression_test-routes_tw] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[guidance_regression_test-routes_tw] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_tw] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] +++ sed -e s/-/_/g
[guidance_regression_test-routes_tw] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] + cleanup_network
[guidance_regression_test-routes_tw] + [[ jenkins_ValhallaPipeline_1004_TW != \h\o\s\t ]]
[guidance_regression_test-routes_tw] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[guidance_regression_test-routes_tw] + leading='s/^[[:space:]]*//'
[guidance_regression_test-routes_tw] + trailing='s/[[:space:]]*$//'
[guidance_regression_test-routes_tw] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] ++ tr -s ' '
[guidance_regression_test-routes_tw] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[guidance_regression_test-routes_tw] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_TW'
[guidance_regression_test-routes_tw] Cleaning up network jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] + docker network rm jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] jenkins_ValhallaPipeline_1004_TW
[guidance_regression_test-routes_tw] + cleanup_routing_engine
[guidance_regression_test-routes_tw] + [[ -n '' ]]
[guidance_regression_test-routes_tw] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[guidance_regression_test-routes_tw] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] + gzip
[guidance_regression_test-routes_tw] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[guidance_regression_test-routes_tw] + true
[Pipeline] [guidance_regression_test-routes_tw] }
[Pipeline] [guidance_regression_test-routes_tw] // withEnv
[Pipeline] [guidance_regression_test-routes_tw] }
[Pipeline] [guidance_regression_test-routes_tw] // node
[Pipeline] [guidance_regression_test-routes_tw] }
[guidance_regression_test-routes_kr] + [[ routes_kr != \s\c\r\i\p\t\_\t\e\s\t\s ]]
[guidance_regression_test-routes_kr] ++ docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'cd /navigation/valhalla/test_requests/tesla/routes_kr                  && echo */'
[guidance_regression_test-routes_kr] + MAPDATA_DIRS='KR-170511-97/ current/'
[guidance_regression_test-routes_kr] + TEST_ENV='VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib'
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'rm -rf /navigation/valhalla/results && mkdir /navigation/valhalla/results'
[guidance_regression_test-routes_kr] + [[ ! -z KR-170511-97/ current/ ]]
[guidance_regression_test-routes_kr] + MAPDATA_DIRS=($MAPDATA_DIRS)
[guidance_regression_test-routes_kr] + for d in '"${MAPDATA_DIRS[@]}"'
[guidance_regression_test-routes_kr] + d=KR-170511-97
[guidance_regression_test-routes_kr] + [[ KR-170511-97 == \c\u\r\r\e\n\t ]]
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'ln -sf --no-dereference /mapdata/KR-170511-97/tm/KR /data'
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'cd /navigation/valhalla       && VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib ./test/test_guidance.sh test_requests/tesla/routes_kr.txt KR-170511-97 > results/routes_kr-KR-170511-97.log'
[guidance_regression_test-routes_kr] + for d in '"${MAPDATA_DIRS[@]}"'
[guidance_regression_test-routes_kr] + d=current
[guidance_regression_test-routes_kr] + [[ current == \c\u\r\r\e\n\t ]]
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'ln -sf --no-dereference /mapdata/KR-170530-111/tm/KR /data'
[guidance_regression_test-routes_kr] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'cd /navigation/valhalla       && VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib ./test/test_guidance.sh test_requests/tesla/routes_kr.txt current > results/routes_kr-current.log'
[guidance_regression_test-routes_kr] + post_process
[guidance_regression_test-routes_kr] + docker cp ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR:/navigation/valhalla/results .
[guidance_regression_test-routes_kr] + cleanup_routing_engine
[guidance_regression_test-routes_kr] + [[ -n '' ]]
[guidance_regression_test-routes_kr] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR'
[guidance_regression_test-routes_kr] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + gzip
[guidance_regression_test-routes_kr] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[Pipeline] [guidance_regression_test-routes_kr] stash
[guidance_regression_test-routes_kr] Stashed 144 file(s)
[Pipeline] [guidance_regression_test-routes_kr] }
[Pipeline] [guidance_regression_test-routes_kr] // timeout
[Pipeline] [guidance_regression_test-routes_kr] sh
[guidance_regression_test-routes_kr] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_kr] + scripts/cleanup.sh
[guidance_regression_test-routes_kr] ++ realpath scripts/cleanup.sh
[guidance_regression_test-routes_kr] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[guidance_regression_test-routes_kr] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[guidance_regression_test-routes_kr] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_kr] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_kr] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_kr] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_kr] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_kr] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_kr] ++ POSTGIS_LABEL=localhost
[guidance_regression_test-routes_kr] ++ PG_USER=postgres
[guidance_regression_test-routes_kr] ++ PG_PASSWD=
[guidance_regression_test-routes_kr] ++ PG_DB=postgres
[guidance_regression_test-routes_kr] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_kr] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[guidance_regression_test-routes_kr] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_kr] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_kr] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_kr] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_kr] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_kr] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_kr] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[guidance_regression_test-routes_kr] ++ MAPDATA_VERSION=KR-170530-111
[guidance_regression_test-routes_kr] ++ MAPDATA_REGION=KR
[guidance_regression_test-routes_kr] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[guidance_regression_test-routes_kr] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[guidance_regression_test-routes_kr] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[guidance_regression_test-routes_kr] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=host
[guidance_regression_test-routes_kr] +++ sed -e s/-/_/g
[guidance_regression_test-routes_kr] ++ TEST_NETWORK=host
[guidance_regression_test-routes_kr] + cleanup_network
[guidance_regression_test-routes_kr] + [[ host != \h\o\s\t ]]
[guidance_regression_test-routes_kr] + echo 'Network '\''host'\'' cannot be cleaned up.. skipping'
[guidance_regression_test-routes_kr] Network 'host' cannot be cleaned up.. skipping
[guidance_regression_test-routes_kr] + cleanup_routing_engine
[guidance_regression_test-routes_kr] + [[ -n '' ]]
[guidance_regression_test-routes_kr] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR'
[guidance_regression_test-routes_kr] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + gzip
[guidance_regression_test-routes_kr] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[guidance_regression_test-routes_kr] + true
[Pipeline] [guidance_regression_test-routes_kr] }
[Pipeline] [guidance_regression_test-routes_kr] // withEnv
[Pipeline] [guidance_regression_test-routes_kr] }
[Pipeline] [guidance_regression_test-routes_kr] // node
[Pipeline] [guidance_regression_test-routes_kr] }
[guidance_regression_test-routes_uca] + for d in '"${MAPDATA_DIRS[@]}"'
[guidance_regression_test-routes_uca] + d=current
[guidance_regression_test-routes_uca] + [[ current == \c\u\r\r\e\n\t ]]
[guidance_regression_test-routes_uca] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf --no-dereference /mapdata/NA-170714-148/tm/NA /data'
[guidance_regression_test-routes_uca] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'cd /navigation/valhalla       && VALHALLA_COMMIT=2cd1734fa669c180f007999329e54fefc0d07feb VALHALLA_BIN=/usr/local/bin VALHALLA_LIB=/usr/local/lib ./test/test_guidance.sh test_requests/tesla/routes_uca.txt current > results/routes_uca-current.log'
[guidance_regression_test-routes_uca] + post_process
[guidance_regression_test-routes_uca] + docker cp ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla/results .
[guidance_regression_test-routes_uca] + cleanup_routing_engine
[guidance_regression_test-routes_uca] + [[ -n '' ]]
[guidance_regression_test-routes_uca] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[guidance_regression_test-routes_uca] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] + gzip
[guidance_regression_test-routes_uca] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [guidance_regression_test-routes_uca] stash
[guidance_regression_test-routes_uca] Stashed 606 file(s)
[Pipeline] [guidance_regression_test-routes_uca] sh
[guidance_regression_test-routes_uca] [ValhallaPipeline] Running shell script
[guidance_regression_test-routes_uca] + scripts/cleanup.sh
[guidance_regression_test-routes_uca] ++ realpath scripts/cleanup.sh
[guidance_regression_test-routes_uca] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[guidance_regression_test-routes_uca] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[guidance_regression_test-routes_uca] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[guidance_regression_test-routes_uca] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[guidance_regression_test-routes_uca] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[guidance_regression_test-routes_uca] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[guidance_regression_test-routes_uca] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[guidance_regression_test-routes_uca] ++ POSTGIS=mdillon/postgis
[guidance_regression_test-routes_uca] ++ POSTGIS_LABEL=pg.test.com
[guidance_regression_test-routes_uca] ++ PG_USER=postgres
[guidance_regression_test-routes_uca] ++ PG_PASSWD=
[guidance_regression_test-routes_uca] ++ PG_DB=postgres
[guidance_regression_test-routes_uca] ++ INSIGHT_SCHEMA=insight
[guidance_regression_test-routes_uca] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[guidance_regression_test-routes_uca] ++ ROUTE_VALIDATORS_BRANCH=master
[guidance_regression_test-routes_uca] ++ VALHALLA_BRANCH=origin/master
[guidance_regression_test-routes_uca] ++ NAME_SERVER=12.34.5.67
[guidance_regression_test-routes_uca] ++ VALHALLA_CONCURRENCY=
[guidance_regression_test-routes_uca] ++ BASELINE_FILE=./baseline.txt
[guidance_regression_test-routes_uca] ++ BUILD_FILE=./build.txt
[guidance_regression_test-routes_uca] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[guidance_regression_test-routes_uca] ++ MAPDATA_VERSION=NA-170714-148
[guidance_regression_test-routes_uca] ++ MAPDATA_REGION=NA
[guidance_regression_test-routes_uca] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[guidance_regression_test-routes_uca] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[guidance_regression_test-routes_uca] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[guidance_regression_test-routes_uca] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] +++ sed -e s/-/_/g
[guidance_regression_test-routes_uca] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] + cleanup_network
[guidance_regression_test-routes_uca] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[guidance_regression_test-routes_uca] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[guidance_regression_test-routes_uca] + leading='s/^[[:space:]]*//'
[guidance_regression_test-routes_uca] + trailing='s/[[:space:]]*$//'
[guidance_regression_test-routes_uca] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[guidance_regression_test-routes_uca] ++ tr -s ' '
[guidance_regression_test-routes_uca] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[guidance_regression_test-routes_uca] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] + docker network rm jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] jenkins_ValhallaPipeline_1004_NA
[guidance_regression_test-routes_uca] + cleanup_routing_engine
[guidance_regression_test-routes_uca] + [[ -n '' ]]
[guidance_regression_test-routes_uca] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[guidance_regression_test-routes_uca] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] + gzip
[guidance_regression_test-routes_uca] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[guidance_regression_test-routes_uca] + true
[Pipeline] [guidance_regression_test-routes_uca] }
[Pipeline] [guidance_regression_test-routes_uca] // withEnv
[Pipeline] [guidance_regression_test-routes_uca] }
[Pipeline] [guidance_regression_test-routes_uca] // node
[Pipeline] [guidance_regression_test-routes_uca] }
[Pipeline] // parallel
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Valhalla Tests)
[Pipeline] parallel
[Pipeline] [valhalla_route_calculation_atlanta_boundary] { (Branch: valhalla_route_calculation_atlanta_boundary)
[Pipeline] [valhalla_route_calculation_austin_boundary] { (Branch: valhalla_route_calculation_austin_boundary)
[Pipeline] [valhalla_route_calculation_bay_boundary] { (Branch: valhalla_route_calculation_bay_boundary)
[Pipeline] [valhalla_route_calculation_chicago_boundary] { (Branch: valhalla_route_calculation_chicago_boundary)
[Pipeline] [valhalla_route_calculation_dallas_boundary] { (Branch: valhalla_route_calculation_dallas_boundary)
[Pipeline] [valhalla_route_calculation_houston_boundary] { (Branch: valhalla_route_calculation_houston_boundary)
[Pipeline] [valhalla_route_calculation_la_boundary] { (Branch: valhalla_route_calculation_la_boundary)
[Pipeline] [valhalla_route_calculation_san_diego_boundary] { (Branch: valhalla_route_calculation_san_diego_boundary)
[Pipeline] [valhalla_route_calculation_seattle_boundary] { (Branch: valhalla_route_calculation_seattle_boundary)
[Pipeline] [valhalla_route_calculation_south_korea_boundary] { (Branch: valhalla_route_calculation_south_korea_boundary)
[Pipeline] [valhalla_route_calculation_seoul_boundary] { (Branch: valhalla_route_calculation_seoul_boundary)
[Pipeline] [valhalla_route_calculation_taiwan_boundary] { (Branch: valhalla_route_calculation_taiwan_boundary)
[Pipeline] [valhalla_route_calculation_taipei_boundary] { (Branch: valhalla_route_calculation_taipei_boundary)
[Pipeline] [valhalla_route_calculation_houston_regression_test] { (Branch: valhalla_route_calculation_houston_regression_test)
[Pipeline] [valhalla_route_calculation_taipei_regression_test] { (Branch: valhalla_route_calculation_taipei_regression_test)
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] { (Branch: valhalla_route_calculation_bayarea_regression_test)
[Pipeline] [valhalla_route_calculation_la_regression_test] { (Branch: valhalla_route_calculation_la_regression_test)
[Pipeline] [valhalla_route_calculation_seattle_regression_test] { (Branch: valhalla_route_calculation_seattle_regression_test)
[Pipeline] [valhalla_route_calculation_uae_boundary] { (Branch: valhalla_route_calculation_uae_boundary)
[Pipeline] [valhalla_route_calculation_jordan_boundary] { (Branch: valhalla_route_calculation_jordan_boundary)
[Pipeline] [valhalla_route_calculation_atlanta_boundary] node
[valhalla_route_calculation_atlanta_boundary] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_austin_boundary] node
[valhalla_route_calculation_austin_boundary] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_bay_boundary] node
[valhalla_route_calculation_bay_boundary] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_chicago_boundary] node
[valhalla_route_calculation_chicago_boundary] Running on docker-tm-03 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_dallas_boundary] node
[Pipeline] [valhalla_route_calculation_houston_boundary] node
[Pipeline] [valhalla_route_calculation_la_boundary] node
[Pipeline] [valhalla_route_calculation_san_diego_boundary] node
[Pipeline] [valhalla_route_calculation_seattle_boundary] node
[Pipeline] [valhalla_route_calculation_south_korea_boundary] node
[valhalla_route_calculation_south_korea_boundary] Running on docker-aws-seoul-02 in /home/ec2-user/jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_seoul_boundary] node
[valhalla_route_calculation_seoul_boundary] Running on docker-aws-seoul-01 in /home/ec2-user/jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_taiwan_boundary] node
[Pipeline] [valhalla_route_calculation_taipei_boundary] node
[Pipeline] [valhalla_route_calculation_houston_regression_test] node
[Pipeline] [valhalla_route_calculation_taipei_regression_test] node
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] node
[Pipeline] [valhalla_route_calculation_la_regression_test] node
[Pipeline] [valhalla_route_calculation_seattle_regression_test] node
[Pipeline] [valhalla_route_calculation_uae_boundary] node
[Pipeline] [valhalla_route_calculation_jordan_boundary] node
[Pipeline] [valhalla_route_calculation_atlanta_boundary] {
[Pipeline] [valhalla_route_calculation_austin_boundary] {
[Pipeline] [valhalla_route_calculation_bay_boundary] {
[Pipeline] [valhalla_route_calculation_chicago_boundary] {
[Pipeline] [valhalla_route_calculation_south_korea_boundary] {
[Pipeline] [valhalla_route_calculation_seoul_boundary] {
[Pipeline] [valhalla_route_calculation_atlanta_boundary] withEnv
[Pipeline] [valhalla_route_calculation_atlanta_boundary] {
[Pipeline] [valhalla_route_calculation_austin_boundary] withEnv
[Pipeline] [valhalla_route_calculation_austin_boundary] {
[Pipeline] [valhalla_route_calculation_bay_boundary] withEnv
[Pipeline] [valhalla_route_calculation_bay_boundary] {
[Pipeline] [valhalla_route_calculation_chicago_boundary] withEnv
[Pipeline] [valhalla_route_calculation_chicago_boundary] {
[Pipeline] [valhalla_route_calculation_south_korea_boundary] withEnv
[Pipeline] [valhalla_route_calculation_south_korea_boundary] {
[Pipeline] [valhalla_route_calculation_seoul_boundary] withEnv
[Pipeline] [valhalla_route_calculation_seoul_boundary] {
[Pipeline] [valhalla_route_calculation_atlanta_boundary] checkout
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_atlanta_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_atlanta_boundary] Pruning obsolete local branches
[valhalla_route_calculation_atlanta_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_atlanta_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[Pipeline] [valhalla_route_calculation_austin_boundary] checkout
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_austin_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_austin_boundary] Pruning obsolete local branches
[valhalla_route_calculation_austin_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_austin_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[Pipeline] [valhalla_route_calculation_bay_boundary] checkout
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_bay_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_bay_boundary] Pruning obsolete local branches
[valhalla_route_calculation_bay_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_bay_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[Pipeline] [valhalla_route_calculation_chicago_boundary] checkout
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[Pipeline] [valhalla_route_calculation_south_korea_boundary] timeout
[valhalla_route_calculation_south_korea_boundary] Timeout set to expire in 1 hr 0 min
[Pipeline] [valhalla_route_calculation_south_korea_boundary] {
[Pipeline] [valhalla_route_calculation_seoul_boundary] timeout
[valhalla_route_calculation_seoul_boundary] Timeout set to expire in 1 hr 0 min
[Pipeline] [valhalla_route_calculation_seoul_boundary] {
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_atlanta_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_atlanta_boundary] Cleaning workspace
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_atlanta_boundary] Resetting working tree
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_atlanta_boundary]  > /usr/bin/git clean -fdx # timeout=10
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_austin_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_austin_boundary] Cleaning workspace
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_austin_boundary] Resetting working tree
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_austin_boundary]  > /usr/bin/git clean -fdx # timeout=10
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_bay_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_bay_boundary] Cleaning workspace
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_bay_boundary] Resetting working tree
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_bay_boundary]  > /usr/bin/git clean -fdx # timeout=10
[valhalla_route_calculation_chicago_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_chicago_boundary] Pruning obsolete local branches
[valhalla_route_calculation_chicago_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_chicago_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_chicago_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_chicago_boundary] Cleaning workspace
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_chicago_boundary] Resetting working tree
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_chicago_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_south_korea_boundary] sh
[valhalla_route_calculation_south_korea_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_south_korea_boundary] + sudo rm -rf docker env jenkinsfiles mapdata-routes_kr.version results route_validators ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR.log.gz scripts valhalla-install.tgz valhalla-long-commit.txt .git .gitignore
[Pipeline] [valhalla_route_calculation_seoul_boundary] sh
[valhalla_route_calculation_seoul_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seoul_boundary] + sudo rm -rf docker env guidance_south_korea_boundary__jenkins-ValhallaPipeline-1003.csv guidance_steps_south_korea_boundary__jenkins-ValhallaPipeline-1003.csv jenkinsfiles mapdata-south_korea_boundary.version matched_south_korea_boundary__jenkins-ValhallaPipeline-1003.csv max-error-hist-south_korea_boundary.png max-error-table-south_korea_boundary.png mismatched_south_korea_boundary__jenkins-ValhallaPipeline-1003.csv mismatched_turn_angles_south_korea_boundary__jenkins-ValhallaPipeline-1003.csv num_steps_failed_south_korea_boundary__jenkins-ValhallaPipeline-1003.csv route_validators ROUTING_ENGINE_jenkins-ValhallaPipeline-1003_KR.log.gz scripts unnamed_roads_middle_south_korea_boundary__jenkins-ValhallaPipeline-1003.csv valhalla-install.tgz valhalla-long-commit.txt .git .gitignore
[Pipeline] [valhalla_route_calculation_atlanta_boundary] unstash
[Pipeline] [valhalla_route_calculation_austin_boundary] unstash
[Pipeline] [valhalla_route_calculation_bay_boundary] unstash
[Pipeline] [valhalla_route_calculation_chicago_boundary] unstash
[Pipeline] [valhalla_route_calculation_south_korea_boundary] sh
[valhalla_route_calculation_south_korea_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_south_korea_boundary] + git clone ssh://git@localhost:3333/nav/tm-docker.git .
[valhalla_route_calculation_south_korea_boundary] Cloning into '.'...
[Pipeline] [valhalla_route_calculation_atlanta_boundary] sh
[valhalla_route_calculation_atlanta_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_atlanta_boundary] + scripts/setup.sh
[valhalla_route_calculation_atlanta_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_atlanta_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_atlanta_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_atlanta_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_atlanta_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_atlanta_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_atlanta_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_atlanta_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_atlanta_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_atlanta_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_atlanta_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_atlanta_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_atlanta_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_atlanta_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_atlanta_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_atlanta_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_atlanta_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_atlanta_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_atlanta_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_atlanta_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_atlanta_boundary] + [[ -n true ]]
[valhalla_route_calculation_atlanta_boundary] + sync_aws_mapdata
[valhalla_route_calculation_atlanta_boundary] + which aws
[valhalla_route_calculation_atlanta_boundary] /usr/bin/aws
[valhalla_route_calculation_atlanta_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_atlanta_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[Pipeline] [valhalla_route_calculation_austin_boundary] sh
[valhalla_route_calculation_austin_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_austin_boundary] + scripts/setup.sh
[valhalla_route_calculation_austin_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_austin_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_austin_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_austin_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_austin_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_austin_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_austin_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_austin_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_austin_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_austin_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_austin_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_austin_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_austin_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_austin_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_austin_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_austin_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_austin_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_austin_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_austin_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_austin_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_austin_boundary] + [[ -n true ]]
[valhalla_route_calculation_austin_boundary] + sync_aws_mapdata
[valhalla_route_calculation_austin_boundary] + which aws
[valhalla_route_calculation_austin_boundary] /usr/bin/aws
[valhalla_route_calculation_austin_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_austin_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[Pipeline] [valhalla_route_calculation_bay_boundary] sh
[valhalla_route_calculation_bay_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_bay_boundary] + scripts/setup.sh
[valhalla_route_calculation_bay_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_bay_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_bay_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_bay_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_bay_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_bay_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_bay_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_bay_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_bay_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_bay_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_bay_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_bay_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bay_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_bay_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_bay_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_bay_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_bay_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_bay_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_bay_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bay_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bay_boundary] + [[ -n true ]]
[valhalla_route_calculation_bay_boundary] + sync_aws_mapdata
[valhalla_route_calculation_bay_boundary] + which aws
[valhalla_route_calculation_bay_boundary] /usr/bin/aws
[valhalla_route_calculation_bay_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_bay_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[Pipeline] [valhalla_route_calculation_chicago_boundary] sh
[valhalla_route_calculation_chicago_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_chicago_boundary] + scripts/setup.sh
[valhalla_route_calculation_chicago_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_chicago_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_chicago_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_chicago_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_chicago_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_chicago_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_chicago_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_chicago_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_chicago_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_chicago_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_chicago_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_chicago_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_chicago_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_chicago_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_chicago_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_chicago_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_chicago_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_chicago_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_chicago_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_chicago_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_chicago_boundary] + [[ -n true ]]
[valhalla_route_calculation_chicago_boundary] + sync_aws_mapdata
[valhalla_route_calculation_chicago_boundary] + which aws
[valhalla_route_calculation_chicago_boundary] /usr/bin/aws
[valhalla_route_calculation_chicago_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_chicago_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[Pipeline] [valhalla_route_calculation_seoul_boundary] sh
[valhalla_route_calculation_seoul_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seoul_boundary] + git clone ssh://git@localhost:3333/nav/tm-docker.git .
[valhalla_route_calculation_seoul_boundary] Cloning into '.'...
[valhalla_route_calculation_south_korea_boundary] + git checkout origin/master
[valhalla_route_calculation_south_korea_boundary] Note: checking out 'origin/master'.
[valhalla_route_calculation_south_korea_boundary]
[valhalla_route_calculation_south_korea_boundary] You are in 'detached HEAD' state. You can look around, make experimental
[valhalla_route_calculation_south_korea_boundary] changes and commit them, and you can discard any commits you make in this
[valhalla_route_calculation_south_korea_boundary] state without impacting any branches by performing another checkout.
[valhalla_route_calculation_south_korea_boundary]
[valhalla_route_calculation_south_korea_boundary] If you want to create a new branch to retain commits you create, you may
[valhalla_route_calculation_south_korea_boundary] do so (now or later) by using -b with the checkout command again. Example:
[valhalla_route_calculation_south_korea_boundary]
[valhalla_route_calculation_south_korea_boundary]   git checkout -b <new-branch-name>
[valhalla_route_calculation_south_korea_boundary]
[valhalla_route_calculation_south_korea_boundary] HEAD is now at 095a4fb... Fix color_tag error
[valhalla_route_calculation_south_korea_boundary] + git clone ssh://git@localhost:3333/nav/route_validators.git
[valhalla_route_calculation_south_korea_boundary] Cloning into 'route_validators'...
[valhalla_route_calculation_seoul_boundary] + git checkout origin/master
[valhalla_route_calculation_seoul_boundary] Note: checking out 'origin/master'.
[valhalla_route_calculation_seoul_boundary]
[valhalla_route_calculation_seoul_boundary] You are in 'detached HEAD' state. You can look around, make experimental
[valhalla_route_calculation_seoul_boundary] changes and commit them, and you can discard any commits you make in this
[valhalla_route_calculation_seoul_boundary] state without impacting any branches by performing another checkout.
[valhalla_route_calculation_seoul_boundary]
[valhalla_route_calculation_seoul_boundary] If you want to create a new branch to retain commits you create, you may
[valhalla_route_calculation_seoul_boundary] do so (now or later) by using -b with the checkout command again. Example:
[valhalla_route_calculation_seoul_boundary]
[valhalla_route_calculation_seoul_boundary]   git checkout -b <new-branch-name>
[valhalla_route_calculation_seoul_boundary]
[valhalla_route_calculation_seoul_boundary] HEAD is now at 095a4fb... Fix color_tag error
[valhalla_route_calculation_seoul_boundary] + git clone ssh://git@localhost:3333/nav/route_validators.git
[valhalla_route_calculation_seoul_boundary] Cloning into 'route_validators'...
[valhalla_route_calculation_south_korea_boundary] + git -C route_validators checkout -f master
[valhalla_route_calculation_south_korea_boundary] Already on 'master'
[valhalla_route_calculation_south_korea_boundary] Your branch is up-to-date with 'origin/master'.
[valhalla_route_calculation_seoul_boundary] + git -C route_validators checkout -f master
[valhalla_route_calculation_seoul_boundary] Already on 'master'
[valhalla_route_calculation_seoul_boundary] Your branch is up-to-date with 'origin/master'.
[Pipeline] [valhalla_route_calculation_south_korea_boundary] sh
[valhalla_route_calculation_south_korea_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_south_korea_boundary] + scripts/setup.sh
[valhalla_route_calculation_south_korea_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_south_korea_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_south_korea_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_south_korea_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_south_korea_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_south_korea_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_south_korea_boundary] ++ POSTGIS_LABEL=localhost
[valhalla_route_calculation_south_korea_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_south_korea_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_south_korea_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_south_korea_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_south_korea_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_south_korea_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_south_korea_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_south_korea_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_south_korea_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_south_korea_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_VERSION=KR-170530-111
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_REGION=KR
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[valhalla_route_calculation_south_korea_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_south_korea_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_south_korea_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_south_korea_boundary] + grep 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_south_korea_boundary] 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_south_korea_boundary] + [[ -n true ]]
[valhalla_route_calculation_south_korea_boundary] + sync_aws_mapdata
[valhalla_route_calculation_south_korea_boundary] + which aws
[valhalla_route_calculation_south_korea_boundary] /usr/bin/aws
[valhalla_route_calculation_south_korea_boundary] + [[ ! -d /home/ec2-user/jenkins/data ]]
[valhalla_route_calculation_south_korea_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps-kr/osm/release/valhalla/KR-170530-111/ /home/ec2-user/jenkins/data/KR-170530-111
[valhalla_route_calculation_south_korea_boundary] + create_network
[valhalla_route_calculation_south_korea_boundary] + _network_exists_ host
[valhalla_route_calculation_south_korea_boundary] + network=host
[valhalla_route_calculation_south_korea_boundary] ++ docker network ls --filter name=host
[valhalla_route_calculation_south_korea_boundary] ++ wc -l
[valhalla_route_calculation_south_korea_boundary] + network_count=2
[valhalla_route_calculation_south_korea_boundary] + test 2 -eq 2
[valhalla_route_calculation_south_korea_boundary] + echo 'Network host already exists, skipping creation'
[valhalla_route_calculation_south_korea_boundary] Network host already exists, skipping creation
[valhalla_route_calculation_south_korea_boundary] + launch_postgis
[valhalla_route_calculation_south_korea_boundary] + [[ -n yes ]]
[valhalla_route_calculation_south_korea_boundary] + return 0
[Pipeline] [valhalla_route_calculation_seoul_boundary] sh
[valhalla_route_calculation_seoul_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seoul_boundary] + scripts/setup.sh
[valhalla_route_calculation_seoul_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_seoul_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_seoul_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_seoul_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seoul_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seoul_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seoul_boundary] ++ POSTGIS_LABEL=localhost
[valhalla_route_calculation_seoul_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_seoul_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_seoul_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_seoul_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seoul_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_seoul_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seoul_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seoul_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seoul_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seoul_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_VERSION=KR-170530-111
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_REGION=KR
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[valhalla_route_calculation_seoul_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_seoul_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_seoul_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_seoul_boundary] + grep 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_seoul_boundary] 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_seoul_boundary] + [[ -n true ]]
[valhalla_route_calculation_seoul_boundary] + sync_aws_mapdata
[valhalla_route_calculation_seoul_boundary] + which aws
[valhalla_route_calculation_seoul_boundary] /usr/bin/aws
[valhalla_route_calculation_seoul_boundary] + [[ ! -d /home/ec2-user/jenkins/data ]]
[valhalla_route_calculation_seoul_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps-kr/osm/release/valhalla/KR-170530-111/ /home/ec2-user/jenkins/data/KR-170530-111
[valhalla_route_calculation_seoul_boundary] + create_network
[valhalla_route_calculation_seoul_boundary] + _network_exists_ host
[valhalla_route_calculation_seoul_boundary] + network=host
[valhalla_route_calculation_seoul_boundary] ++ docker network ls --filter name=host
[valhalla_route_calculation_seoul_boundary] ++ wc -l
[valhalla_route_calculation_seoul_boundary] + network_count=2
[valhalla_route_calculation_seoul_boundary] + test 2 -eq 2
[valhalla_route_calculation_seoul_boundary] + echo 'Network host already exists, skipping creation'
[valhalla_route_calculation_seoul_boundary] Network host already exists, skipping creation
[valhalla_route_calculation_seoul_boundary] + launch_postgis
[valhalla_route_calculation_seoul_boundary] + [[ -n yes ]]
[valhalla_route_calculation_seoul_boundary] + return 0
[Pipeline] [valhalla_route_calculation_south_korea_boundary] sh
[valhalla_route_calculation_south_korea_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_dallas_boundary] Still waiting to schedule task
[valhalla_route_calculation_dallas_boundary] Waiting for next available executor on docker-tm
[valhalla_route_calculation_houston_boundary] Still waiting to schedule task
[valhalla_route_calculation_houston_boundary] Waiting for next available executor on docker-tm
[valhalla_route_calculation_la_boundary] Still waiting to schedule task
[valhalla_route_calculation_la_boundary] Waiting for next available executor on docker-tm
[valhalla_route_calculation_san_diego_boundary] Still waiting to schedule task
[valhalla_route_calculation_san_diego_boundary] Waiting for next available executor on docker-tm
[valhalla_route_calculation_seattle_boundary] Still waiting to schedule task
[valhalla_route_calculation_seattle_boundary] Waiting for next available executor on docker-tm
[valhalla_route_calculation_south_korea_boundary] + scripts/dump-map-info.sh south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_south_korea_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_south_korea_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_south_korea_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_south_korea_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_south_korea_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_south_korea_boundary] ++ POSTGIS_LABEL=localhost
[valhalla_route_calculation_south_korea_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_south_korea_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_south_korea_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_south_korea_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_south_korea_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_south_korea_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_south_korea_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_south_korea_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_south_korea_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_south_korea_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_VERSION=KR-170530-111
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_REGION=KR
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[valhalla_route_calculation_south_korea_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_south_korea_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_south_korea_boundary] + BOUNDARY=south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + dump_map_info south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + BOUNDARY=south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + [[ -r /home/ec2-user/jenkins/data/KR-170530-111/VERSION ]]
[valhalla_route_calculation_south_korea_boundary] + mapdata_version=mapdata-south_korea_boundary.version
[valhalla_route_calculation_south_korea_boundary] + cp /home/ec2-user/jenkins/data/KR-170530-111/VERSION mapdata-south_korea_boundary.version
[Pipeline] [valhalla_route_calculation_seoul_boundary] sh
[valhalla_route_calculation_taiwan_boundary] Still waiting to schedule task
[valhalla_route_calculation_taiwan_boundary] Waiting for next available executor on docker-tm
[valhalla_route_calculation_seoul_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_south_korea_boundary] unstash
[valhalla_route_calculation_taipei_boundary] Still waiting to schedule task
[valhalla_route_calculation_taipei_boundary] Waiting for next available executor on docker-tm
[valhalla_route_calculation_houston_regression_test] Still waiting to schedule task
[valhalla_route_calculation_houston_regression_test] Waiting for next available executor on docker-tm
[valhalla_route_calculation_taipei_regression_test] Still waiting to schedule task
[valhalla_route_calculation_taipei_regression_test] Waiting for next available executor on docker-tm
[valhalla_route_calculation_bayarea_regression_test] Still waiting to schedule task
[valhalla_route_calculation_bayarea_regression_test] Waiting for next available executor on docker-tm
[valhalla_route_calculation_la_regression_test] Still waiting to schedule task
[valhalla_route_calculation_la_regression_test] Waiting for next available executor on docker-tm
[valhalla_route_calculation_seattle_regression_test] Still waiting to schedule task
[valhalla_route_calculation_seattle_regression_test] Waiting for next available executor on docker-tm
[valhalla_route_calculation_uae_boundary] Still waiting to schedule task
[valhalla_route_calculation_uae_boundary] Waiting for next available executor on docker-tm
[valhalla_route_calculation_jordan_boundary] Still waiting to schedule task
[valhalla_route_calculation_jordan_boundary] Waiting for next available executor on docker-tm
[valhalla_route_calculation_seoul_boundary] + scripts/dump-map-info.sh seoul_boundary
[valhalla_route_calculation_seoul_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_seoul_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_seoul_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_seoul_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seoul_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seoul_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seoul_boundary] ++ POSTGIS_LABEL=localhost
[valhalla_route_calculation_seoul_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_seoul_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_seoul_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_seoul_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seoul_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_seoul_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seoul_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seoul_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seoul_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seoul_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_VERSION=KR-170530-111
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_REGION=KR
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[valhalla_route_calculation_seoul_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_seoul_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_seoul_boundary] + BOUNDARY=seoul_boundary
[valhalla_route_calculation_seoul_boundary] + dump_map_info seoul_boundary
[valhalla_route_calculation_seoul_boundary] + BOUNDARY=seoul_boundary
[valhalla_route_calculation_seoul_boundary] + [[ -r /home/ec2-user/jenkins/data/KR-170530-111/VERSION ]]
[valhalla_route_calculation_seoul_boundary] + mapdata_version=mapdata-seoul_boundary.version
[valhalla_route_calculation_seoul_boundary] + cp /home/ec2-user/jenkins/data/KR-170530-111/VERSION mapdata-seoul_boundary.version
[Pipeline] [valhalla_route_calculation_seoul_boundary] unstash
[Pipeline] [valhalla_route_calculation_south_korea_boundary] sh
[valhalla_route_calculation_south_korea_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_south_korea_boundary] + scripts/run-route-diagnostics-pathiter-skr.sh south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + BOUNDARY=south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_south_korea_boundary] ++ realpath scripts/run-route-diagnostics-pathiter-skr.sh
[valhalla_route_calculation_south_korea_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter-skr.sh
[valhalla_route_calculation_south_korea_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter-skr.sh
[valhalla_route_calculation_south_korea_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_south_korea_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_south_korea_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_south_korea_boundary] ++ POSTGIS_LABEL=localhost
[valhalla_route_calculation_south_korea_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_south_korea_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_south_korea_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_south_korea_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_south_korea_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_south_korea_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_south_korea_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_south_korea_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_south_korea_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_south_korea_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_VERSION=KR-170530-111
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_REGION=KR
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[valhalla_route_calculation_south_korea_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_south_korea_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_south_korea_boundary] + launch_postgis
[valhalla_route_calculation_south_korea_boundary] + [[ -n yes ]]
[valhalla_route_calculation_south_korea_boundary] + return 0
[valhalla_route_calculation_south_korea_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_south_korea_boundary] + [[ -n '' ]]
[valhalla_route_calculation_south_korea_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_south_korea_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P'
[valhalla_route_calculation_south_korea_boundary] + [[ -d /home/ec2-user/jenkins/data/KR-170530-111/tm/KR ]]
[valhalla_route_calculation_south_korea_boundary] + routing_args+=' --volume /home/ec2-user/jenkins/data:/mapdata'
[valhalla_route_calculation_south_korea_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[valhalla_route_calculation_south_korea_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[valhalla_route_calculation_south_korea_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'ln -sf /mapdata/KR-170530-111/tm/KR /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_south_korea_boundary] + local_host=localhost:8002
[valhalla_route_calculation_south_korea_boundary] + [[ host == \h\o\s\t ]]
[valhalla_route_calculation_south_korea_boundary] ++ docker inspect --format '{{.Config.Hostname}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + remote_host=ip-172-31-21-244:8002
[valhalla_route_calculation_south_korea_boundary] ++ print_regional_request
[valhalla_route_calculation_south_korea_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_south_korea_boundary] ++ request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] ++ echo 'route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + remote_request='http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[Pipeline] [valhalla_route_calculation_seoul_boundary] sh
[valhalla_route_calculation_seoul_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seoul_boundary] + scripts/run-route-diagnostics-pathiter-skr.sh seoul_boundary
[valhalla_route_calculation_seoul_boundary] + BOUNDARY=seoul_boundary
[valhalla_route_calculation_seoul_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_seoul_boundary] ++ realpath scripts/run-route-diagnostics-pathiter-skr.sh
[valhalla_route_calculation_seoul_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter-skr.sh
[valhalla_route_calculation_seoul_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter-skr.sh
[valhalla_route_calculation_seoul_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seoul_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seoul_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seoul_boundary] ++ POSTGIS_LABEL=localhost
[valhalla_route_calculation_seoul_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_seoul_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_seoul_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_seoul_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seoul_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_seoul_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seoul_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seoul_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seoul_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seoul_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_VERSION=KR-170530-111
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_REGION=KR
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[valhalla_route_calculation_seoul_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_seoul_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_seoul_boundary] + launch_postgis
[valhalla_route_calculation_seoul_boundary] + [[ -n yes ]]
[valhalla_route_calculation_seoul_boundary] + return 0
[valhalla_route_calculation_seoul_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_seoul_boundary] + [[ -n '' ]]
[valhalla_route_calculation_seoul_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_seoul_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P'
[valhalla_route_calculation_seoul_boundary] + [[ -d /home/ec2-user/jenkins/data/KR-170530-111/tm/KR ]]
[valhalla_route_calculation_seoul_boundary] + routing_args+=' --volume /home/ec2-user/jenkins/data:/mapdata'
[valhalla_route_calculation_seoul_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[valhalla_route_calculation_seoul_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[valhalla_route_calculation_seoul_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'ln -sf /mapdata/KR-170530-111/tm/KR /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_seoul_boundary] + local_host=localhost:8002
[valhalla_route_calculation_seoul_boundary] + [[ host == \h\o\s\t ]]
[valhalla_route_calculation_seoul_boundary] ++ docker inspect --format '{{.Config.Hostname}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + remote_host=ip-172-31-17-146:8002
[valhalla_route_calculation_seoul_boundary] ++ print_regional_request
[valhalla_route_calculation_seoul_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_seoul_boundary] ++ request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] ++ echo 'route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + remote_request='http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + [[ nowait == \n\o\w\a\i\t ]]
[valhalla_route_calculation_seoul_boundary] + break
[valhalla_route_calculation_seoul_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + grep '"error":'
[valhalla_route_calculation_bay_boundary] + create_network
[valhalla_route_calculation_bay_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] ++ wc -l
[valhalla_route_calculation_bay_boundary] + network_count=1
[valhalla_route_calculation_bay_boundary] + test 1 -eq 2
[valhalla_route_calculation_bay_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_bay_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] f604ca2a4b990de7a1dd2c1f27d0ed97eaa76dcaac4218537e83e87f8112121d
[valhalla_route_calculation_bay_boundary] + launch_postgis
[valhalla_route_calculation_bay_boundary] + [[ -n yes ]]
[valhalla_route_calculation_bay_boundary] + return 0
[Pipeline] [valhalla_route_calculation_bay_boundary] sh
[valhalla_route_calculation_bay_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_south_korea_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] CONTAINER ID        IMAGE                                                              COMMAND               CREATED             STATUS              PORTS               NAMES
[valhalla_route_calculation_south_korea_boundary] e4c9aba323a4        123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest   "tail -f /dev/null"   6 seconds ago       Up 6 seconds                            ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + kill_valhalla
[valhalla_route_calculation_south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR pkill -f valhalla_route_service
[valhalla_route_calculation_south_korea_boundary] + install_valhalla_from_package /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_south_korea_boundary] + inputfile=/home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_south_korea_boundary] + [[ ! -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_south_korea_boundary] + docker cp /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR:/navigation/valhalla-install.tgz
[valhalla_route_calculation_south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_bay_boundary] + scripts/dump-map-info.sh bay_boundary
[valhalla_route_calculation_bay_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_bay_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_bay_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_bay_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_bay_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_bay_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_bay_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_bay_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_bay_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_bay_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_bay_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_bay_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bay_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_bay_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_bay_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_bay_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_bay_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_bay_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + BOUNDARY=bay_boundary
[valhalla_route_calculation_bay_boundary] + dump_map_info bay_boundary
[valhalla_route_calculation_bay_boundary] + BOUNDARY=bay_boundary
[valhalla_route_calculation_bay_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_bay_boundary] + mapdata_version=mapdata-bay_boundary.version
[valhalla_route_calculation_bay_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-bay_boundary.version
[Pipeline] [valhalla_route_calculation_bay_boundary] sh
[valhalla_route_calculation_seoul_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + grep '"error":'
[valhalla_route_calculation_bay_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_bay_boundary] + scripts/run-route-diagnostics-pathiter.sh bay_boundary
[valhalla_route_calculation_bay_boundary] + BOUNDARY=bay_boundary
[valhalla_route_calculation_bay_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_bay_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_bay_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_bay_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_bay_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_bay_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_bay_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_bay_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_bay_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_bay_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_bay_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_bay_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_bay_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bay_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_bay_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_bay_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_bay_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_bay_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_bay_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + launch_postgis
[valhalla_route_calculation_bay_boundary] + [[ -n yes ]]
[valhalla_route_calculation_bay_boundary] + return 0
[valhalla_route_calculation_bay_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_bay_boundary] + [[ -n '' ]]
[valhalla_route_calculation_bay_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_bay_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_bay_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_bay_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_bay_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_bay_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_bay_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_bay_boundary] + local_host=localhost:8002
[valhalla_route_calculation_bay_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_bay_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_bay_boundary] ++ print_regional_request
[valhalla_route_calculation_bay_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_bay_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + launch_routing_engine
[valhalla_route_calculation_south_korea_boundary] + [[ -n '' ]]
[valhalla_route_calculation_south_korea_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_south_korea_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] ++ grep Status
[valhalla_route_calculation_south_korea_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_south_korea_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_south_korea_boundary] + container_status=running
[valhalla_route_calculation_south_korea_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_south_korea_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR pgrep -f valhalla_route_service
[valhalla_route_calculation_south_korea_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_south_korea_boundary] + _network_has_container_ host ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + network=host
[valhalla_route_calculation_south_korea_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + format='{{.NetworkSettings.Networks.host}}'
[valhalla_route_calculation_south_korea_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.host}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + output='{<nil> [] [] 200879a4fb78e1ae8d026a7e0c18b3d66a382d7bc804b802fd662e0984fd4b5c 74992cc187d282a3e0c472f8239072516040a15228471db2cb0a9adfaa2be9bc   0   0 }'
[valhalla_route_calculation_south_korea_boundary] + [[ {<nil> [] [] 200879a4fb78e1ae8d026a7e0c18b3d66a382d7bc804b802fd662e0984fd4b5c 74992cc187d282a3e0c472f8239072516040a15228471db2cb0a9adfaa2be9bc   0   0 } == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_south_korea_boundary] + return 0
[valhalla_route_calculation_south_korea_boundary] + local_host=localhost:8002
[valhalla_route_calculation_south_korea_boundary] + [[ host == \h\o\s\t ]]
[valhalla_route_calculation_south_korea_boundary] ++ docker inspect --format '{{.Config.Hostname}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + remote_host=ip-172-31-21-244:8002
[valhalla_route_calculation_south_korea_boundary] ++ print_regional_request
[valhalla_route_calculation_south_korea_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_south_korea_boundary] ++ request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] ++ echo 'route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + remote_request='http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + create_network
[valhalla_route_calculation_atlanta_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ wc -l
[valhalla_route_calculation_atlanta_boundary] + network_count=1
[valhalla_route_calculation_atlanta_boundary] + test 1 -eq 2
[valhalla_route_calculation_atlanta_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_atlanta_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] a41eb2f1cd5a1d80be6fb97027a9446c18eb7ccf404bf80bb990d1197678eb38
[valhalla_route_calculation_atlanta_boundary] + launch_postgis
[valhalla_route_calculation_atlanta_boundary] + [[ -n yes ]]
[valhalla_route_calculation_atlanta_boundary] + return 0
[valhalla_route_calculation_austin_boundary] + create_network
[valhalla_route_calculation_austin_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] ++ wc -l
[valhalla_route_calculation_austin_boundary] + network_count=1
[valhalla_route_calculation_austin_boundary] + test 1 -eq 2
[valhalla_route_calculation_austin_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_austin_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] ae7c7ddc97e312fd2deaf6a600357d95960ccf732000105ba96434158940d58e
[valhalla_route_calculation_austin_boundary] + launch_postgis
[valhalla_route_calculation_austin_boundary] + [[ -n yes ]]
[valhalla_route_calculation_austin_boundary] + return 0
[valhalla_route_calculation_chicago_boundary] + create_network
[valhalla_route_calculation_chicago_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] ++ wc -l
[valhalla_route_calculation_chicago_boundary] + network_count=1
[valhalla_route_calculation_chicago_boundary] + test 1 -eq 2
[valhalla_route_calculation_chicago_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_chicago_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] 3b8a98d48ff3219d4ba61a2b4ee3c14cab1c9719d762ca43fb3eb87b1fd3deb8
[valhalla_route_calculation_chicago_boundary] + launch_postgis
[valhalla_route_calculation_chicago_boundary] + [[ -n yes ]]
[valhalla_route_calculation_chicago_boundary] + return 0
[valhalla_route_calculation_seoul_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] CONTAINER ID        IMAGE                                                              COMMAND               CREATED             STATUS              PORTS               NAMES
[valhalla_route_calculation_seoul_boundary] d13fe64f5a4b        123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest   "tail -f /dev/null"   8 seconds ago       Up 7 seconds                            ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + kill_valhalla
[valhalla_route_calculation_seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR pkill -f valhalla_route_service
[valhalla_route_calculation_seoul_boundary] + install_valhalla_from_package /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_seoul_boundary] + inputfile=/home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_seoul_boundary] + [[ ! -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_seoul_boundary] + docker cp /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR:/navigation/valhalla-install.tgz
[valhalla_route_calculation_seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[Pipeline] [valhalla_route_calculation_atlanta_boundary] sh
[valhalla_route_calculation_atlanta_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_austin_boundary] sh
[valhalla_route_calculation_austin_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_chicago_boundary] sh
[valhalla_route_calculation_atlanta_boundary] + scripts/dump-map-info.sh atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_atlanta_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_atlanta_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_atlanta_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_atlanta_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_atlanta_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_atlanta_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_atlanta_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_atlanta_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_atlanta_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_atlanta_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_atlanta_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_atlanta_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_atlanta_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_atlanta_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_atlanta_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_atlanta_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_atlanta_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + BOUNDARY=atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + dump_map_info atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + BOUNDARY=atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_atlanta_boundary] + mapdata_version=mapdata-atlanta_boundary.version
[valhalla_route_calculation_atlanta_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-atlanta_boundary.version
[valhalla_route_calculation_austin_boundary] + scripts/dump-map-info.sh austin_boundary
[valhalla_route_calculation_austin_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_austin_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_austin_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_austin_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_austin_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_austin_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_austin_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_austin_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_austin_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_austin_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_austin_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_austin_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_austin_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_austin_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_austin_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_austin_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_austin_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_austin_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + BOUNDARY=austin_boundary
[valhalla_route_calculation_austin_boundary] + dump_map_info austin_boundary
[valhalla_route_calculation_austin_boundary] + BOUNDARY=austin_boundary
[valhalla_route_calculation_austin_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_austin_boundary] + mapdata_version=mapdata-austin_boundary.version
[valhalla_route_calculation_austin_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-austin_boundary.version
[valhalla_route_calculation_chicago_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_atlanta_boundary] sh
[valhalla_route_calculation_bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + scripts/dump-map-info.sh chicago_boundary
[valhalla_route_calculation_chicago_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_chicago_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_chicago_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_chicago_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_chicago_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_chicago_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_chicago_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_chicago_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_chicago_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_chicago_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_chicago_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_chicago_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_chicago_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_chicago_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_chicago_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_chicago_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_chicago_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_chicago_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + BOUNDARY=chicago_boundary
[valhalla_route_calculation_chicago_boundary] + dump_map_info chicago_boundary
[valhalla_route_calculation_chicago_boundary] + BOUNDARY=chicago_boundary
[valhalla_route_calculation_chicago_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_chicago_boundary] + mapdata_version=mapdata-chicago_boundary.version
[valhalla_route_calculation_chicago_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-chicago_boundary.version
[valhalla_route_calculation_atlanta_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_austin_boundary] sh
[valhalla_route_calculation_austin_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_chicago_boundary] sh
[valhalla_route_calculation_chicago_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_south_korea_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + launch_routing_engine
[valhalla_route_calculation_seoul_boundary] + [[ -n '' ]]
[valhalla_route_calculation_seoul_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_seoul_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] ++ grep Status
[valhalla_route_calculation_seoul_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_seoul_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_seoul_boundary] + container_status=running
[valhalla_route_calculation_seoul_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_seoul_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR pgrep -f valhalla_route_service
[valhalla_route_calculation_seoul_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_seoul_boundary] + _network_has_container_ host ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + network=host
[valhalla_route_calculation_seoul_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + format='{{.NetworkSettings.Networks.host}}'
[valhalla_route_calculation_seoul_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.host}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + output='{<nil> [] [] 0aff9a3063537a0e68c603afb44f3437efe82e4ad21660d758a1a630d1805a1c 784c4cff5c71747f46456d7c31c29de01a4d65b4f0976b9e1f7d12eb8b4728fa   0   0 }'
[valhalla_route_calculation_seoul_boundary] + [[ {<nil> [] [] 0aff9a3063537a0e68c603afb44f3437efe82e4ad21660d758a1a630d1805a1c 784c4cff5c71747f46456d7c31c29de01a4d65b4f0976b9e1f7d12eb8b4728fa   0   0 } == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_seoul_boundary] + return 0
[valhalla_route_calculation_seoul_boundary] + local_host=localhost:8002
[valhalla_route_calculation_seoul_boundary] + [[ host == \h\o\s\t ]]
[valhalla_route_calculation_seoul_boundary] ++ docker inspect --format '{{.Config.Hostname}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + remote_host=ip-172-31-17-146:8002
[valhalla_route_calculation_seoul_boundary] ++ print_regional_request
[valhalla_route_calculation_seoul_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_seoul_boundary] ++ request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] ++ echo 'route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + remote_request='http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + scripts/run-route-diagnostics-pathiter.sh atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + BOUNDARY=atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_atlanta_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_atlanta_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_atlanta_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_atlanta_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_atlanta_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_atlanta_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_atlanta_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_atlanta_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_atlanta_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_atlanta_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_atlanta_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_atlanta_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_atlanta_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_atlanta_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_atlanta_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_atlanta_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_atlanta_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_atlanta_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + launch_postgis
[valhalla_route_calculation_atlanta_boundary] + [[ -n yes ]]
[valhalla_route_calculation_atlanta_boundary] + return 0
[valhalla_route_calculation_atlanta_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_atlanta_boundary] + [[ -n '' ]]
[valhalla_route_calculation_atlanta_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_atlanta_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_atlanta_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_atlanta_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_atlanta_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_atlanta_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_atlanta_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_atlanta_boundary] + local_host=localhost:8002
[valhalla_route_calculation_atlanta_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_atlanta_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_atlanta_boundary] ++ print_regional_request
[valhalla_route_calculation_atlanta_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_atlanta_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + scripts/run-route-diagnostics-pathiter.sh austin_boundary
[valhalla_route_calculation_austin_boundary] + BOUNDARY=austin_boundary
[valhalla_route_calculation_austin_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_austin_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_austin_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_austin_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_austin_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_austin_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_austin_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_austin_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_austin_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_austin_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_austin_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_austin_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_austin_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_austin_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_austin_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_austin_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_austin_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_austin_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_austin_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + launch_postgis
[valhalla_route_calculation_austin_boundary] + [[ -n yes ]]
[valhalla_route_calculation_austin_boundary] + return 0
[valhalla_route_calculation_austin_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_austin_boundary] + [[ -n '' ]]
[valhalla_route_calculation_austin_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_austin_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_austin_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_austin_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_austin_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_austin_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_austin_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_austin_boundary] + local_host=localhost:8002
[valhalla_route_calculation_austin_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_austin_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_austin_boundary] ++ print_regional_request
[valhalla_route_calculation_austin_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_austin_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + scripts/run-route-diagnostics-pathiter.sh chicago_boundary
[valhalla_route_calculation_chicago_boundary] + BOUNDARY=chicago_boundary
[valhalla_route_calculation_chicago_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_chicago_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_chicago_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_chicago_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_chicago_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_chicago_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_chicago_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_chicago_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_chicago_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_chicago_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_chicago_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_chicago_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_chicago_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_chicago_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_chicago_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_chicago_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_chicago_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_chicago_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_chicago_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + launch_postgis
[valhalla_route_calculation_chicago_boundary] + [[ -n yes ]]
[valhalla_route_calculation_chicago_boundary] + return 0
[valhalla_route_calculation_chicago_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_chicago_boundary] + [[ -n '' ]]
[valhalla_route_calculation_chicago_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_chicago_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_chicago_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_chicago_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_chicago_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_chicago_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_chicago_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_chicago_boundary] + local_host=localhost:8002
[valhalla_route_calculation_chicago_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_chicago_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_chicago_boundary] ++ print_regional_request
[valhalla_route_calculation_chicago_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_chicago_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + grep '"error":'
[valhalla_route_calculation_bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + grep '"error":'
[valhalla_route_calculation_seoul_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] CONTAINER ID        IMAGE                                                              COMMAND               CREATED             STATUS              PORTS               NAMES
[valhalla_route_calculation_south_korea_boundary] e4c9aba323a4        123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest   "tail -f /dev/null"   15 seconds ago      Up 14 seconds                           ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] + VALHALLA_DOCKER=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + [[ host == \h\o\s\t ]]
[valhalla_route_calculation_south_korea_boundary] + VALHALLA_LABEL=localhost
[valhalla_route_calculation_south_korea_boundary] + num_baseline=100
[valhalla_route_calculation_south_korea_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] ++ wc -l
[valhalla_route_calculation_south_korea_boundary] + log_lines=144
[valhalla_route_calculation_south_korea_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_south_korea_boundary] + docker run --network host --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary --dns=12.34.5.67 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators --detach -it 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && tail -f /dev/null'
[valhalla_route_calculation_south_korea_boundary] e8f4ff11a005886f08c3b4a43223ba5e8f4308cda98df62214e978f10ff7d723
[valhalla_route_calculation_south_korea_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + echo collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && python3 collect_route.py -valhalla localhost -host localhost -boundary south_korea_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla localhost -host localhost -boundary south_korea_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_bay_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_bay_boundary] 9190567a7ec1        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   9 seconds ago       Up 8 seconds        0.0.0.0:35239->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + kill_valhalla
[valhalla_route_calculation_bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_south_korea_boundary] Namespace(bias=1, boundary='south_korea_boundary', database='postgres', host='localhost', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='localhost', valhalla_port=8002)
[valhalla_route_calculation_south_korea_boundary] Retrieving baseline routes
[valhalla_route_calculation_bay_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_bay_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_bay_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_bay_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] Retrieving valhalla routes
[valhalla_route_calculation_south_korea_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_bay_boundary] + launch_routing_engine
[valhalla_route_calculation_bay_boundary] + [[ -n '' ]]
[valhalla_route_calculation_bay_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_bay_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] ++ grep Status
[valhalla_route_calculation_bay_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_bay_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_bay_boundary] + container_status=running
[valhalla_route_calculation_bay_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_bay_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_bay_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_bay_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_bay_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + output='{<nil> [] [9190567a7ec1] f604ca2a4b990de7a1dd2c1f27d0ed97eaa76dcaac4218537e83e87f8112121d db0eab31e4736e1479c19560c4d4072578f686ba3238764342329e17ead1c04a 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[valhalla_route_calculation_bay_boundary] + [[ {<nil> [] [9190567a7ec1] f604ca2a4b990de7a1dd2c1f27d0ed97eaa76dcaac4218537e83e87f8112121d db0eab31e4736e1479c19560c4d4072578f686ba3238764342329e17ead1c04a 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_bay_boundary] + return 0
[valhalla_route_calculation_bay_boundary] + local_host=localhost:8002
[valhalla_route_calculation_bay_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_bay_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_bay_boundary] ++ print_regional_request
[valhalla_route_calculation_bay_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_bay_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seoul_boundary] + grep '"error":'
[valhalla_route_calculation_seoul_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + grep '"error":'
[valhalla_route_calculation_austin_boundary] + grep '"error":'
[valhalla_route_calculation_austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + grep '"error":'
[valhalla_route_calculation_seoul_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] CONTAINER ID        IMAGE                                                              COMMAND               CREATED             STATUS              PORTS               NAMES
[valhalla_route_calculation_seoul_boundary] d13fe64f5a4b        123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest   "tail -f /dev/null"   20 seconds ago      Up 19 seconds                           ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] + VALHALLA_DOCKER=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + [[ host == \h\o\s\t ]]
[valhalla_route_calculation_seoul_boundary] + VALHALLA_LABEL=localhost
[valhalla_route_calculation_seoul_boundary] + num_baseline=100
[valhalla_route_calculation_seoul_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] ++ wc -l
[valhalla_route_calculation_seoul_boundary] + log_lines=121
[valhalla_route_calculation_seoul_boundary] + let 'log_lines = 121 - 1'
[valhalla_route_calculation_seoul_boundary] + docker run --network host --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary --dns=12.34.5.67 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators --detach -it 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && tail -f /dev/null'
[valhalla_route_calculation_bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_atlanta_boundary] 60078f986029        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   10 seconds ago      Up 10 seconds       0.0.0.0:34677->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + kill_valhalla
[valhalla_route_calculation_atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_atlanta_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_atlanta_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_atlanta_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_atlanta_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_seoul_boundary] 696d5bdf5f207a14fd78ae9702355d6a4308b4e3de76135423507b568f347358
[valhalla_route_calculation_seoul_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_seoul_boundary] + echo collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_seoul_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_seoul_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && python3 collect_route.py -valhalla localhost -host localhost -boundary seoul_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla localhost -host localhost -boundary seoul_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_austin_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_austin_boundary] 875ffe95213c        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 10 seconds       0.0.0.0:34570->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + kill_valhalla
[valhalla_route_calculation_austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_austin_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_austin_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_austin_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_austin_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_chicago_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_chicago_boundary] ed8128da497c        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 10 seconds       0.0.0.0:34888->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + kill_valhalla
[valhalla_route_calculation_chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_chicago_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_chicago_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_chicago_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_chicago_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_seoul_boundary] Namespace(bias=1, boundary='seoul_boundary', database='postgres', host='localhost', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='localhost', valhalla_port=8002)
[valhalla_route_calculation_seoul_boundary] Retrieving baseline routes
[valhalla_route_calculation_seoul_boundary] Retrieving valhalla routes
[valhalla_route_calculation_seoul_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bay_boundary] + grep '"error":'
[valhalla_route_calculation_atlanta_boundary] + launch_routing_engine
[valhalla_route_calculation_atlanta_boundary] + [[ -n '' ]]
[valhalla_route_calculation_atlanta_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_atlanta_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ grep Status
[valhalla_route_calculation_atlanta_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_atlanta_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_atlanta_boundary] + container_status=running
[valhalla_route_calculation_atlanta_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_atlanta_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_atlanta_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_atlanta_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_atlanta_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + output='{<nil> [] [60078f986029] a41eb2f1cd5a1d80be6fb97027a9446c18eb7ccf404bf80bb990d1197678eb38 18b891d7a7d46d4d0b8952c8abccd93fae52364e3db46d7c13e7cc56157415e6 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[valhalla_route_calculation_atlanta_boundary] + [[ {<nil> [] [60078f986029] a41eb2f1cd5a1d80be6fb97027a9446c18eb7ccf404bf80bb990d1197678eb38 18b891d7a7d46d4d0b8952c8abccd93fae52364e3db46d7c13e7cc56157415e6 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_atlanta_boundary] + return 0
[valhalla_route_calculation_atlanta_boundary] + local_host=localhost:8002
[valhalla_route_calculation_atlanta_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_atlanta_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_atlanta_boundary] ++ print_regional_request
[valhalla_route_calculation_atlanta_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_atlanta_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_chicago_boundary] + launch_routing_engine
[valhalla_route_calculation_chicago_boundary] + [[ -n '' ]]
[valhalla_route_calculation_chicago_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_chicago_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] ++ grep Status
[valhalla_route_calculation_chicago_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_chicago_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_chicago_boundary] + container_status=running
[valhalla_route_calculation_chicago_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_chicago_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_bay_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_bay_boundary] 9190567a7ec1        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   19 seconds ago      Up 18 seconds       0.0.0.0:35239->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] + num_baseline=100
[valhalla_route_calculation_bay_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] ++ wc -l
[valhalla_route_calculation_bay_boundary] + log_lines=144
[valhalla_route_calculation_bay_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_bay_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_bay_boundary] e490751762e10c2eb92d82d9e6470a1774b96b2c503289089b9e6ec09771da56
[valhalla_route_calculation_bay_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[valhalla_route_calculation_bay_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary bay_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary bay_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_austin_boundary] + launch_routing_engine
[valhalla_route_calculation_austin_boundary] + [[ -n '' ]]
[valhalla_route_calculation_austin_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_austin_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] ++ grep Status
[valhalla_route_calculation_austin_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_austin_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_austin_boundary] + container_status=running
[valhalla_route_calculation_austin_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_austin_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_austin_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_austin_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_austin_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + output='{<nil> [] [875ffe95213c] ae7c7ddc97e312fd2deaf6a600357d95960ccf732000105ba96434158940d58e ca9dce2b19b878639719521046e987bea5ac8ad73c31343fa566f71393dd6e55 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[valhalla_route_calculation_austin_boundary] + [[ {<nil> [] [875ffe95213c] ae7c7ddc97e312fd2deaf6a600357d95960ccf732000105ba96434158940d58e ca9dce2b19b878639719521046e987bea5ac8ad73c31343fa566f71393dd6e55 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_austin_boundary] + return 0
[valhalla_route_calculation_austin_boundary] + local_host=localhost:8002
[valhalla_route_calculation_austin_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_austin_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_austin_boundary] ++ print_regional_request
[valhalla_route_calculation_austin_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_austin_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_chicago_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_chicago_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + output='{<nil> [] [ed8128da497c] 3b8a98d48ff3219d4ba61a2b4ee3c14cab1c9719d762ca43fb3eb87b1fd3deb8 2b92f460006ac98c52d0e3b9014ac19ebc64a34f2442817ce63d3644eee581e4 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[valhalla_route_calculation_chicago_boundary] + [[ {<nil> [] [ed8128da497c] 3b8a98d48ff3219d4ba61a2b4ee3c14cab1c9719d762ca43fb3eb87b1fd3deb8 2b92f460006ac98c52d0e3b9014ac19ebc64a34f2442817ce63d3644eee581e4 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_chicago_boundary] + return 0
[valhalla_route_calculation_chicago_boundary] + local_host=localhost:8002
[valhalla_route_calculation_chicago_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_chicago_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_chicago_boundary] ++ print_regional_request
[valhalla_route_calculation_chicago_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_chicago_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_south_korea_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_south_korea_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_bay_boundary] Namespace(bias=1, boundary='bay_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_bay_boundary] Retrieving baseline routes
[valhalla_route_calculation_bay_boundary] Retrieving valhalla routes
[valhalla_route_calculation_bay_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_south_korea_boundary] Namespace(bias=0, boundary='south_korea_boundary', database='postgres', host='localhost', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='localhost', valhalla_port=8002)
[valhalla_route_calculation_south_korea_boundary] Retrieving baseline routes
[valhalla_route_calculation_south_korea_boundary] Retrieving valhalla routes
[valhalla_route_calculation_south_korea_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + grep '"error":'
[valhalla_route_calculation_atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_austin_boundary] + grep '"error":'
[valhalla_route_calculation_austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_atlanta_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_atlanta_boundary] 60078f986029        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   22 seconds ago      Up 21 seconds       0.0.0.0:34677->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] + num_baseline=100
[valhalla_route_calculation_atlanta_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ wc -l
[valhalla_route_calculation_atlanta_boundary] + log_lines=144
[valhalla_route_calculation_atlanta_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_atlanta_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_atlanta_boundary] 5774d6861d11d9771919715b294921623e9b3d9030c0937fd192a82740499c05
[valhalla_route_calculation_atlanta_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary atlanta_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary atlanta_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_chicago_boundary] + grep '"error":'
[valhalla_route_calculation_atlanta_boundary] Namespace(bias=1, boundary='atlanta_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_atlanta_boundary] Retrieving baseline routes
[valhalla_route_calculation_atlanta_boundary] Retrieving valhalla routes
[valhalla_route_calculation_atlanta_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_austin_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_austin_boundary] 875ffe95213c        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   24 seconds ago      Up 23 seconds       0.0.0.0:34570->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] + num_baseline=100
[valhalla_route_calculation_austin_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] ++ wc -l
[valhalla_route_calculation_austin_boundary] + log_lines=144
[valhalla_route_calculation_austin_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_austin_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_austin_boundary] 2387137288f92b553849e11399afd47703ad6313cb90ce0be5f6350711bb624e
[valhalla_route_calculation_austin_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[valhalla_route_calculation_austin_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary austin_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary austin_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_austin_boundary] Namespace(bias=1, boundary='austin_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_austin_boundary] Retrieving baseline routes
[valhalla_route_calculation_austin_boundary] Retrieving valhalla routes
[valhalla_route_calculation_austin_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_chicago_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_chicago_boundary] ed8128da497c        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   25 seconds ago      Up 24 seconds       0.0.0.0:34888->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] + num_baseline=100
[valhalla_route_calculation_chicago_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] ++ wc -l
[valhalla_route_calculation_chicago_boundary] + log_lines=144
[valhalla_route_calculation_chicago_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_chicago_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_chicago_boundary] d6de5f3ac96ac0689b184f7266e37f11e365954fb9e2582ee257a1f6cab4ee3e
[valhalla_route_calculation_south_korea_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_south_korea_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_seoul_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_seoul_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_seoul_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_chicago_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_chicago_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary chicago_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary chicago_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_chicago_boundary] Namespace(bias=1, boundary='chicago_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_chicago_boundary] Retrieving baseline routes
[valhalla_route_calculation_chicago_boundary] Retrieving valhalla routes
[valhalla_route_calculation_chicago_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_seoul_boundary] Namespace(bias=0, boundary='seoul_boundary', database='postgres', host='localhost', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='localhost', valhalla_port=8002)
[valhalla_route_calculation_seoul_boundary] Retrieving baseline routes
[valhalla_route_calculation_south_korea_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_south_korea_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_seoul_boundary] Retrieving valhalla routes
[valhalla_route_calculation_seoul_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_bay_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_bay_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_bay_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_bay_boundary] Namespace(bias=0, boundary='bay_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_bay_boundary] Retrieving baseline routes
[valhalla_route_calculation_bay_boundary] Retrieving valhalla routes
[valhalla_route_calculation_bay_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_south_korea_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_south_korea_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_south_korea_boundary] + echo 3551 valhalla_log2.txt
[valhalla_route_calculation_south_korea_boundary] 3551 valhalla_log2.txt
[valhalla_route_calculation_south_korea_boundary] + docker run --network host --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary --dns=12.34.5.67 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators --detach -it 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && tail -f /dev/null'
[valhalla_route_calculation_south_korea_boundary] 0bc08598813c6d0ae0001c246a32c1360111044c6573c304d8ef795ca4abd802
[valhalla_route_calculation_south_korea_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_south_korea_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_south_korea_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && python3 collect_route.py -log valhalla_log2.txt -valhalla localhost -host localhost -boundary south_korea_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_seoul_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_seoul_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_south_korea_boundary] Namespace(bias=1, boundary='south_korea_boundary', database='postgres', host='localhost', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='localhost', valhalla_port=8002)
[valhalla_route_calculation_south_korea_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_south_korea_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_south_korea_boundary] Adding 3551 lines of logs
[valhalla_route_calculation_south_korea_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_south_korea_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_seoul_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_seoul_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_seoul_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_seoul_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + tail -n +120 valhalla_log.txt
[valhalla_route_calculation_seoul_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_austin_boundary] Out of 100 routes, found 99 trips
[valhalla_route_calculation_austin_boundary] Writing 99 valhalla routes to pickle
[valhalla_route_calculation_austin_boundary] Exporting 99 valhalla routes to insight database
[valhalla_route_calculation_austin_boundary] Namespace(bias=0, boundary='austin_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_austin_boundary] Retrieving baseline routes
[valhalla_route_calculation_austin_boundary] Retrieving valhalla routes
[valhalla_route_calculation_austin_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_seoul_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_seoul_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_seoul_boundary] + echo 3618 valhalla_log2.txt
[valhalla_route_calculation_seoul_boundary] 3618 valhalla_log2.txt
[valhalla_route_calculation_seoul_boundary] + docker run --network host --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary --dns=12.34.5.67 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators --detach -it 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && tail -f /dev/null'
[valhalla_route_calculation_seoul_boundary] 45c2b9c7675cc2726200d362707ad025994d4c03699d2f55721cac8a0fd21e39
[valhalla_route_calculation_seoul_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_seoul_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_seoul_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_seoul_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && python3 collect_route.py -log valhalla_log2.txt -valhalla localhost -host localhost -boundary seoul_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_seoul_boundary] Namespace(bias=1, boundary='seoul_boundary', database='postgres', host='localhost', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='localhost', valhalla_port=8002)
[valhalla_route_calculation_seoul_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_seoul_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_seoul_boundary] Adding 3618 lines of logs
[valhalla_route_calculation_seoul_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_seoul_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_south_korea_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host localhost -boundary south_korea_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_south_korea_boundary] Valhalla Diagnostic) Boundary: south_korea_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 392.41 | BiasIterBwd: 408.31 | UnbiasIterFwd: 4061.27 | UnbiasIterBwd: 5060.76
[valhalla_route_calculation_south_korea_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_atlanta_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_atlanta_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_atlanta_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_atlanta_boundary] Namespace(bias=0, boundary='atlanta_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_atlanta_boundary] Retrieving baseline routes
[valhalla_route_calculation_atlanta_boundary] Retrieving valhalla routes
[valhalla_route_calculation_atlanta_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_bay_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_bay_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_bay_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_bay_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[valhalla_route_calculation_south_korea_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[valhalla_route_calculation_south_korea_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_south_korea_boundary
[Pipeline] [valhalla_route_calculation_south_korea_boundary] stash
[valhalla_route_calculation_bay_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[valhalla_route_calculation_bay_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_bay_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_bay_boundary] + echo 3724 valhalla_log2.txt
[valhalla_route_calculation_bay_boundary] 3724 valhalla_log2.txt
[valhalla_route_calculation_bay_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[valhalla_route_calculation_bay_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[valhalla_route_calculation_bay_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_bay_boundary] e68667cf6dabf121076279415e7f7c33f0b67f28c6ca2b411ba4c1e2c9467154
[valhalla_route_calculation_bay_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[valhalla_route_calculation_bay_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_bay_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_bay_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary bay_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_chicago_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_chicago_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_chicago_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_chicago_boundary] Namespace(bias=0, boundary='chicago_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_chicago_boundary] Retrieving baseline routes
[valhalla_route_calculation_chicago_boundary] Retrieving valhalla routes
[valhalla_route_calculation_chicago_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_seoul_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host localhost -boundary seoul_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_south_korea_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_south_korea_boundary] }
[Pipeline] [valhalla_route_calculation_south_korea_boundary] // timeout
[valhalla_route_calculation_seoul_boundary] Valhalla Diagnostic) Boundary: seoul_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 676.7 | BiasIterBwd: 768.86 | UnbiasIterFwd: 10501.27 | UnbiasIterBwd: 11404.23
[valhalla_route_calculation_seoul_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[Pipeline] [valhalla_route_calculation_south_korea_boundary] sh
[valhalla_route_calculation_south_korea_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_south_korea_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_south_korea_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_south_korea_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_south_korea_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_south_korea_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_south_korea_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_south_korea_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_south_korea_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_south_korea_boundary] ++ POSTGIS_LABEL=localhost
[valhalla_route_calculation_south_korea_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_south_korea_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_south_korea_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_south_korea_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_south_korea_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_south_korea_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_south_korea_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_south_korea_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_south_korea_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_south_korea_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_VERSION=KR-170530-111
[valhalla_route_calculation_south_korea_boundary] ++ MAPDATA_REGION=KR
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[valhalla_route_calculation_south_korea_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[valhalla_route_calculation_south_korea_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_south_korea_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_south_korea_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_south_korea_boundary] + cleanup_network
[valhalla_route_calculation_south_korea_boundary] + [[ host != \h\o\s\t ]]
[valhalla_route_calculation_south_korea_boundary] + echo 'Network '\''host'\'' cannot be cleaned up.. skipping'
[valhalla_route_calculation_south_korea_boundary] Network 'host' cannot be cleaned up.. skipping
[valhalla_route_calculation_south_korea_boundary] + cleanup_routing_engine
[valhalla_route_calculation_south_korea_boundary] + [[ -n '' ]]
[valhalla_route_calculation_south_korea_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR'
[valhalla_route_calculation_south_korea_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + gzip
[valhalla_route_calculation_south_korea_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_austin_boundary] Out of 100 routes, found 99 trips
[valhalla_route_calculation_austin_boundary] Exporting 99 valhalla routes to insight database
[valhalla_route_calculation_austin_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_austin_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[valhalla_route_calculation_bay_boundary] Namespace(bias=1, boundary='bay_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_bay_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_bay_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_bay_boundary] Adding 3724 lines of logs
[valhalla_route_calculation_bay_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_bay_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_bay_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary bay_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_seoul_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_seoul_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[valhalla_route_calculation_bay_boundary] Valhalla Diagnostic) Boundary: bay_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 414.84 | BiasIterBwd: 526.57 | UnbiasIterFwd: 6667.44 | UnbiasIterBwd: 7399.55
[valhalla_route_calculation_bay_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[valhalla_route_calculation_seoul_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seoul_boundary
[Pipeline] [valhalla_route_calculation_seoul_boundary] stash
[valhalla_route_calculation_south_korea_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_south_korea_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[Pipeline] [valhalla_route_calculation_south_korea_boundary] }
[Pipeline] [valhalla_route_calculation_south_korea_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_south_korea_boundary] }
[Pipeline] [valhalla_route_calculation_south_korea_boundary] // node
[Pipeline] [valhalla_route_calculation_south_korea_boundary] }
[valhalla_route_calculation_seoul_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_seoul_boundary] }
[Pipeline] [valhalla_route_calculation_seoul_boundary] // timeout
[valhalla_route_calculation_austin_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[valhalla_route_calculation_austin_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_austin_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_austin_boundary] + echo 3560 valhalla_log2.txt
[valhalla_route_calculation_austin_boundary] 3560 valhalla_log2.txt
[valhalla_route_calculation_austin_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[valhalla_route_calculation_austin_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[valhalla_route_calculation_austin_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_austin_boundary] 8e2c5d418e416c0a5c2d2110e6d8d57f4ee280358a6eb72a58c25a3eb3889378
[Pipeline] [valhalla_route_calculation_seoul_boundary] sh
[valhalla_route_calculation_austin_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[valhalla_route_calculation_austin_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_austin_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_seoul_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seoul_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_seoul_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_seoul_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_seoul_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_seoul_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seoul_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seoul_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seoul_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seoul_boundary] ++ POSTGIS_LABEL=localhost
[valhalla_route_calculation_seoul_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_seoul_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_seoul_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_seoul_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seoul_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[valhalla_route_calculation_seoul_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seoul_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seoul_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seoul_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seoul_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_VERSION=KR-170530-111
[valhalla_route_calculation_seoul_boundary] ++ MAPDATA_REGION=KR
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[valhalla_route_calculation_seoul_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[valhalla_route_calculation_seoul_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_seoul_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_seoul_boundary] ++ TEST_NETWORK=host
[valhalla_route_calculation_seoul_boundary] + cleanup_network
[valhalla_route_calculation_seoul_boundary] + [[ host != \h\o\s\t ]]
[valhalla_route_calculation_seoul_boundary] + echo 'Network '\''host'\'' cannot be cleaned up.. skipping'
[valhalla_route_calculation_seoul_boundary] Network 'host' cannot be cleaned up.. skipping
[valhalla_route_calculation_seoul_boundary] + cleanup_routing_engine
[valhalla_route_calculation_seoul_boundary] + [[ -n '' ]]
[valhalla_route_calculation_seoul_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR'
[valhalla_route_calculation_seoul_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + gzip
[valhalla_route_calculation_seoul_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_atlanta_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_atlanta_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_atlanta_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_atlanta_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[valhalla_route_calculation_austin_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary austin_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_bay_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[valhalla_route_calculation_bay_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[valhalla_route_calculation_bay_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bay_boundary
[Pipeline] [valhalla_route_calculation_bay_boundary] stash
[valhalla_route_calculation_bay_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_bay_boundary] sh
[valhalla_route_calculation_bay_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_bay_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_bay_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_bay_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_bay_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_bay_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_bay_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_bay_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bay_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_bay_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_bay_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_bay_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_bay_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_bay_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_bay_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bay_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_bay_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_bay_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_bay_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_bay_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_bay_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_bay_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_bay_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_bay_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + cleanup_network
[valhalla_route_calculation_bay_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_bay_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_bay_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_bay_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_bay_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_bay_boundary] ++ tr -s ' '
[valhalla_route_calculation_bay_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_bay_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_bay_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bay_boundary] + cleanup_routing_engine
[valhalla_route_calculation_bay_boundary] + [[ -n '' ]]
[valhalla_route_calculation_bay_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_bay_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + gzip
[valhalla_route_calculation_bay_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seoul_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_seoul_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[valhalla_route_calculation_atlanta_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_atlanta_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_atlanta_boundary] + echo 3610 valhalla_log2.txt
[valhalla_route_calculation_atlanta_boundary] 3610 valhalla_log2.txt
[valhalla_route_calculation_atlanta_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_atlanta_boundary] c2bf044fa71a28415c0c2b2962bd4b0fc279959bb130fc41ce0c39d98c2bd462
[valhalla_route_calculation_atlanta_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_austin_boundary] Namespace(bias=1, boundary='austin_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_austin_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_austin_boundary] Writing 99 valhalla routes to pickle
[valhalla_route_calculation_austin_boundary] Adding 3560 lines of logs
[valhalla_route_calculation_austin_boundary] Out of 99 routes, found 99 logs
[valhalla_route_calculation_austin_boundary] Exporting 99 valhalla routes to insight database
[valhalla_route_calculation_austin_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary austin_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_chicago_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_chicago_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_chicago_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_chicago_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_seoul_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[Pipeline] [valhalla_route_calculation_seoul_boundary] }
[Pipeline] [valhalla_route_calculation_seoul_boundary] // withEnv
[valhalla_route_calculation_atlanta_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[Pipeline] [valhalla_route_calculation_seoul_boundary] }
[Pipeline] [valhalla_route_calculation_seoul_boundary] // node
[Pipeline] [valhalla_route_calculation_seoul_boundary] }
[valhalla_route_calculation_atlanta_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary atlanta_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_austin_boundary] Valhalla Diagnostic) Boundary: austin_boundary | Requested: 99 | Successful: 99 | Failed: 0 | BiasIterFwd: 371.68 | BiasIterBwd: 541.79 | UnbiasIterFwd: 3475.75 | UnbiasIterBwd: 4906.21
[valhalla_route_calculation_austin_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[valhalla_route_calculation_atlanta_boundary] Namespace(bias=1, boundary='atlanta_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_atlanta_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_atlanta_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_atlanta_boundary] Adding 3610 lines of logs
[valhalla_route_calculation_atlanta_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_atlanta_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_atlanta_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary atlanta_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_atlanta_boundary] Valhalla Diagnostic) Boundary: atlanta_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 389.05 | BiasIterBwd: 641.06 | UnbiasIterFwd: 5397.62 | UnbiasIterBwd: 8717.09
[valhalla_route_calculation_atlanta_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[valhalla_route_calculation_bay_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bay_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_bay_boundary] }
[Pipeline] [valhalla_route_calculation_bay_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_bay_boundary] }
[valhalla_route_calculation_dallas_boundary] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_bay_boundary] // node
[Pipeline] [valhalla_route_calculation_dallas_boundary] {
[Pipeline] [valhalla_route_calculation_bay_boundary] }
[Pipeline] [valhalla_route_calculation_dallas_boundary] withEnv
[Pipeline] [valhalla_route_calculation_dallas_boundary] {
[Pipeline] [valhalla_route_calculation_dallas_boundary] checkout
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_dallas_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_dallas_boundary] Pruning obsolete local branches
[valhalla_route_calculation_dallas_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_dallas_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_dallas_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_dallas_boundary] Cleaning workspace
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_dallas_boundary] Resetting working tree
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_dallas_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_dallas_boundary] unstash
[Pipeline] [valhalla_route_calculation_dallas_boundary] sh
[valhalla_route_calculation_chicago_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_chicago_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_chicago_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_chicago_boundary] + echo 3661 valhalla_log2.txt
[valhalla_route_calculation_chicago_boundary] 3661 valhalla_log2.txt
[valhalla_route_calculation_chicago_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_chicago_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_chicago_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_chicago_boundary] b7dd8e63b74e217680c429e8d090ec13a927a1a3c554540c6bab0c5b0ba7494f
[valhalla_route_calculation_dallas_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_dallas_boundary] + scripts/setup.sh
[valhalla_route_calculation_dallas_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_dallas_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_dallas_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_dallas_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_dallas_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_dallas_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_dallas_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_dallas_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_dallas_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_dallas_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_dallas_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_dallas_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_dallas_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_dallas_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_dallas_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_dallas_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_dallas_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_dallas_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_dallas_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_dallas_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_dallas_boundary] + [[ -n true ]]
[valhalla_route_calculation_dallas_boundary] + sync_aws_mapdata
[valhalla_route_calculation_dallas_boundary] + which aws
[valhalla_route_calculation_dallas_boundary] /usr/bin/aws
[valhalla_route_calculation_dallas_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_dallas_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[valhalla_route_calculation_chicago_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_chicago_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_chicago_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_chicago_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary chicago_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_chicago_boundary] Namespace(bias=1, boundary='chicago_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_chicago_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_chicago_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_chicago_boundary] Adding 3661 lines of logs
[valhalla_route_calculation_chicago_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_chicago_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_austin_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[valhalla_route_calculation_austin_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[valhalla_route_calculation_austin_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_austin_boundary
[Pipeline] [valhalla_route_calculation_austin_boundary] stash
[valhalla_route_calculation_chicago_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary chicago_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_chicago_boundary] Valhalla Diagnostic) Boundary: chicago_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 417.24 | BiasIterBwd: 547.34 | UnbiasIterFwd: 6582.89 | UnbiasIterBwd: 7991.26
[valhalla_route_calculation_chicago_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_austin_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_austin_boundary] sh
[valhalla_route_calculation_austin_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_austin_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_austin_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_austin_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_austin_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_austin_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_austin_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_austin_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_austin_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_austin_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_austin_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_austin_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_austin_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_austin_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_austin_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_austin_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_austin_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_austin_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_austin_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_austin_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_austin_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_austin_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_austin_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_austin_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + cleanup_network
[valhalla_route_calculation_austin_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_austin_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_austin_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_austin_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_austin_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_austin_boundary] ++ tr -s ' '
[valhalla_route_calculation_austin_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_austin_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_austin_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_austin_boundary] + cleanup_routing_engine
[valhalla_route_calculation_austin_boundary] + [[ -n '' ]]
[valhalla_route_calculation_austin_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_austin_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + gzip
[valhalla_route_calculation_austin_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[valhalla_route_calculation_atlanta_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_atlanta_boundary
[Pipeline] [valhalla_route_calculation_atlanta_boundary] stash
[valhalla_route_calculation_atlanta_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_atlanta_boundary] sh
[valhalla_route_calculation_atlanta_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_atlanta_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_atlanta_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_atlanta_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_atlanta_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_atlanta_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_atlanta_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_atlanta_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_atlanta_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_atlanta_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_atlanta_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_atlanta_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_atlanta_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_atlanta_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_atlanta_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_atlanta_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_atlanta_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_atlanta_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_atlanta_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_atlanta_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_atlanta_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_atlanta_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_atlanta_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_atlanta_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + cleanup_network
[valhalla_route_calculation_atlanta_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_atlanta_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_atlanta_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_atlanta_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_atlanta_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_atlanta_boundary] ++ tr -s ' '
[valhalla_route_calculation_atlanta_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_atlanta_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_atlanta_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_atlanta_boundary] + cleanup_routing_engine
[valhalla_route_calculation_atlanta_boundary] + [[ -n '' ]]
[valhalla_route_calculation_atlanta_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_atlanta_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + gzip
[valhalla_route_calculation_atlanta_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_chicago_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_chicago_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_chicago_boundary
[valhalla_route_calculation_austin_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_austin_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_chicago_boundary] stash
[valhalla_route_calculation_austin_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_austin_boundary] }
[Pipeline] [valhalla_route_calculation_austin_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_austin_boundary] }
[valhalla_route_calculation_houston_boundary] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_austin_boundary] // node
[Pipeline] [valhalla_route_calculation_houston_boundary] {
[Pipeline] [valhalla_route_calculation_austin_boundary] }
[Pipeline] [valhalla_route_calculation_houston_boundary] withEnv
[Pipeline] [valhalla_route_calculation_houston_boundary] {
[Pipeline] [valhalla_route_calculation_houston_boundary] checkout
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_houston_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_houston_boundary] Pruning obsolete local branches
[valhalla_route_calculation_houston_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_houston_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_houston_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_houston_boundary] Cleaning workspace
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_houston_boundary] Resetting working tree
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_houston_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_houston_boundary] unstash
[Pipeline] [valhalla_route_calculation_houston_boundary] sh
[valhalla_route_calculation_chicago_boundary] Stashed 5 file(s)
[valhalla_route_calculation_houston_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_chicago_boundary] sh
[valhalla_route_calculation_houston_boundary] + scripts/setup.sh
[valhalla_route_calculation_houston_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_houston_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_houston_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_houston_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_houston_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_houston_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_houston_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_houston_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_houston_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_houston_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_houston_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_houston_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_houston_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_houston_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_houston_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_houston_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_houston_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_houston_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_boundary] + [[ -n true ]]
[valhalla_route_calculation_houston_boundary] + sync_aws_mapdata
[valhalla_route_calculation_houston_boundary] + which aws
[valhalla_route_calculation_houston_boundary] /usr/bin/aws
[valhalla_route_calculation_houston_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_houston_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[valhalla_route_calculation_chicago_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_chicago_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_chicago_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_chicago_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_chicago_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_chicago_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_chicago_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_chicago_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_chicago_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_chicago_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_chicago_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_chicago_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_chicago_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_chicago_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_chicago_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_chicago_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_chicago_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_chicago_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_chicago_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_chicago_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_chicago_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_chicago_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_chicago_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_chicago_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + cleanup_network
[valhalla_route_calculation_chicago_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_chicago_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_chicago_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_chicago_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_chicago_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] ++ tr -s ' '
[valhalla_route_calculation_chicago_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_chicago_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_chicago_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_chicago_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_chicago_boundary] + cleanup_routing_engine
[valhalla_route_calculation_chicago_boundary] + [[ -n '' ]]
[valhalla_route_calculation_chicago_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_chicago_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + gzip
[valhalla_route_calculation_chicago_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + create_network
[valhalla_route_calculation_dallas_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] ++ wc -l
[valhalla_route_calculation_dallas_boundary] + network_count=1
[valhalla_route_calculation_dallas_boundary] + test 1 -eq 2
[valhalla_route_calculation_dallas_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_dallas_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] 65b2681edbf0ec67b3cc0a232e8226eb99872afe08f07eae1742e4f6655d56fa
[valhalla_route_calculation_dallas_boundary] + launch_postgis
[valhalla_route_calculation_dallas_boundary] + [[ -n yes ]]
[valhalla_route_calculation_dallas_boundary] + return 0
[Pipeline] [valhalla_route_calculation_dallas_boundary] sh
[valhalla_route_calculation_dallas_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_dallas_boundary] + scripts/dump-map-info.sh dallas_boundary
[valhalla_route_calculation_dallas_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_dallas_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_dallas_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_dallas_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_dallas_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_dallas_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_dallas_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_dallas_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_dallas_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_dallas_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_dallas_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_dallas_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_dallas_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_dallas_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_dallas_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_dallas_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_dallas_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_dallas_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + BOUNDARY=dallas_boundary
[valhalla_route_calculation_dallas_boundary] + dump_map_info dallas_boundary
[valhalla_route_calculation_dallas_boundary] + BOUNDARY=dallas_boundary
[valhalla_route_calculation_dallas_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_dallas_boundary] + mapdata_version=mapdata-dallas_boundary.version
[valhalla_route_calculation_dallas_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-dallas_boundary.version
[Pipeline] [valhalla_route_calculation_dallas_boundary] sh
[valhalla_route_calculation_atlanta_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_atlanta_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_dallas_boundary] + scripts/run-route-diagnostics-pathiter.sh dallas_boundary
[valhalla_route_calculation_dallas_boundary] + BOUNDARY=dallas_boundary
[valhalla_route_calculation_dallas_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_dallas_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_dallas_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_dallas_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_dallas_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_dallas_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_dallas_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_dallas_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_dallas_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_dallas_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_dallas_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_dallas_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_dallas_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_dallas_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_dallas_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_dallas_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_dallas_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_dallas_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_dallas_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + launch_postgis
[valhalla_route_calculation_dallas_boundary] + [[ -n yes ]]
[valhalla_route_calculation_dallas_boundary] + return 0
[valhalla_route_calculation_dallas_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_dallas_boundary] + [[ -n '' ]]
[valhalla_route_calculation_dallas_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_dallas_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_dallas_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_dallas_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_dallas_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_dallas_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[Pipeline] [valhalla_route_calculation_atlanta_boundary] }
[Pipeline] [valhalla_route_calculation_atlanta_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_atlanta_boundary] }
[valhalla_route_calculation_la_boundary] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_atlanta_boundary] // node
[Pipeline] [valhalla_route_calculation_la_boundary] {
[Pipeline] [valhalla_route_calculation_atlanta_boundary] }
[Pipeline] [valhalla_route_calculation_la_boundary] withEnv
[Pipeline] [valhalla_route_calculation_la_boundary] {
[valhalla_route_calculation_dallas_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[Pipeline] [valhalla_route_calculation_la_boundary] checkout
[valhalla_route_calculation_la_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_la_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_la_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_la_boundary] Pruning obsolete local branches
[valhalla_route_calculation_la_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_la_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_la_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_la_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_la_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_la_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_la_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_la_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_la_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_la_boundary] Cleaning workspace
[valhalla_route_calculation_la_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_la_boundary] Resetting working tree
[valhalla_route_calculation_la_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_la_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_la_boundary] unstash
[valhalla_route_calculation_dallas_boundary] + local_host=localhost:8002
[valhalla_route_calculation_dallas_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_dallas_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_dallas_boundary] ++ print_regional_request
[valhalla_route_calculation_dallas_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_dallas_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[Pipeline] [valhalla_route_calculation_la_boundary] sh
[valhalla_route_calculation_la_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_la_boundary] + scripts/setup.sh
[valhalla_route_calculation_la_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_la_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_la_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_la_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_la_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_la_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_la_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_la_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_la_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_la_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_la_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_la_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_la_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_la_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_la_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_la_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_la_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_la_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_la_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_la_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_la_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_la_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_la_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_la_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_la_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_boundary] + [[ -n true ]]
[valhalla_route_calculation_la_boundary] + sync_aws_mapdata
[valhalla_route_calculation_la_boundary] + which aws
[valhalla_route_calculation_la_boundary] /usr/bin/aws
[valhalla_route_calculation_la_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_la_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[valhalla_route_calculation_dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + grep '"error":'
[valhalla_route_calculation_dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_dallas_boundary] 5847fa65e4c8        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   9 seconds ago       Up 8 seconds        0.0.0.0:35240->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + kill_valhalla
[valhalla_route_calculation_dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_dallas_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_dallas_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_dallas_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_dallas_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_chicago_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_chicago_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_chicago_boundary] }
[Pipeline] [valhalla_route_calculation_chicago_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_chicago_boundary] }
[valhalla_route_calculation_san_diego_boundary] Running on docker-tm-03 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_chicago_boundary] // node
[Pipeline] [valhalla_route_calculation_san_diego_boundary] {
[Pipeline] [valhalla_route_calculation_chicago_boundary] }
[Pipeline] [valhalla_route_calculation_san_diego_boundary] withEnv
[Pipeline] [valhalla_route_calculation_san_diego_boundary] {
[Pipeline] [valhalla_route_calculation_san_diego_boundary] checkout
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_san_diego_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_san_diego_boundary] Pruning obsolete local branches
[valhalla_route_calculation_san_diego_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_san_diego_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_san_diego_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_san_diego_boundary] Cleaning workspace
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_san_diego_boundary] Resetting working tree
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_san_diego_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_san_diego_boundary] unstash
[valhalla_route_calculation_dallas_boundary] + launch_routing_engine
[valhalla_route_calculation_dallas_boundary] + [[ -n '' ]]
[valhalla_route_calculation_dallas_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_dallas_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] ++ grep Status
[valhalla_route_calculation_dallas_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_dallas_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_dallas_boundary] + container_status=running
[valhalla_route_calculation_dallas_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_dallas_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_dallas_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_dallas_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_dallas_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + output='{<nil> [] [5847fa65e4c8] 65b2681edbf0ec67b3cc0a232e8226eb99872afe08f07eae1742e4f6655d56fa d117df4902f92dca46cec87712b61b205226fbf96e792a5e6e4eb7d9fff2542a 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[valhalla_route_calculation_dallas_boundary] + [[ {<nil> [] [5847fa65e4c8] 65b2681edbf0ec67b3cc0a232e8226eb99872afe08f07eae1742e4f6655d56fa d117df4902f92dca46cec87712b61b205226fbf96e792a5e6e4eb7d9fff2542a 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_dallas_boundary] + return 0
[valhalla_route_calculation_dallas_boundary] + local_host=localhost:8002
[valhalla_route_calculation_dallas_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_dallas_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_dallas_boundary] ++ print_regional_request
[valhalla_route_calculation_dallas_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_dallas_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[Pipeline] [valhalla_route_calculation_san_diego_boundary] sh
[valhalla_route_calculation_san_diego_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_san_diego_boundary] + scripts/setup.sh
[valhalla_route_calculation_san_diego_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_san_diego_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_san_diego_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_san_diego_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_san_diego_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_san_diego_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_san_diego_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_san_diego_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_san_diego_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_san_diego_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_san_diego_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_san_diego_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_san_diego_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_san_diego_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_san_diego_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_san_diego_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_san_diego_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_san_diego_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_san_diego_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_san_diego_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_san_diego_boundary] + [[ -n true ]]
[valhalla_route_calculation_san_diego_boundary] + sync_aws_mapdata
[valhalla_route_calculation_san_diego_boundary] + which aws
[valhalla_route_calculation_san_diego_boundary] /usr/bin/aws
[valhalla_route_calculation_san_diego_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_san_diego_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[valhalla_route_calculation_dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] + grep '"error":'
[valhalla_route_calculation_dallas_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_dallas_boundary] 5847fa65e4c8        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   19 seconds ago      Up 18 seconds       0.0.0.0:35240->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] + num_baseline=100
[valhalla_route_calculation_dallas_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] ++ wc -l
[valhalla_route_calculation_dallas_boundary] + log_lines=144
[valhalla_route_calculation_dallas_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_dallas_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_dallas_boundary] 155aeb367a58f26a92366463edabe3572b36f1dd7ebb886dac5f9f1afa7fe37b
[valhalla_route_calculation_dallas_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[valhalla_route_calculation_dallas_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary dallas_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary dallas_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_dallas_boundary] Namespace(bias=1, boundary='dallas_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_dallas_boundary] Retrieving baseline routes
[valhalla_route_calculation_dallas_boundary] Retrieving valhalla routes
[valhalla_route_calculation_dallas_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_houston_boundary] + create_network
[valhalla_route_calculation_houston_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] ++ wc -l
[valhalla_route_calculation_houston_boundary] + network_count=1
[valhalla_route_calculation_houston_boundary] + test 1 -eq 2
[valhalla_route_calculation_houston_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_houston_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] e4416884fbc1a5e84b8ba7dce860689e75276a0ae3642c4182e282a89dead7d8
[valhalla_route_calculation_houston_boundary] + launch_postgis
[valhalla_route_calculation_houston_boundary] + [[ -n yes ]]
[valhalla_route_calculation_houston_boundary] + return 0
[Pipeline] [valhalla_route_calculation_houston_boundary] sh
[valhalla_route_calculation_houston_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_houston_boundary] + scripts/dump-map-info.sh houston_boundary
[valhalla_route_calculation_houston_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_houston_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_houston_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_houston_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_houston_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_houston_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_houston_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_houston_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_houston_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_houston_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_houston_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_houston_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_houston_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_houston_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_houston_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_houston_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_houston_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + BOUNDARY=houston_boundary
[valhalla_route_calculation_houston_boundary] + dump_map_info houston_boundary
[valhalla_route_calculation_houston_boundary] + BOUNDARY=houston_boundary
[valhalla_route_calculation_houston_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_houston_boundary] + mapdata_version=mapdata-houston_boundary.version
[valhalla_route_calculation_houston_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-houston_boundary.version
[Pipeline] [valhalla_route_calculation_houston_boundary] sh
[valhalla_route_calculation_houston_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_houston_boundary] + scripts/run-route-diagnostics-pathiter.sh houston_boundary
[valhalla_route_calculation_houston_boundary] + BOUNDARY=houston_boundary
[valhalla_route_calculation_houston_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_houston_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_houston_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_houston_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_houston_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_houston_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_houston_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_houston_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_houston_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_houston_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_houston_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_houston_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_houston_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_houston_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_houston_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_houston_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_houston_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_houston_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + launch_postgis
[valhalla_route_calculation_houston_boundary] + [[ -n yes ]]
[valhalla_route_calculation_houston_boundary] + return 0
[valhalla_route_calculation_houston_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_houston_boundary] + [[ -n '' ]]
[valhalla_route_calculation_houston_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_houston_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_houston_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_houston_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_houston_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_houston_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_houston_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_houston_boundary] + local_host=localhost:8002
[valhalla_route_calculation_houston_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_houston_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_houston_boundary] ++ print_regional_request
[valhalla_route_calculation_houston_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_houston_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + create_network
[valhalla_route_calculation_la_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] ++ wc -l
[valhalla_route_calculation_la_boundary] + network_count=1
[valhalla_route_calculation_la_boundary] + test 1 -eq 2
[valhalla_route_calculation_la_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_la_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] 2089775973f96a95f1c00770e64b2f8d61074452f390aca9fdf9974cb800e8ab
[valhalla_route_calculation_la_boundary] + launch_postgis
[valhalla_route_calculation_la_boundary] + [[ -n yes ]]
[valhalla_route_calculation_la_boundary] + return 0
[Pipeline] [valhalla_route_calculation_la_boundary] sh
[valhalla_route_calculation_la_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_la_boundary] + scripts/dump-map-info.sh la_boundary
[valhalla_route_calculation_la_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_la_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_la_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_la_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_la_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_la_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_la_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_la_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_la_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_la_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_la_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_la_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_la_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_la_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_la_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_la_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_la_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_la_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_la_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_la_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_la_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_la_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_la_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_la_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + BOUNDARY=la_boundary
[valhalla_route_calculation_la_boundary] + dump_map_info la_boundary
[valhalla_route_calculation_la_boundary] + BOUNDARY=la_boundary
[valhalla_route_calculation_la_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_la_boundary] + mapdata_version=mapdata-la_boundary.version
[valhalla_route_calculation_la_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-la_boundary.version
[Pipeline] [valhalla_route_calculation_la_boundary] sh
[valhalla_route_calculation_la_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_la_boundary] + scripts/run-route-diagnostics-pathiter.sh la_boundary
[valhalla_route_calculation_la_boundary] + BOUNDARY=la_boundary
[valhalla_route_calculation_la_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_la_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_la_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_la_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_la_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_la_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_la_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_la_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_la_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_la_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_la_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_la_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_la_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_la_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_la_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_la_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_la_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_la_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_la_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_la_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_la_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_la_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_la_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_la_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_la_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + launch_postgis
[valhalla_route_calculation_la_boundary] + [[ -n yes ]]
[valhalla_route_calculation_la_boundary] + return 0
[valhalla_route_calculation_la_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_la_boundary] + [[ -n '' ]]
[valhalla_route_calculation_la_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_la_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_la_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_la_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_la_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_la_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_la_boundary] + local_host=localhost:8002
[valhalla_route_calculation_la_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_la_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_la_boundary] ++ print_regional_request
[valhalla_route_calculation_la_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_la_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + grep '"error":'
[valhalla_route_calculation_houston_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_houston_boundary] 6b60c717b92e        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   10 seconds ago      Up 9 seconds        0.0.0.0:34571->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + kill_valhalla
[valhalla_route_calculation_houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_houston_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_houston_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_houston_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_houston_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_houston_boundary] + launch_routing_engine
[valhalla_route_calculation_houston_boundary] + [[ -n '' ]]
[valhalla_route_calculation_houston_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_houston_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] ++ grep Status
[valhalla_route_calculation_houston_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_houston_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_houston_boundary] + container_status=running
[valhalla_route_calculation_houston_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_houston_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_houston_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + grep '"error":'
[valhalla_route_calculation_san_diego_boundary] + create_network
[valhalla_route_calculation_san_diego_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ wc -l
[valhalla_route_calculation_san_diego_boundary] + network_count=1
[valhalla_route_calculation_san_diego_boundary] + test 1 -eq 2
[valhalla_route_calculation_san_diego_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_san_diego_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] b951452c3f578e081846e4d1c941590025faa67638c18e44420ababd7e688a46
[valhalla_route_calculation_san_diego_boundary] + launch_postgis
[valhalla_route_calculation_san_diego_boundary] + [[ -n yes ]]
[valhalla_route_calculation_san_diego_boundary] + return 0
[valhalla_route_calculation_houston_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_houston_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + output='{<nil> [] [6b60c717b92e] e4416884fbc1a5e84b8ba7dce860689e75276a0ae3642c4182e282a89dead7d8 93a049975495ab67d1d8e1229a04e38ad171673b017754b163ff93ce116acffe 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[valhalla_route_calculation_houston_boundary] + [[ {<nil> [] [6b60c717b92e] e4416884fbc1a5e84b8ba7dce860689e75276a0ae3642c4182e282a89dead7d8 93a049975495ab67d1d8e1229a04e38ad171673b017754b163ff93ce116acffe 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_houston_boundary] + return 0
[valhalla_route_calculation_houston_boundary] + local_host=localhost:8002
[valhalla_route_calculation_houston_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_houston_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_houston_boundary] ++ print_regional_request
[valhalla_route_calculation_houston_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_houston_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[Pipeline] [valhalla_route_calculation_san_diego_boundary] sh
[valhalla_route_calculation_san_diego_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_san_diego_boundary] + scripts/dump-map-info.sh san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_san_diego_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_san_diego_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_san_diego_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_san_diego_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_san_diego_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_san_diego_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_san_diego_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_san_diego_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_san_diego_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_san_diego_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_san_diego_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_san_diego_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_san_diego_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_san_diego_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_san_diego_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_san_diego_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_san_diego_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + BOUNDARY=san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + dump_map_info san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + BOUNDARY=san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_san_diego_boundary] + mapdata_version=mapdata-san_diego_boundary.version
[valhalla_route_calculation_san_diego_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-san_diego_boundary.version
[Pipeline] [valhalla_route_calculation_san_diego_boundary] sh
[valhalla_route_calculation_san_diego_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_san_diego_boundary] + scripts/run-route-diagnostics-pathiter.sh san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + BOUNDARY=san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_san_diego_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_san_diego_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_san_diego_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_san_diego_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_san_diego_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_san_diego_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_san_diego_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_san_diego_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_san_diego_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_san_diego_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_san_diego_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_san_diego_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_san_diego_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_san_diego_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_san_diego_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_san_diego_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_san_diego_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_san_diego_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + launch_postgis
[valhalla_route_calculation_san_diego_boundary] + [[ -n yes ]]
[valhalla_route_calculation_san_diego_boundary] + return 0
[valhalla_route_calculation_san_diego_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_san_diego_boundary] + [[ -n '' ]]
[valhalla_route_calculation_san_diego_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_san_diego_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_san_diego_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_san_diego_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_san_diego_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_san_diego_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_san_diego_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_san_diego_boundary] + local_host=localhost:8002
[valhalla_route_calculation_san_diego_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_san_diego_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_san_diego_boundary] ++ print_regional_request
[valhalla_route_calculation_san_diego_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_san_diego_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_la_boundary] 83cce3c00b47        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 11 seconds       0.0.0.0:34678->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + kill_valhalla
[valhalla_route_calculation_la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_la_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_la_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_la_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_la_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + launch_routing_engine
[valhalla_route_calculation_la_boundary] + [[ -n '' ]]
[valhalla_route_calculation_la_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_la_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] ++ grep Status
[valhalla_route_calculation_la_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_la_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_la_boundary] + container_status=running
[valhalla_route_calculation_la_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_la_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_la_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_la_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_la_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + output='{<nil> [] [83cce3c00b47] 2089775973f96a95f1c00770e64b2f8d61074452f390aca9fdf9974cb800e8ab 9353c3c10ce253b136d903e07d01df4936062f3dd6de220df3e19d4fa6d5c40d 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[valhalla_route_calculation_la_boundary] + [[ {<nil> [] [83cce3c00b47] 2089775973f96a95f1c00770e64b2f8d61074452f390aca9fdf9974cb800e8ab 9353c3c10ce253b136d903e07d01df4936062f3dd6de220df3e19d4fa6d5c40d 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_la_boundary] + return 0
[valhalla_route_calculation_la_boundary] + local_host=localhost:8002
[valhalla_route_calculation_la_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_la_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_la_boundary] ++ print_regional_request
[valhalla_route_calculation_la_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_la_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] + grep '"error":'
[valhalla_route_calculation_houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_dallas_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_dallas_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_san_diego_boundary] + grep '"error":'
[valhalla_route_calculation_san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_dallas_boundary] Namespace(bias=0, boundary='dallas_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_dallas_boundary] Retrieving baseline routes
[valhalla_route_calculation_dallas_boundary] Retrieving valhalla routes
[valhalla_route_calculation_dallas_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_houston_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_houston_boundary] 6b60c717b92e        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   24 seconds ago      Up 22 seconds       0.0.0.0:34571->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] + num_baseline=100
[valhalla_route_calculation_houston_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] ++ wc -l
[valhalla_route_calculation_houston_boundary] + log_lines=144
[valhalla_route_calculation_houston_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_houston_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_houston_boundary] 8967984ed7e8ea71a51014d6dc431a023019b658b54ea81192cb7bc75b6ca006
[valhalla_route_calculation_houston_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[valhalla_route_calculation_houston_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary houston_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary houston_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] Namespace(bias=1, boundary='houston_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_houston_boundary] Retrieving baseline routes
[valhalla_route_calculation_houston_boundary] Retrieving valhalla routes
[valhalla_route_calculation_houston_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_san_diego_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_san_diego_boundary] 5892dcc22b97        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   10 seconds ago      Up 9 seconds        0.0.0.0:34889->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + kill_valhalla
[valhalla_route_calculation_san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_san_diego_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_san_diego_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_san_diego_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_san_diego_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + grep '"error":'
[valhalla_route_calculation_san_diego_boundary] + launch_routing_engine
[valhalla_route_calculation_san_diego_boundary] + [[ -n '' ]]
[valhalla_route_calculation_san_diego_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_san_diego_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ grep Status
[valhalla_route_calculation_san_diego_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_san_diego_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_san_diego_boundary] + container_status=running
[valhalla_route_calculation_san_diego_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_san_diego_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_san_diego_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_san_diego_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_san_diego_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + output='{<nil> [] [5892dcc22b97] b951452c3f578e081846e4d1c941590025faa67638c18e44420ababd7e688a46 da2862fe65bfc320d7ccc87022132d6301dfc34c362db37f33c3f9aeba5cd13e 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[valhalla_route_calculation_san_diego_boundary] + [[ {<nil> [] [5892dcc22b97] b951452c3f578e081846e4d1c941590025faa67638c18e44420ababd7e688a46 da2862fe65bfc320d7ccc87022132d6301dfc34c362db37f33c3f9aeba5cd13e 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_san_diego_boundary] + return 0
[valhalla_route_calculation_san_diego_boundary] + local_host=localhost:8002
[valhalla_route_calculation_san_diego_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_san_diego_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_san_diego_boundary] ++ print_regional_request
[valhalla_route_calculation_san_diego_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_san_diego_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_la_boundary] 83cce3c00b47        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   26 seconds ago      Up 25 seconds       0.0.0.0:34678->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] + num_baseline=100
[valhalla_route_calculation_la_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] ++ wc -l
[valhalla_route_calculation_la_boundary] + log_lines=144
[valhalla_route_calculation_la_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_la_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_la_boundary] b6950a7ac78cb2734d343559cd94be01d72e852c8ea02e3ec8eaf3c055720c18
[valhalla_route_calculation_la_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_la_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary la_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary la_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_la_boundary] Namespace(bias=1, boundary='la_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_la_boundary] Retrieving baseline routes
[valhalla_route_calculation_la_boundary] Retrieving valhalla routes
[valhalla_route_calculation_la_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + grep '"error":'
[valhalla_route_calculation_san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_san_diego_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_san_diego_boundary] 5892dcc22b97        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   23 seconds ago      Up 23 seconds       0.0.0.0:34889->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] + num_baseline=100
[valhalla_route_calculation_san_diego_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ wc -l
[valhalla_route_calculation_san_diego_boundary] + log_lines=144
[valhalla_route_calculation_san_diego_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_san_diego_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_san_diego_boundary] a545634567f3d327ade2e319a04dfd22c4b9ff806720091fca973326586b5023
[valhalla_route_calculation_san_diego_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary san_diego_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary san_diego_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_san_diego_boundary] Namespace(bias=1, boundary='san_diego_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_san_diego_boundary] Retrieving baseline routes
[valhalla_route_calculation_san_diego_boundary] Retrieving valhalla routes
[valhalla_route_calculation_san_diego_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_dallas_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_dallas_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_dallas_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_dallas_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[valhalla_route_calculation_dallas_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[valhalla_route_calculation_dallas_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_dallas_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_dallas_boundary] + echo 3642 valhalla_log2.txt
[valhalla_route_calculation_dallas_boundary] 3642 valhalla_log2.txt
[valhalla_route_calculation_dallas_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[valhalla_route_calculation_dallas_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[valhalla_route_calculation_dallas_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_dallas_boundary] 242fc7d1847276435fc234886620b2251928010c48566510ba0136ec55ab710e
[valhalla_route_calculation_dallas_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[valhalla_route_calculation_dallas_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_dallas_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_dallas_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary dallas_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_dallas_boundary] Namespace(bias=1, boundary='dallas_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_dallas_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_dallas_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_dallas_boundary] Adding 3642 lines of logs
[valhalla_route_calculation_dallas_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_dallas_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_dallas_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary dallas_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_dallas_boundary] Valhalla Diagnostic) Boundary: dallas_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 490.58 | BiasIterBwd: 402.46 | UnbiasIterFwd: 4618.34 | UnbiasIterBwd: 5755.2
[valhalla_route_calculation_dallas_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[valhalla_route_calculation_houston_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_houston_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_houston_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_houston_boundary] Namespace(bias=0, boundary='houston_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_houston_boundary] Retrieving baseline routes
[valhalla_route_calculation_houston_boundary] Retrieving valhalla routes
[valhalla_route_calculation_houston_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_la_boundary] Out of 100 routes, found 99 trips
[valhalla_route_calculation_la_boundary] Writing 99 valhalla routes to pickle
[valhalla_route_calculation_la_boundary] Exporting 99 valhalla routes to insight database
[valhalla_route_calculation_la_boundary] Namespace(bias=0, boundary='la_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_la_boundary] Retrieving baseline routes
[valhalla_route_calculation_la_boundary] Retrieving valhalla routes
[valhalla_route_calculation_la_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_san_diego_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_san_diego_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_san_diego_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_san_diego_boundary] Namespace(bias=0, boundary='san_diego_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_san_diego_boundary] Retrieving baseline routes
[valhalla_route_calculation_san_diego_boundary] Retrieving valhalla routes
[valhalla_route_calculation_san_diego_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_dallas_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[valhalla_route_calculation_dallas_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[valhalla_route_calculation_dallas_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_dallas_boundary
[Pipeline] [valhalla_route_calculation_dallas_boundary] stash
[valhalla_route_calculation_dallas_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_dallas_boundary] sh
[valhalla_route_calculation_dallas_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_dallas_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_dallas_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_dallas_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_dallas_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_dallas_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_dallas_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_dallas_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_dallas_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_dallas_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_dallas_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_dallas_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_dallas_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_dallas_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_dallas_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_dallas_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_dallas_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_dallas_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_dallas_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_dallas_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_dallas_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_dallas_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_dallas_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_dallas_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + cleanup_network
[valhalla_route_calculation_dallas_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_dallas_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_dallas_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_dallas_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_dallas_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_dallas_boundary] ++ tr -s ' '
[valhalla_route_calculation_dallas_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_dallas_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_dallas_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_dallas_boundary] + cleanup_routing_engine
[valhalla_route_calculation_dallas_boundary] + [[ -n '' ]]
[valhalla_route_calculation_dallas_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_dallas_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + gzip
[valhalla_route_calculation_dallas_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_dallas_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_dallas_boundary] }
[Pipeline] [valhalla_route_calculation_dallas_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_dallas_boundary] }
[valhalla_route_calculation_seattle_boundary] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_dallas_boundary] // node
[Pipeline] [valhalla_route_calculation_seattle_boundary] {
[Pipeline] [valhalla_route_calculation_dallas_boundary] }
[Pipeline] [valhalla_route_calculation_seattle_boundary] withEnv
[Pipeline] [valhalla_route_calculation_seattle_boundary] {
[Pipeline] [valhalla_route_calculation_seattle_boundary] checkout
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_seattle_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_seattle_boundary] Pruning obsolete local branches
[valhalla_route_calculation_seattle_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_seattle_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_seattle_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_seattle_boundary] Cleaning workspace
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_seattle_boundary] Resetting working tree
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_seattle_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_seattle_boundary] unstash
[Pipeline] [valhalla_route_calculation_seattle_boundary] sh
[valhalla_route_calculation_seattle_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seattle_boundary] + scripts/setup.sh
[valhalla_route_calculation_seattle_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_seattle_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_seattle_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_seattle_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seattle_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seattle_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seattle_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_seattle_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_seattle_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_seattle_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_seattle_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seattle_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seattle_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seattle_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seattle_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seattle_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_seattle_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_seattle_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_boundary] + [[ -n true ]]
[valhalla_route_calculation_seattle_boundary] + sync_aws_mapdata
[valhalla_route_calculation_seattle_boundary] + which aws
[valhalla_route_calculation_seattle_boundary] /usr/bin/aws
[valhalla_route_calculation_seattle_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_seattle_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[valhalla_route_calculation_san_diego_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_san_diego_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_san_diego_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_san_diego_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_houston_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_houston_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_houston_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_houston_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[valhalla_route_calculation_la_boundary] Out of 100 routes, found 99 trips
[valhalla_route_calculation_la_boundary] Exporting 99 valhalla routes to insight database
[valhalla_route_calculation_la_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_la_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_san_diego_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_san_diego_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_san_diego_boundary] + echo 3703 valhalla_log2.txt
[valhalla_route_calculation_san_diego_boundary] 3703 valhalla_log2.txt
[valhalla_route_calculation_san_diego_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_san_diego_boundary] da2ffc0ba17125337bb8368933c65517883c8e52671c5b3db865df526877c978
[valhalla_route_calculation_san_diego_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_san_diego_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_san_diego_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary san_diego_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_houston_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[valhalla_route_calculation_houston_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_houston_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_houston_boundary] + echo 3777 valhalla_log2.txt
[valhalla_route_calculation_houston_boundary] 3777 valhalla_log2.txt
[valhalla_route_calculation_houston_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[valhalla_route_calculation_houston_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[valhalla_route_calculation_houston_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_houston_boundary] c7b935bae7799e755f41790861592134c5817e5a56406a2d6fa5fffd6bb91a0f
[valhalla_route_calculation_houston_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[valhalla_route_calculation_houston_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_houston_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_houston_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary houston_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_houston_boundary] Namespace(bias=1, boundary='houston_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_houston_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_houston_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_houston_boundary] Adding 3777 lines of logs
[valhalla_route_calculation_houston_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_houston_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_la_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_la_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_la_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_la_boundary] + echo 3791 valhalla_log2.txt
[valhalla_route_calculation_la_boundary] 3791 valhalla_log2.txt
[valhalla_route_calculation_la_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_la_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_la_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_la_boundary] b6792e770e0cf72e0272a58046c3ed150b03e625a570a60b76a12be73b8c8001
[valhalla_route_calculation_la_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_la_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_la_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_houston_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary houston_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_houston_boundary] Valhalla Diagnostic) Boundary: houston_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 586.11 | BiasIterBwd: 631.93 | UnbiasIterFwd: 5613.56 | UnbiasIterBwd: 6546.8
[valhalla_route_calculation_houston_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[valhalla_route_calculation_la_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary la_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_la_boundary] Namespace(bias=1, boundary='la_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_la_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_la_boundary] Writing 99 valhalla routes to pickle
[valhalla_route_calculation_la_boundary] Adding 3791 lines of logs
[valhalla_route_calculation_la_boundary] Out of 99 routes, found 99 logs
[valhalla_route_calculation_la_boundary] Exporting 99 valhalla routes to insight database
[valhalla_route_calculation_san_diego_boundary] Namespace(bias=1, boundary='san_diego_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_san_diego_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_san_diego_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_san_diego_boundary] Adding 3703 lines of logs
[valhalla_route_calculation_san_diego_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_san_diego_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_la_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary la_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_la_boundary] Valhalla Diagnostic) Boundary: la_boundary | Requested: 99 | Successful: 99 | Failed: 0 | BiasIterFwd: 464.15 | BiasIterBwd: 601.01 | UnbiasIterFwd: 7457.08 | UnbiasIterBwd: 8597.42
[valhalla_route_calculation_la_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_san_diego_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary san_diego_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_san_diego_boundary] Valhalla Diagnostic) Boundary: san_diego_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 235.5 | BiasIterBwd: 300.96 | UnbiasIterFwd: 2789.49 | UnbiasIterBwd: 3911.27
[valhalla_route_calculation_san_diego_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_seattle_boundary] + create_network
[valhalla_route_calculation_seattle_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] ++ wc -l
[valhalla_route_calculation_seattle_boundary] + network_count=1
[valhalla_route_calculation_seattle_boundary] + test 1 -eq 2
[valhalla_route_calculation_seattle_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_seattle_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] 956b76cb4311ff8bd93d126b94f2154bb6b0edb129c2349a8819463c9b38ecfd
[valhalla_route_calculation_seattle_boundary] + launch_postgis
[valhalla_route_calculation_seattle_boundary] + [[ -n yes ]]
[valhalla_route_calculation_seattle_boundary] + return 0
[Pipeline] [valhalla_route_calculation_seattle_boundary] sh
[valhalla_route_calculation_seattle_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seattle_boundary] + scripts/dump-map-info.sh seattle_boundary
[valhalla_route_calculation_seattle_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_seattle_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_seattle_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_seattle_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seattle_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seattle_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seattle_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_seattle_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_seattle_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_seattle_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_seattle_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seattle_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seattle_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seattle_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seattle_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seattle_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_seattle_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + BOUNDARY=seattle_boundary
[valhalla_route_calculation_seattle_boundary] + dump_map_info seattle_boundary
[valhalla_route_calculation_seattle_boundary] + BOUNDARY=seattle_boundary
[valhalla_route_calculation_seattle_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_seattle_boundary] + mapdata_version=mapdata-seattle_boundary.version
[valhalla_route_calculation_seattle_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-seattle_boundary.version
[Pipeline] [valhalla_route_calculation_seattle_boundary] sh
[valhalla_route_calculation_seattle_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seattle_boundary] + scripts/run-route-diagnostics-pathiter.sh seattle_boundary
[valhalla_route_calculation_seattle_boundary] + BOUNDARY=seattle_boundary
[valhalla_route_calculation_seattle_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_seattle_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_seattle_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_seattle_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_seattle_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seattle_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seattle_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seattle_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_seattle_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_seattle_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_seattle_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_seattle_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seattle_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seattle_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seattle_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seattle_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seattle_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_seattle_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + launch_postgis
[valhalla_route_calculation_seattle_boundary] + [[ -n yes ]]
[valhalla_route_calculation_seattle_boundary] + return 0
[valhalla_route_calculation_seattle_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_seattle_boundary] + [[ -n '' ]]
[valhalla_route_calculation_seattle_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_seattle_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_seattle_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_seattle_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_seattle_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_seattle_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_seattle_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_seattle_boundary] + local_host=localhost:8002
[valhalla_route_calculation_seattle_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_seattle_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_seattle_boundary] ++ print_regional_request
[valhalla_route_calculation_seattle_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_seattle_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + grep '"error":'
[valhalla_route_calculation_seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[valhalla_route_calculation_houston_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[valhalla_route_calculation_houston_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_boundary
[Pipeline] [valhalla_route_calculation_houston_boundary] stash
[valhalla_route_calculation_la_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_la_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_la_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_boundary
[valhalla_route_calculation_san_diego_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_san_diego_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_san_diego_boundary
[valhalla_route_calculation_seattle_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_seattle_boundary] f0df40aee887        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   9 seconds ago       Up 8 seconds        0.0.0.0:35241->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + kill_valhalla
[valhalla_route_calculation_seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_seattle_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_seattle_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_seattle_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_seattle_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[Pipeline] [valhalla_route_calculation_la_boundary] stash
[Pipeline] [valhalla_route_calculation_san_diego_boundary] stash
[valhalla_route_calculation_seattle_boundary] + launch_routing_engine
[valhalla_route_calculation_seattle_boundary] + [[ -n '' ]]
[valhalla_route_calculation_seattle_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_seattle_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] ++ grep Status
[valhalla_route_calculation_seattle_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_seattle_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_seattle_boundary] + container_status=running
[valhalla_route_calculation_seattle_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_seattle_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_seattle_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_seattle_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_seattle_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + output='{<nil> [] [f0df40aee887] 956b76cb4311ff8bd93d126b94f2154bb6b0edb129c2349a8819463c9b38ecfd c598e9245c1847972f6945f9ffc2c23ec84e5e291b6d8383e262b045b108aac4 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[valhalla_route_calculation_seattle_boundary] + [[ {<nil> [] [f0df40aee887] 956b76cb4311ff8bd93d126b94f2154bb6b0edb129c2349a8819463c9b38ecfd c598e9245c1847972f6945f9ffc2c23ec84e5e291b6d8383e262b045b108aac4 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_seattle_boundary] + return 0
[valhalla_route_calculation_seattle_boundary] + local_host=localhost:8002
[valhalla_route_calculation_seattle_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_seattle_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_seattle_boundary] ++ print_regional_request
[valhalla_route_calculation_seattle_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_seattle_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_houston_boundary] sh
[valhalla_route_calculation_la_boundary] Stashed 5 file(s)
[valhalla_route_calculation_houston_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_la_boundary] sh
[valhalla_route_calculation_san_diego_boundary] Stashed 5 file(s)
[valhalla_route_calculation_houston_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_houston_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_houston_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_houston_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_houston_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_houston_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_houston_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_houston_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_houston_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_houston_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_houston_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_houston_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_houston_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_houston_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_houston_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_houston_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_houston_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_houston_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_houston_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_houston_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_houston_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + cleanup_network
[valhalla_route_calculation_houston_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_houston_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_houston_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_houston_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_houston_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_houston_boundary] ++ tr -s ' '
[valhalla_route_calculation_houston_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_houston_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_houston_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_la_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_la_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_la_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_la_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_la_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_la_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_la_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_la_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_la_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_la_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_la_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_la_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_la_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_la_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_la_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_la_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_la_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_la_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_la_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_la_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_la_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_la_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_la_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_la_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_la_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_la_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + cleanup_network
[valhalla_route_calculation_la_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_la_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_la_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_la_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_la_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] ++ tr -s ' '
[valhalla_route_calculation_la_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_la_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_la_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_san_diego_boundary] sh
[valhalla_route_calculation_houston_boundary] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_boundary] + cleanup_routing_engine
[valhalla_route_calculation_houston_boundary] + [[ -n '' ]]
[valhalla_route_calculation_houston_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_houston_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + gzip
[valhalla_route_calculation_houston_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_la_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_la_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_boundary] + cleanup_routing_engine
[valhalla_route_calculation_la_boundary] + [[ -n '' ]]
[valhalla_route_calculation_la_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_la_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + gzip
[valhalla_route_calculation_la_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_san_diego_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_san_diego_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_san_diego_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_san_diego_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_san_diego_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_san_diego_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_san_diego_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_san_diego_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_san_diego_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_san_diego_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_san_diego_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_san_diego_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_san_diego_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_san_diego_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_san_diego_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_san_diego_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_san_diego_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_san_diego_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_san_diego_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_san_diego_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_san_diego_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_san_diego_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + cleanup_network
[valhalla_route_calculation_san_diego_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_san_diego_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_san_diego_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_san_diego_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_san_diego_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_san_diego_boundary] ++ tr -s ' '
[valhalla_route_calculation_san_diego_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_san_diego_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_san_diego_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_san_diego_boundary] + cleanup_routing_engine
[valhalla_route_calculation_san_diego_boundary] + [[ -n '' ]]
[valhalla_route_calculation_san_diego_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_san_diego_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + gzip
[valhalla_route_calculation_san_diego_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + grep '"error":'
[valhalla_route_calculation_seattle_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_seattle_boundary] f0df40aee887        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   21 seconds ago      Up 20 seconds       0.0.0.0:35241->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] + num_baseline=100
[valhalla_route_calculation_seattle_boundary] ++ wc -l
[valhalla_route_calculation_seattle_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + log_lines=144
[valhalla_route_calculation_seattle_boundary] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_seattle_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_seattle_boundary] 38bb831d5350d91bedd7b9bcd825491d06d39d4cc5e99653e0da011641d2c66b
[valhalla_route_calculation_seattle_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[valhalla_route_calculation_seattle_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary seattle_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary seattle_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_seattle_boundary] Namespace(bias=1, boundary='seattle_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_seattle_boundary] Retrieving baseline routes
[valhalla_route_calculation_seattle_boundary] Retrieving valhalla routes
[valhalla_route_calculation_seattle_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_san_diego_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_san_diego_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_san_diego_boundary] }
[Pipeline] [valhalla_route_calculation_san_diego_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_san_diego_boundary] }
[Pipeline] [valhalla_route_calculation_san_diego_boundary] // node
[valhalla_route_calculation_taiwan_boundary] Running on docker-tm-03 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_san_diego_boundary] }
[Pipeline] [valhalla_route_calculation_taiwan_boundary] {
[Pipeline] [valhalla_route_calculation_taiwan_boundary] withEnv
[Pipeline] [valhalla_route_calculation_taiwan_boundary] {
[Pipeline] [valhalla_route_calculation_taiwan_boundary] checkout
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_taiwan_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_taiwan_boundary] Pruning obsolete local branches
[valhalla_route_calculation_taiwan_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_taiwan_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_taiwan_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_taiwan_boundary] Cleaning workspace
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_taiwan_boundary] Resetting working tree
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_taiwan_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_taiwan_boundary] unstash
[valhalla_route_calculation_houston_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_houston_boundary] }
[Pipeline] [valhalla_route_calculation_houston_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_houston_boundary] }
[valhalla_route_calculation_taipei_boundary] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_houston_boundary] // node
[Pipeline] [valhalla_route_calculation_taipei_boundary] {
[Pipeline] [valhalla_route_calculation_houston_boundary] }
[Pipeline] [valhalla_route_calculation_taipei_boundary] withEnv
[Pipeline] [valhalla_route_calculation_taipei_boundary] {
[Pipeline] [valhalla_route_calculation_taipei_boundary] checkout
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_taipei_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_taipei_boundary] Pruning obsolete local branches
[valhalla_route_calculation_taipei_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git --version # timeout=10
[Pipeline] [valhalla_route_calculation_taiwan_boundary] sh
[valhalla_route_calculation_la_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_taipei_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_taipei_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_taipei_boundary] Cleaning workspace
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_taipei_boundary] Resetting working tree
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_taipei_boundary]  > /usr/bin/git clean -fdx # timeout=10
[valhalla_route_calculation_taiwan_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_taipei_boundary] unstash
[Pipeline] [valhalla_route_calculation_la_boundary] }
[Pipeline] [valhalla_route_calculation_la_boundary] // withEnv
[valhalla_route_calculation_taiwan_boundary] + scripts/setup.sh
[valhalla_route_calculation_taiwan_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_taiwan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_taiwan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_taiwan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taiwan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taiwan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taiwan_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taiwan_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_taiwan_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_taiwan_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_taiwan_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taiwan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taiwan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taiwan_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taiwan_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taiwan_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taiwan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taiwan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_taiwan_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taiwan_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taiwan_boundary] + [[ -n true ]]
[valhalla_route_calculation_taiwan_boundary] + sync_aws_mapdata
[valhalla_route_calculation_taiwan_boundary] + which aws
[valhalla_route_calculation_taiwan_boundary] /usr/bin/aws
[valhalla_route_calculation_taiwan_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_taiwan_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/TW-170616-136/ /jenkins/autopilot-maps/TW-170616-136
[Pipeline] [valhalla_route_calculation_la_boundary] }
[valhalla_route_calculation_houston_regression_test] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_la_boundary] // node
[Pipeline] [valhalla_route_calculation_houston_regression_test] {
[Pipeline] [valhalla_route_calculation_la_boundary] }
[Pipeline] [valhalla_route_calculation_houston_regression_test] withEnv
[Pipeline] [valhalla_route_calculation_houston_regression_test] {
[Pipeline] [valhalla_route_calculation_houston_regression_test] checkout
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_houston_regression_test] Fetching changes from the remote Git repository
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_houston_regression_test] Pruning obsolete local branches
[valhalla_route_calculation_houston_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_houston_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_houston_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_houston_regression_test] Cleaning workspace
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_houston_regression_test] Resetting working tree
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_houston_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_houston_regression_test] unstash
[valhalla_route_calculation_taiwan_boundary] + create_network
[valhalla_route_calculation_taiwan_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + network=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ wc -l
[valhalla_route_calculation_taiwan_boundary] + network_count=1
[valhalla_route_calculation_taiwan_boundary] + test 1 -eq 2
[valhalla_route_calculation_taiwan_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_TW'
[valhalla_route_calculation_taiwan_boundary] Creating network jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + docker network create jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] 0f773fd20e62f719bc2754f34eac10d34cadc3cbf77ac046f3d3cec70f4fce20
[valhalla_route_calculation_taiwan_boundary] + launch_postgis
[valhalla_route_calculation_taiwan_boundary] + [[ -n yes ]]
[valhalla_route_calculation_taiwan_boundary] + return 0
[Pipeline] [valhalla_route_calculation_taiwan_boundary] sh
[valhalla_route_calculation_taiwan_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_taipei_boundary] sh
[valhalla_route_calculation_taipei_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_taiwan_boundary] + scripts/dump-map-info.sh taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_taiwan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_taiwan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_taiwan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taiwan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taiwan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taiwan_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taiwan_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_taiwan_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_taiwan_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_taiwan_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taiwan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taiwan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taiwan_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taiwan_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taiwan_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taiwan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taiwan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + BOUNDARY=taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + dump_map_info taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + BOUNDARY=taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + [[ -r /jenkins/autopilot-maps/TW-170616-136/VERSION ]]
[valhalla_route_calculation_taiwan_boundary] + mapdata_version=mapdata-taiwan_boundary.version
[valhalla_route_calculation_taiwan_boundary] + cp /jenkins/autopilot-maps/TW-170616-136/VERSION mapdata-taiwan_boundary.version
[valhalla_route_calculation_taipei_boundary] + scripts/setup.sh
[valhalla_route_calculation_taipei_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_taipei_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_taipei_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_taipei_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taipei_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taipei_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taipei_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taipei_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_taipei_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_taipei_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_taipei_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taipei_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taipei_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taipei_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taipei_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taipei_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taipei_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_taipei_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_boundary] + [[ -n true ]]
[valhalla_route_calculation_taipei_boundary] + sync_aws_mapdata
[valhalla_route_calculation_taipei_boundary] + which aws
[valhalla_route_calculation_taipei_boundary] /usr/bin/aws
[valhalla_route_calculation_taipei_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_taipei_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/TW-170616-136/ /jenkins/autopilot-maps/TW-170616-136
[Pipeline] [valhalla_route_calculation_taiwan_boundary] sh
[valhalla_route_calculation_taiwan_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [valhalla_route_calculation_houston_regression_test] sh
[valhalla_route_calculation_taiwan_boundary] + scripts/run-route-diagnostics-pathiter.sh taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + BOUNDARY=taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_taiwan_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_taiwan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_taiwan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_taiwan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taiwan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taiwan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taiwan_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taiwan_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_taiwan_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_taiwan_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_taiwan_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taiwan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taiwan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taiwan_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taiwan_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taiwan_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taiwan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taiwan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + launch_postgis
[valhalla_route_calculation_taiwan_boundary] + [[ -n yes ]]
[valhalla_route_calculation_taiwan_boundary] + return 0
[valhalla_route_calculation_taiwan_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_taiwan_boundary] + [[ -n '' ]]
[valhalla_route_calculation_taiwan_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_taiwan_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P'
[valhalla_route_calculation_taiwan_boundary] + [[ -d /jenkins/autopilot-maps/TW-170616-136/tm/TW ]]
[valhalla_route_calculation_taiwan_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_taiwan_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_taiwan_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_taiwan_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'ln -sf /mapdata/TW-170616-136/tm/TW /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_taiwan_boundary] + local_host=localhost:8002
[valhalla_route_calculation_taiwan_boundary] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[valhalla_route_calculation_taiwan_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[valhalla_route_calculation_taiwan_boundary] ++ print_regional_request
[valhalla_route_calculation_taiwan_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_taiwan_boundary] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_houston_regression_test] + scripts/setup.sh
[valhalla_route_calculation_houston_regression_test] ++ realpath scripts/setup.sh
[valhalla_route_calculation_houston_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_houston_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_houston_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_houston_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_houston_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_houston_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_houston_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_houston_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_houston_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_houston_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_houston_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_houston_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_houston_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_houston_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_houston_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_houston_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_houston_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_regression_test] + [[ -n true ]]
[valhalla_route_calculation_houston_regression_test] + sync_aws_mapdata
[valhalla_route_calculation_houston_regression_test] + which aws
[valhalla_route_calculation_houston_regression_test] /usr/bin/aws
[valhalla_route_calculation_houston_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_houston_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[valhalla_route_calculation_taipei_boundary] + create_network
[valhalla_route_calculation_taipei_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + network=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] ++ wc -l
[valhalla_route_calculation_taipei_boundary] + network_count=1
[valhalla_route_calculation_taipei_boundary] + test 1 -eq 2
[valhalla_route_calculation_taipei_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_TW'
[valhalla_route_calculation_taipei_boundary] Creating network jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + docker network create jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] f54c02418b7e01a0a550c807b594842bc39d7e0e07183cb36f443c9c00e80ef6
[valhalla_route_calculation_taipei_boundary] + launch_postgis
[valhalla_route_calculation_taipei_boundary] + [[ -n yes ]]
[valhalla_route_calculation_taipei_boundary] + return 0
[Pipeline] [valhalla_route_calculation_taipei_boundary] sh
[valhalla_route_calculation_taipei_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_taipei_boundary] + scripts/dump-map-info.sh taipei_boundary
[valhalla_route_calculation_taipei_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_taipei_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_taipei_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_taipei_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taipei_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taipei_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taipei_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taipei_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_taipei_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_taipei_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_taipei_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taipei_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taipei_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taipei_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taipei_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taipei_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taipei_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + BOUNDARY=taipei_boundary
[valhalla_route_calculation_taipei_boundary] + dump_map_info taipei_boundary
[valhalla_route_calculation_taipei_boundary] + BOUNDARY=taipei_boundary
[valhalla_route_calculation_taipei_boundary] + [[ -r /jenkins/autopilot-maps/TW-170616-136/VERSION ]]
[valhalla_route_calculation_taipei_boundary] + mapdata_version=mapdata-taipei_boundary.version
[valhalla_route_calculation_taipei_boundary] + cp /jenkins/autopilot-maps/TW-170616-136/VERSION mapdata-taipei_boundary.version
[Pipeline] [valhalla_route_calculation_taipei_boundary] sh
[valhalla_route_calculation_taipei_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_taipei_boundary] + scripts/run-route-diagnostics-pathiter.sh taipei_boundary
[valhalla_route_calculation_taipei_boundary] + BOUNDARY=taipei_boundary
[valhalla_route_calculation_taipei_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_taipei_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_taipei_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_taipei_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_taipei_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taipei_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taipei_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taipei_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taipei_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_taipei_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_taipei_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_taipei_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taipei_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taipei_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taipei_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taipei_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taipei_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taipei_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + launch_postgis
[valhalla_route_calculation_taipei_boundary] + [[ -n yes ]]
[valhalla_route_calculation_taipei_boundary] + return 0
[valhalla_route_calculation_taipei_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_taipei_boundary] + [[ -n '' ]]
[valhalla_route_calculation_taipei_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_taipei_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P'
[valhalla_route_calculation_taipei_boundary] + [[ -d /jenkins/autopilot-maps/TW-170616-136/tm/TW ]]
[valhalla_route_calculation_taipei_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_taipei_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_taipei_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'ln -sf /mapdata/TW-170616-136/tm/TW /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_taipei_boundary] + local_host=localhost:8002
[valhalla_route_calculation_taipei_boundary] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[valhalla_route_calculation_taipei_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[valhalla_route_calculation_taipei_boundary] ++ print_regional_request
[valhalla_route_calculation_taipei_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_taipei_boundary] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + grep '"error":'
[valhalla_route_calculation_taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_taiwan_boundary] e67962cbf70d        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   6 seconds ago       Up 4 seconds        0.0.0.0:34890->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + kill_valhalla
[valhalla_route_calculation_taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pkill -f valhalla_route_service
[valhalla_route_calculation_taiwan_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_taiwan_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_taiwan_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_taiwan_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:/navigation/valhalla-install.tgz
[valhalla_route_calculation_taipei_boundary] + grep '"error":'
[valhalla_route_calculation_taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_taipei_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_taipei_boundary] 661f0fd6b144        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   5 seconds ago       Up 4 seconds        0.0.0.0:34572->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + kill_valhalla
[valhalla_route_calculation_taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pkill -f valhalla_route_service
[valhalla_route_calculation_taipei_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_taipei_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_taipei_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_taipei_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:/navigation/valhalla-install.tgz
[valhalla_route_calculation_taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_taiwan_boundary] + launch_routing_engine
[valhalla_route_calculation_taiwan_boundary] + [[ -n '' ]]
[valhalla_route_calculation_taiwan_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_taiwan_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ grep Status
[valhalla_route_calculation_taiwan_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_taiwan_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_taiwan_boundary] + container_status=running
[valhalla_route_calculation_taiwan_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_taiwan_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pgrep -f valhalla_route_service
[valhalla_route_calculation_taiwan_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_taiwan_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_TW ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + network=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}'
[valhalla_route_calculation_taiwan_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + output='{<nil> [] [e67962cbf70d] 0f773fd20e62f719bc2754f34eac10d34cadc3cbf77ac046f3d3cec70f4fce20 5bcffad62f1a52ac24d156db03d258ab17ab9a004f02a5a6169f807e3d664dfd 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[valhalla_route_calculation_taiwan_boundary] + [[ {<nil> [] [e67962cbf70d] 0f773fd20e62f719bc2754f34eac10d34cadc3cbf77ac046f3d3cec70f4fce20 5bcffad62f1a52ac24d156db03d258ab17ab9a004f02a5a6169f807e3d664dfd 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_taiwan_boundary] + return 0
[valhalla_route_calculation_taiwan_boundary] + local_host=localhost:8002
[valhalla_route_calculation_taiwan_boundary] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[valhalla_route_calculation_taiwan_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[valhalla_route_calculation_taiwan_boundary] ++ print_regional_request
[valhalla_route_calculation_taiwan_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_taiwan_boundary] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + launch_routing_engine
[valhalla_route_calculation_taipei_boundary] + [[ -n '' ]]
[valhalla_route_calculation_taipei_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_taipei_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] ++ grep Status
[valhalla_route_calculation_taipei_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_taipei_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_taipei_boundary] + container_status=running
[valhalla_route_calculation_taipei_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_taipei_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pgrep -f valhalla_route_service
[valhalla_route_calculation_taipei_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_taipei_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_TW ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + network=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}'
[valhalla_route_calculation_taipei_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + output='{<nil> [] [661f0fd6b144] f54c02418b7e01a0a550c807b594842bc39d7e0e07183cb36f443c9c00e80ef6 0ce53284c6291a4eecaba6d55b3bfc8abb0603c22b6fdd039d01b285972ef47c 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[valhalla_route_calculation_taipei_boundary] + [[ {<nil> [] [661f0fd6b144] f54c02418b7e01a0a550c807b594842bc39d7e0e07183cb36f443c9c00e80ef6 0ce53284c6291a4eecaba6d55b3bfc8abb0603c22b6fdd039d01b285972ef47c 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_taipei_boundary] + return 0
[valhalla_route_calculation_taipei_boundary] + local_host=localhost:8002
[valhalla_route_calculation_taipei_boundary] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[valhalla_route_calculation_taipei_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[valhalla_route_calculation_taipei_boundary] ++ print_regional_request
[valhalla_route_calculation_taipei_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_taipei_boundary] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + grep '"error":'
[valhalla_route_calculation_taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_taiwan_boundary] e67962cbf70d        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   14 seconds ago      Up 12 seconds       0.0.0.0:34890->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] + num_baseline=100
[valhalla_route_calculation_taiwan_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ wc -l
[valhalla_route_calculation_taiwan_boundary] + log_lines=138
[valhalla_route_calculation_taiwan_boundary] + let 'log_lines = 138 - 1'
[valhalla_route_calculation_taiwan_boundary] + docker run --network jenkins_ValhallaPipeline_1004_TW --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_taiwan_boundary] 082018eb8692724cbd8706d4fb346a0e3a4931621d4d4406c863fb41bc4cfe61
[valhalla_route_calculation_taipei_boundary] + grep '"error":'
[valhalla_route_calculation_taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taiwan_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taiwan_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taiwan_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_taipei_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_taipei_boundary] 661f0fd6b144        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   12 seconds ago      Up 11 seconds       0.0.0.0:34572->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] + num_baseline=100
[valhalla_route_calculation_taipei_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] ++ wc -l
[valhalla_route_calculation_taipei_boundary] + log_lines=135
[valhalla_route_calculation_taipei_boundary] + let 'log_lines = 135 - 1'
[valhalla_route_calculation_taipei_boundary] + docker run --network jenkins_ValhallaPipeline_1004_TW --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_taipei_boundary] d7c6d34a7e4857379f26e25a934cfd6b554872560d962c5a95f083c77aaee225
[valhalla_route_calculation_taipei_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[valhalla_route_calculation_taipei_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taipei_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taipei_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_taiwan_boundary] Namespace(bias=1, boundary='taiwan_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[valhalla_route_calculation_taiwan_boundary] Retrieving baseline routes
[valhalla_route_calculation_taipei_boundary] Namespace(bias=1, boundary='taipei_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[valhalla_route_calculation_taipei_boundary] Retrieving baseline routes
[valhalla_route_calculation_taipei_boundary] Retrieving valhalla routes
[valhalla_route_calculation_taipei_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_seattle_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_seattle_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_seattle_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_seattle_boundary] Namespace(bias=0, boundary='seattle_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_seattle_boundary] Retrieving baseline routes
[valhalla_route_calculation_seattle_boundary] Retrieving valhalla routes
[valhalla_route_calculation_seattle_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_taiwan_boundary] Retrieving valhalla routes
[valhalla_route_calculation_taiwan_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_houston_regression_test] + create_network
[valhalla_route_calculation_houston_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] ++ wc -l
[valhalla_route_calculation_houston_regression_test] + network_count=1
[valhalla_route_calculation_houston_regression_test] + test 1 -eq 2
[valhalla_route_calculation_houston_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_houston_regression_test] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] 4cf2db0eb1ad54b1bc0a1dbf76ba84a77da6e34af0130a49068958e335881715
[valhalla_route_calculation_houston_regression_test] + launch_postgis
[valhalla_route_calculation_houston_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_houston_regression_test] + return 0
[Pipeline] [valhalla_route_calculation_houston_regression_test] sh
[valhalla_route_calculation_houston_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_houston_regression_test] + scripts/dump-map-info.sh houston_regression_test
[valhalla_route_calculation_houston_regression_test] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_houston_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_houston_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_houston_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_houston_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_houston_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_houston_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_houston_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_houston_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_houston_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_houston_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_houston_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_houston_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_houston_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_houston_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_houston_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_houston_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + BOUNDARY=houston_regression_test
[valhalla_route_calculation_houston_regression_test] + dump_map_info houston_regression_test
[valhalla_route_calculation_houston_regression_test] + BOUNDARY=houston_regression_test
[valhalla_route_calculation_houston_regression_test] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_houston_regression_test] + mapdata_version=mapdata-houston_regression_test.version
[valhalla_route_calculation_houston_regression_test] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-houston_regression_test.version
[Pipeline] [valhalla_route_calculation_houston_regression_test] sh
[valhalla_route_calculation_houston_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_houston_regression_test] + scripts/run-route-diagnostics-pathiter.sh houston_regression_test
[valhalla_route_calculation_houston_regression_test] + BOUNDARY=houston_regression_test
[valhalla_route_calculation_houston_regression_test] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_houston_regression_test] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_houston_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_houston_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_houston_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_houston_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_houston_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_houston_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_houston_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_houston_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_houston_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_houston_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_houston_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_houston_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_houston_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_houston_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_houston_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_houston_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + launch_postgis
[valhalla_route_calculation_houston_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_houston_regression_test] + return 0
[valhalla_route_calculation_houston_regression_test] + launch_routing_engine nowait
[valhalla_route_calculation_houston_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_houston_regression_test] + wait_for_routing_service=nowait
[valhalla_route_calculation_houston_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_houston_regression_test] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_houston_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_houston_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_houston_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_houston_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_houston_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_houston_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_houston_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_houston_regression_test] ++ print_regional_request
[valhalla_route_calculation_houston_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_houston_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_seattle_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_seattle_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_seattle_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[valhalla_route_calculation_houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + grep '"error":'
[valhalla_route_calculation_houston_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_houston_regression_test] 097d7620e058        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   10 seconds ago      Up 10 seconds       0.0.0.0:34679->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + kill_valhalla
[valhalla_route_calculation_houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_houston_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_houston_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_houston_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_houston_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_houston_regression_test] + launch_routing_engine
[valhalla_route_calculation_houston_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_houston_regression_test] + wait_for_routing_service=wait
[valhalla_route_calculation_houston_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] ++ grep Status
[valhalla_route_calculation_houston_regression_test] ++ awk -F: '{print $2}'
[valhalla_route_calculation_houston_regression_test] ++ tr -d ' ",'
[valhalla_route_calculation_houston_regression_test] + container_status=running
[valhalla_route_calculation_houston_regression_test] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_houston_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_houston_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_houston_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_houston_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + output='{<nil> [] [097d7620e058] 4cf2db0eb1ad54b1bc0a1dbf76ba84a77da6e34af0130a49068958e335881715 b90353d431d8c10fb7d65bfbc87ad6681f264dd660a105b3ff1c562324aeedfd 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[valhalla_route_calculation_houston_regression_test] + [[ {<nil> [] [097d7620e058] 4cf2db0eb1ad54b1bc0a1dbf76ba84a77da6e34af0130a49068958e335881715 b90353d431d8c10fb7d65bfbc87ad6681f264dd660a105b3ff1c562324aeedfd 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_houston_regression_test] + return 0
[valhalla_route_calculation_houston_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_houston_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_houston_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_houston_regression_test] ++ print_regional_request
[valhalla_route_calculation_houston_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_houston_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[valhalla_route_calculation_seattle_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_seattle_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_seattle_boundary] + echo 3622 valhalla_log2.txt
[valhalla_route_calculation_seattle_boundary] 3622 valhalla_log2.txt
[valhalla_route_calculation_seattle_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[valhalla_route_calculation_seattle_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[valhalla_route_calculation_seattle_boundary] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_seattle_boundary] 1165446565ad013d716053a7be6ca32929e3e50046588b4c39064435470bd01c
[valhalla_route_calculation_seattle_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[valhalla_route_calculation_seattle_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_seattle_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary seattle_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_seattle_boundary] Namespace(bias=1, boundary='seattle_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_seattle_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_seattle_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_seattle_boundary] Adding 3622 lines of logs
[valhalla_route_calculation_seattle_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_seattle_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] + grep '"error":'
[valhalla_route_calculation_seattle_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary seattle_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_seattle_boundary] Valhalla Diagnostic) Boundary: seattle_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 688.38 | BiasIterBwd: 421.98 | UnbiasIterFwd: 5363.54 | UnbiasIterBwd: 6818.61
[valhalla_route_calculation_seattle_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[valhalla_route_calculation_houston_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_houston_regression_test] 097d7620e058        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   23 seconds ago      Up 22 seconds       0.0.0.0:34679->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] + num_baseline=100
[valhalla_route_calculation_houston_regression_test] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] ++ wc -l
[valhalla_route_calculation_houston_regression_test] + log_lines=144
[valhalla_route_calculation_houston_regression_test] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_houston_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_houston_regression_test] a95335cec0961302c8a0cd6e9bf163454a2a2fe30f661d32f01fb6b1b9e3d272
[valhalla_route_calculation_houston_regression_test] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[valhalla_route_calculation_houston_regression_test] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary houston_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary houston_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_houston_regression_test] Namespace(bias=1, boundary='houston_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_houston_regression_test] Retrieving baseline routes
[valhalla_route_calculation_houston_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_houston_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_taipei_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_taipei_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_taipei_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_taipei_boundary] Namespace(bias=0, boundary='taipei_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[valhalla_route_calculation_taipei_boundary] Retrieving baseline routes
[valhalla_route_calculation_taipei_boundary] Retrieving valhalla routes
[valhalla_route_calculation_taipei_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_seattle_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[valhalla_route_calculation_seattle_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[valhalla_route_calculation_seattle_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_boundary
[Pipeline] [valhalla_route_calculation_seattle_boundary] stash
[valhalla_route_calculation_seattle_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_seattle_boundary] sh
[valhalla_route_calculation_seattle_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seattle_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_seattle_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_seattle_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_seattle_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_seattle_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seattle_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seattle_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seattle_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_seattle_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_seattle_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_seattle_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_seattle_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seattle_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seattle_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seattle_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seattle_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seattle_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_seattle_boundary] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_seattle_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_seattle_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_seattle_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + cleanup_network
[valhalla_route_calculation_seattle_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_seattle_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_seattle_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_seattle_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_seattle_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_seattle_boundary] ++ tr -s ' '
[valhalla_route_calculation_seattle_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_seattle_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_seattle_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_boundary] + cleanup_routing_engine
[valhalla_route_calculation_seattle_boundary] + [[ -n '' ]]
[valhalla_route_calculation_seattle_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_seattle_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + gzip
[valhalla_route_calculation_seattle_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] Out of 97 routes, found 97 trips
[valhalla_route_calculation_houston_regression_test] Writing 97 valhalla routes to pickle
[valhalla_route_calculation_houston_regression_test] Exporting 97 valhalla routes to insight database
[valhalla_route_calculation_houston_regression_test] Namespace(bias=0, boundary='houston_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_houston_regression_test] Retrieving baseline routes
[valhalla_route_calculation_houston_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_houston_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_seattle_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_seattle_boundary] }
[Pipeline] [valhalla_route_calculation_seattle_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_seattle_boundary] }
[valhalla_route_calculation_taipei_regression_test] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_seattle_boundary] // node
[Pipeline] [valhalla_route_calculation_taipei_regression_test] {
[Pipeline] [valhalla_route_calculation_seattle_boundary] }
[Pipeline] [valhalla_route_calculation_taipei_regression_test] withEnv
[Pipeline] [valhalla_route_calculation_taipei_regression_test] {
[Pipeline] [valhalla_route_calculation_taipei_regression_test] checkout
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_taipei_regression_test] Fetching changes from the remote Git repository
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_taipei_regression_test] Pruning obsolete local branches
[valhalla_route_calculation_taipei_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_taipei_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_taipei_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_taipei_regression_test] Cleaning workspace
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_taipei_regression_test] Resetting working tree
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_taipei_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_taipei_regression_test] unstash
[Pipeline] [valhalla_route_calculation_taipei_regression_test] sh
[valhalla_route_calculation_taipei_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_taipei_regression_test] + scripts/setup.sh
[valhalla_route_calculation_taipei_regression_test] ++ realpath scripts/setup.sh
[valhalla_route_calculation_taipei_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_taipei_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_taipei_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taipei_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taipei_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taipei_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taipei_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_taipei_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_taipei_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_taipei_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taipei_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taipei_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taipei_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taipei_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taipei_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taipei_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_taipei_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_regression_test] + [[ -n true ]]
[valhalla_route_calculation_taipei_regression_test] + sync_aws_mapdata
[valhalla_route_calculation_taipei_regression_test] + which aws
[valhalla_route_calculation_taipei_regression_test] /usr/bin/aws
[valhalla_route_calculation_taipei_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_taipei_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/TW-170616-136/ /jenkins/autopilot-maps/TW-170616-136
[valhalla_route_calculation_taipei_regression_test] + create_network
[valhalla_route_calculation_taipei_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + network=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ wc -l
[valhalla_route_calculation_taipei_regression_test] + network_count=1
[valhalla_route_calculation_taipei_regression_test] + test 1 -eq 2
[valhalla_route_calculation_taipei_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_TW'
[valhalla_route_calculation_taipei_regression_test] Creating network jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + docker network create jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] 34300c185411910cfa3b353658d6c9542dd866779163b52b8e8766af220fcbcc
[valhalla_route_calculation_taipei_regression_test] + launch_postgis
[valhalla_route_calculation_taipei_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_taipei_regression_test] + return 0
[Pipeline] [valhalla_route_calculation_taipei_regression_test] sh
[valhalla_route_calculation_taipei_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_taipei_regression_test] + scripts/dump-map-info.sh taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_taipei_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_taipei_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_taipei_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taipei_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taipei_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taipei_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taipei_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_taipei_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_taipei_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_taipei_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taipei_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taipei_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taipei_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taipei_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taipei_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taipei_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + BOUNDARY=taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + dump_map_info taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + BOUNDARY=taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + [[ -r /jenkins/autopilot-maps/TW-170616-136/VERSION ]]
[valhalla_route_calculation_taipei_regression_test] + mapdata_version=mapdata-taipei_regression_test.version
[valhalla_route_calculation_taipei_regression_test] + cp /jenkins/autopilot-maps/TW-170616-136/VERSION mapdata-taipei_regression_test.version
[Pipeline] [valhalla_route_calculation_taipei_regression_test] sh
[valhalla_route_calculation_taipei_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_taipei_regression_test] + scripts/run-route-diagnostics-pathiter.sh taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + BOUNDARY=taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_taipei_regression_test] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_taipei_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_taipei_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_taipei_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taipei_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taipei_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taipei_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taipei_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_taipei_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_taipei_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_taipei_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taipei_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taipei_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taipei_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taipei_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taipei_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taipei_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + launch_postgis
[valhalla_route_calculation_taipei_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_taipei_regression_test] + return 0
[valhalla_route_calculation_taipei_regression_test] + launch_routing_engine nowait
[valhalla_route_calculation_taipei_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_taipei_regression_test] + wait_for_routing_service=nowait
[valhalla_route_calculation_taipei_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P'
[valhalla_route_calculation_taipei_regression_test] + [[ -d /jenkins/autopilot-maps/TW-170616-136/tm/TW ]]
[valhalla_route_calculation_taipei_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_taipei_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_taipei_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_taipei_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'ln -sf /mapdata/TW-170616-136/tm/TW /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_taipei_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_taipei_regression_test] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[valhalla_route_calculation_taipei_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[valhalla_route_calculation_taipei_regression_test] ++ print_regional_request
[valhalla_route_calculation_taipei_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_taipei_regression_test] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + [[ nowait == \n\o\w\a\i\t ]]
[valhalla_route_calculation_taipei_regression_test] + break
[valhalla_route_calculation_taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_houston_regression_test] Out of 97 routes, found 97 trips
[valhalla_route_calculation_houston_regression_test] Exporting 97 valhalla routes to insight database
[valhalla_route_calculation_houston_regression_test] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_houston_regression_test] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[valhalla_route_calculation_taipei_regression_test] + grep '"error":'
[valhalla_route_calculation_taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_taipei_regression_test] 642598c9908e        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   3 seconds ago       Up 3 seconds        0.0.0.0:35242->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + kill_valhalla
[valhalla_route_calculation_taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pkill -f valhalla_route_service
[valhalla_route_calculation_taipei_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_taipei_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_taipei_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_taipei_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:/navigation/valhalla-install.tgz
[valhalla_route_calculation_taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_taipei_regression_test] + launch_routing_engine
[valhalla_route_calculation_taipei_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_taipei_regression_test] + wait_for_routing_service=wait
[valhalla_route_calculation_taipei_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ grep Status
[valhalla_route_calculation_taipei_regression_test] ++ awk -F: '{print $2}'
[valhalla_route_calculation_taipei_regression_test] ++ tr -d ' ",'
[valhalla_route_calculation_taipei_regression_test] + container_status=running
[valhalla_route_calculation_taipei_regression_test] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_taipei_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pgrep -f valhalla_route_service
[valhalla_route_calculation_taipei_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_taipei_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_TW ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + network=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}'
[valhalla_route_calculation_taipei_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + output='{<nil> [] [642598c9908e] 34300c185411910cfa3b353658d6c9542dd866779163b52b8e8766af220fcbcc e9d0ae33099720f9499f08338e3fd88190167c88137f45279f4f01cad573b979 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[valhalla_route_calculation_taipei_regression_test] + [[ {<nil> [] [642598c9908e] 34300c185411910cfa3b353658d6c9542dd866779163b52b8e8766af220fcbcc e9d0ae33099720f9499f08338e3fd88190167c88137f45279f4f01cad573b979 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_taipei_regression_test] + return 0
[valhalla_route_calculation_taipei_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_taipei_regression_test] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[valhalla_route_calculation_taipei_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[valhalla_route_calculation_taipei_regression_test] ++ print_regional_request
[valhalla_route_calculation_taipei_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_taipei_regression_test] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] + grep '"error":'
[valhalla_route_calculation_taipei_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_taipei_regression_test] 642598c9908e        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   9 seconds ago       Up 9 seconds        0.0.0.0:35242->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] + num_baseline=100
[valhalla_route_calculation_taipei_regression_test] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ wc -l
[valhalla_route_calculation_taipei_regression_test] + log_lines=103
[valhalla_route_calculation_taipei_regression_test] + let 'log_lines = 103 - 1'
[valhalla_route_calculation_taipei_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_TW --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_taipei_regression_test] ebf2ab2bb5013051a6dcae872a9ee90e2d9405cc44f7b423e6d624735eef3721
[valhalla_route_calculation_taipei_regression_test] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taipei_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taipei_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_taipei_regression_test] Namespace(bias=1, boundary='taipei_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[valhalla_route_calculation_taipei_regression_test] Retrieving baseline routes
[valhalla_route_calculation_taipei_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_taipei_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_taipei_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_taipei_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_taipei_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_taipei_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[valhalla_route_calculation_houston_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[valhalla_route_calculation_houston_regression_test] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_houston_regression_test] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_houston_regression_test] + echo 3228 valhalla_log2.txt
[valhalla_route_calculation_houston_regression_test] 3228 valhalla_log2.txt
[valhalla_route_calculation_houston_regression_test] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[valhalla_route_calculation_houston_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[valhalla_route_calculation_houston_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_houston_regression_test] dca15c31e2966f779fb88d52b0c9722bb0c56ffe682442469865527cc8ffc41c
[valhalla_route_calculation_houston_regression_test] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[valhalla_route_calculation_houston_regression_test] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_houston_regression_test] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_houston_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary houston_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_houston_regression_test] Namespace(bias=1, boundary='houston_regression_test', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_houston_regression_test] Retrieving valhalla routes from pickle
[valhalla_route_calculation_houston_regression_test] Writing 97 valhalla routes to pickle
[valhalla_route_calculation_houston_regression_test] Adding 3228 lines of logs
[valhalla_route_calculation_houston_regression_test] Out of 97 routes, found 92 logs
[valhalla_route_calculation_houston_regression_test] Exporting 97 valhalla routes to insight database
[valhalla_route_calculation_houston_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary houston_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_houston_regression_test] Valhalla Diagnostic) Boundary: houston_regression_test | Requested: 97 | Successful: 92 | Failed: 5 | BiasIterFwd: 160.9 | BiasIterBwd: 223.4 | UnbiasIterFwd: 131.63 | UnbiasIterBwd: 230.13
[valhalla_route_calculation_houston_regression_test] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[valhalla_route_calculation_taipei_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[valhalla_route_calculation_taipei_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + tail -n +134 valhalla_log.txt
[valhalla_route_calculation_taipei_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_taipei_boundary] + echo 3733 valhalla_log2.txt
[valhalla_route_calculation_taipei_boundary] 3733 valhalla_log2.txt
[valhalla_route_calculation_taipei_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[valhalla_route_calculation_taipei_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[valhalla_route_calculation_taipei_boundary] + docker run --network jenkins_ValhallaPipeline_1004_TW --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_taipei_boundary] 4f743754edfd0f066c12c316d9bb3862fa2dd6c40474604689971ff205b14872
[valhalla_route_calculation_taipei_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[valhalla_route_calculation_taipei_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_taipei_regression_test] Out of 100 routes, found 99 trips
[valhalla_route_calculation_taipei_regression_test] Writing 99 valhalla routes to pickle
[valhalla_route_calculation_taipei_regression_test] Exporting 99 valhalla routes to insight database
[valhalla_route_calculation_taipei_regression_test] Namespace(bias=0, boundary='taipei_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[valhalla_route_calculation_taipei_regression_test] Retrieving baseline routes
[valhalla_route_calculation_taipei_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_taipei_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_taipei_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_taipei_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taipei_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_taipei_boundary] Namespace(bias=1, boundary='taipei_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[valhalla_route_calculation_taipei_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_taipei_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_taipei_boundary] Adding 3733 lines of logs
[valhalla_route_calculation_taipei_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_taipei_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_taipei_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary taipei_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_houston_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[valhalla_route_calculation_houston_regression_test] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[valhalla_route_calculation_houston_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_houston_regression_test
[Pipeline] [valhalla_route_calculation_houston_regression_test] stash
[valhalla_route_calculation_taipei_boundary] Valhalla Diagnostic) Boundary: taipei_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 802.84 | BiasIterBwd: 745.62 | UnbiasIterFwd: 5370.04 | UnbiasIterBwd: 4571.57
[valhalla_route_calculation_taipei_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[valhalla_route_calculation_houston_regression_test] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_houston_regression_test] sh
[valhalla_route_calculation_houston_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_houston_regression_test] + scripts/cleanup.sh
[valhalla_route_calculation_houston_regression_test] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_houston_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_houston_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_houston_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_houston_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_houston_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_houston_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_houston_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_houston_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_houston_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_houston_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_houston_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_houston_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_houston_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_houston_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_houston_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_houston_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_houston_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_houston_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_houston_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_houston_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_houston_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + cleanup_network
[valhalla_route_calculation_houston_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_houston_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_houston_regression_test] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_houston_regression_test] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_houston_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_houston_regression_test] ++ tr -s ' '
[valhalla_route_calculation_houston_regression_test] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_houston_regression_test] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_houston_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_houston_regression_test] + cleanup_routing_engine
[valhalla_route_calculation_houston_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_houston_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_houston_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + gzip
[valhalla_route_calculation_houston_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_taipei_regression_test] Out of 100 routes, found 99 trips
[valhalla_route_calculation_taipei_regression_test] Exporting 99 valhalla routes to insight database
[valhalla_route_calculation_taipei_regression_test] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_taipei_regression_test] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[valhalla_route_calculation_taipei_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[valhalla_route_calculation_taipei_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[valhalla_route_calculation_taipei_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_boundary
[Pipeline] [valhalla_route_calculation_taipei_boundary] stash
[valhalla_route_calculation_houston_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_houston_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_houston_regression_test] }
[Pipeline] [valhalla_route_calculation_houston_regression_test] // withEnv
[Pipeline] [valhalla_route_calculation_houston_regression_test] }
[valhalla_route_calculation_bayarea_regression_test] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_houston_regression_test] // node
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] {
[Pipeline] [valhalla_route_calculation_houston_regression_test] }
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] withEnv
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] {
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] checkout
[valhalla_route_calculation_taipei_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_taipei_boundary] sh
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_bayarea_regression_test] Fetching changes from the remote Git repository
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_bayarea_regression_test] Pruning obsolete local branches
[valhalla_route_calculation_bayarea_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_bayarea_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_bayarea_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_taipei_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_bayarea_regression_test] Cleaning workspace
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_bayarea_regression_test] Resetting working tree
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_bayarea_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] unstash
[valhalla_route_calculation_taipei_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_taipei_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_taipei_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_taipei_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_taipei_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taipei_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taipei_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taipei_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taipei_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_taipei_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_taipei_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_taipei_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taipei_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taipei_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taipei_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taipei_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taipei_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taipei_boundary] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taipei_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taipei_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_taipei_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + cleanup_network
[valhalla_route_calculation_taipei_boundary] + [[ jenkins_ValhallaPipeline_1004_TW != \h\o\s\t ]]
[valhalla_route_calculation_taipei_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_taipei_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_taipei_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_taipei_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_taipei_boundary] ++ tr -s ' '
[valhalla_route_calculation_taipei_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_taipei_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW from jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW from jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_TW ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_TW'
[valhalla_route_calculation_taipei_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + docker network rm jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_boundary] + cleanup_routing_engine
[valhalla_route_calculation_taipei_boundary] + [[ -n '' ]]
[valhalla_route_calculation_taipei_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[valhalla_route_calculation_taipei_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + gzip
[valhalla_route_calculation_taipei_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] sh
[valhalla_route_calculation_bayarea_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_taipei_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + tail -n +102 valhalla_log.txt
[valhalla_route_calculation_taipei_regression_test] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_taipei_regression_test] + echo 3195 valhalla_log2.txt
[valhalla_route_calculation_taipei_regression_test] 3195 valhalla_log2.txt
[valhalla_route_calculation_taipei_regression_test] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_TW --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_taipei_regression_test] 316b8eaf843a1c57b7e1cdd86e8d1337adf9a6738e86bd57fc85c41a2656e014
[valhalla_route_calculation_taipei_regression_test] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_bayarea_regression_test] + scripts/setup.sh
[valhalla_route_calculation_bayarea_regression_test] ++ realpath scripts/setup.sh
[valhalla_route_calculation_bayarea_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_bayarea_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_bayarea_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_bayarea_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_bayarea_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_bayarea_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_bayarea_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_bayarea_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_bayarea_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_bayarea_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_bayarea_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bayarea_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_bayarea_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_bayarea_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_bayarea_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_bayarea_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_bayarea_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_bayarea_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bayarea_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bayarea_regression_test] + [[ -n true ]]
[valhalla_route_calculation_bayarea_regression_test] + sync_aws_mapdata
[valhalla_route_calculation_bayarea_regression_test] + which aws
[valhalla_route_calculation_bayarea_regression_test] /usr/bin/aws
[valhalla_route_calculation_bayarea_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_bayarea_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[valhalla_route_calculation_taipei_regression_test] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_taipei_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taipei_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_taipei_regression_test] Namespace(bias=1, boundary='taipei_regression_test', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[valhalla_route_calculation_taipei_regression_test] Retrieving valhalla routes from pickle
[valhalla_route_calculation_taipei_regression_test] Writing 99 valhalla routes to pickle
[valhalla_route_calculation_taipei_regression_test] Adding 3195 lines of logs
[valhalla_route_calculation_taipei_regression_test] Out of 99 routes, found 96 logs
[valhalla_route_calculation_taipei_regression_test] Exporting 99 valhalla routes to insight database
[valhalla_route_calculation_taipei_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary taipei_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_taipei_regression_test] Valhalla Diagnostic) Boundary: taipei_regression_test | Requested: 99 | Successful: 96 | Failed: 3 | BiasIterFwd: 130.25 | BiasIterBwd: 133.89 | UnbiasIterFwd: 154.96 | UnbiasIterBwd: 268.72
[valhalla_route_calculation_taipei_regression_test] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[valhalla_route_calculation_taipei_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[Pipeline] [valhalla_route_calculation_taipei_boundary] }
[Pipeline] [valhalla_route_calculation_taipei_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_taipei_boundary] }
[valhalla_route_calculation_la_regression_test] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_taipei_boundary] // node
[Pipeline] [valhalla_route_calculation_la_regression_test] {
[Pipeline] [valhalla_route_calculation_taipei_boundary] }
[Pipeline] [valhalla_route_calculation_la_regression_test] withEnv
[Pipeline] [valhalla_route_calculation_la_regression_test] {
[Pipeline] [valhalla_route_calculation_la_regression_test] checkout
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_la_regression_test] Fetching changes from the remote Git repository
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_la_regression_test] Pruning obsolete local branches
[valhalla_route_calculation_la_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_la_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_la_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_la_regression_test] Cleaning workspace
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_la_regression_test] Resetting working tree
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_la_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_la_regression_test] unstash
[Pipeline] [valhalla_route_calculation_la_regression_test] sh
[valhalla_route_calculation_la_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_la_regression_test] + scripts/setup.sh
[valhalla_route_calculation_la_regression_test] ++ realpath scripts/setup.sh
[valhalla_route_calculation_la_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_la_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_la_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_la_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_la_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_la_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_la_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_la_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_la_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_la_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_la_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_la_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_la_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_la_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_la_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_la_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_la_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_regression_test] + [[ -n true ]]
[valhalla_route_calculation_la_regression_test] + sync_aws_mapdata
[valhalla_route_calculation_la_regression_test] + which aws
[valhalla_route_calculation_la_regression_test] /usr/bin/aws
[valhalla_route_calculation_la_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_la_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[valhalla_route_calculation_taipei_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[valhalla_route_calculation_taipei_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taipei_regression_test
[Pipeline] [valhalla_route_calculation_taipei_regression_test] stash
[valhalla_route_calculation_taipei_regression_test] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_taipei_regression_test] sh
[valhalla_route_calculation_taipei_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_taipei_regression_test] + scripts/cleanup.sh
[valhalla_route_calculation_taipei_regression_test] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_taipei_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_taipei_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_taipei_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taipei_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taipei_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taipei_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taipei_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taipei_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_taipei_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_taipei_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_taipei_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taipei_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taipei_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taipei_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taipei_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taipei_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taipei_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taipei_regression_test] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taipei_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taipei_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_taipei_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + cleanup_network
[valhalla_route_calculation_taipei_regression_test] + [[ jenkins_ValhallaPipeline_1004_TW != \h\o\s\t ]]
[valhalla_route_calculation_taipei_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_taipei_regression_test] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_taipei_regression_test] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_taipei_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_taipei_regression_test] ++ tr -s ' '
[valhalla_route_calculation_taipei_regression_test] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_taipei_regression_test] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW from jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW from jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + docker network disconnect jenkins_ValhallaPipeline_1004_TW ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_TW'
[valhalla_route_calculation_taipei_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taipei_regression_test] + cleanup_routing_engine
[valhalla_route_calculation_taipei_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_taipei_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[valhalla_route_calculation_taipei_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + gzip
[valhalla_route_calculation_taipei_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_bayarea_regression_test] + create_network
[valhalla_route_calculation_bayarea_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ wc -l
[valhalla_route_calculation_bayarea_regression_test] + network_count=1
[valhalla_route_calculation_bayarea_regression_test] + test 1 -eq 2
[valhalla_route_calculation_bayarea_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_bayarea_regression_test] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] fe9446f71a30f8dac6761e2e77173a620605b307d87062e3bfdc7c5da71a4fc0
[valhalla_route_calculation_bayarea_regression_test] + launch_postgis
[valhalla_route_calculation_bayarea_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_bayarea_regression_test] + return 0
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] sh
[valhalla_route_calculation_bayarea_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_bayarea_regression_test] + scripts/dump-map-info.sh bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_bayarea_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_bayarea_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_bayarea_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_bayarea_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_bayarea_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_bayarea_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_bayarea_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_bayarea_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_bayarea_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_bayarea_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_bayarea_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bayarea_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_bayarea_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_bayarea_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_bayarea_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_bayarea_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_bayarea_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + BOUNDARY=bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + dump_map_info bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + BOUNDARY=bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_bayarea_regression_test] + mapdata_version=mapdata-bayarea_regression_test.version
[valhalla_route_calculation_bayarea_regression_test] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-bayarea_regression_test.version
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] sh
[valhalla_route_calculation_bayarea_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_bayarea_regression_test] + scripts/run-route-diagnostics-pathiter.sh bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + BOUNDARY=bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_bayarea_regression_test] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_bayarea_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_bayarea_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_bayarea_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_bayarea_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_bayarea_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_bayarea_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_bayarea_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_bayarea_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_bayarea_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_bayarea_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_bayarea_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bayarea_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_bayarea_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_bayarea_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_bayarea_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_bayarea_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_bayarea_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + launch_postgis
[valhalla_route_calculation_bayarea_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_bayarea_regression_test] + return 0
[valhalla_route_calculation_bayarea_regression_test] + launch_routing_engine nowait
[valhalla_route_calculation_bayarea_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_bayarea_regression_test] + wait_for_routing_service=nowait
[valhalla_route_calculation_bayarea_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_bayarea_regression_test] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_bayarea_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_bayarea_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_bayarea_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_bayarea_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_bayarea_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_bayarea_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_bayarea_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_bayarea_regression_test] ++ print_regional_request
[valhalla_route_calculation_bayarea_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_bayarea_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_taipei_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taipei_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[Pipeline] [valhalla_route_calculation_taipei_regression_test] }
[Pipeline] [valhalla_route_calculation_taipei_regression_test] // withEnv
[Pipeline] [valhalla_route_calculation_taipei_regression_test] }
[valhalla_route_calculation_seattle_regression_test] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_taipei_regression_test] // node
[Pipeline] [valhalla_route_calculation_seattle_regression_test] {
[Pipeline] [valhalla_route_calculation_taipei_regression_test] }
[Pipeline] [valhalla_route_calculation_seattle_regression_test] withEnv
[Pipeline] [valhalla_route_calculation_seattle_regression_test] {
[Pipeline] [valhalla_route_calculation_seattle_regression_test] checkout
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_seattle_regression_test] Fetching changes from the remote Git repository
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_seattle_regression_test] Pruning obsolete local branches
[valhalla_route_calculation_seattle_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_seattle_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_seattle_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_seattle_regression_test] Cleaning workspace
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_seattle_regression_test] Resetting working tree
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_seattle_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_seattle_regression_test] unstash
[Pipeline] [valhalla_route_calculation_seattle_regression_test] sh
[valhalla_route_calculation_seattle_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seattle_regression_test] + scripts/setup.sh
[valhalla_route_calculation_seattle_regression_test] ++ realpath scripts/setup.sh
[valhalla_route_calculation_seattle_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_seattle_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_seattle_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seattle_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seattle_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seattle_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_seattle_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_seattle_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_seattle_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_seattle_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seattle_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seattle_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seattle_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seattle_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seattle_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_seattle_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_seattle_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_regression_test] + [[ -n true ]]
[valhalla_route_calculation_seattle_regression_test] + sync_aws_mapdata
[valhalla_route_calculation_seattle_regression_test] + which aws
[valhalla_route_calculation_seattle_regression_test] /usr/bin/aws
[valhalla_route_calculation_seattle_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_seattle_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[valhalla_route_calculation_bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + grep '"error":'
[valhalla_route_calculation_bayarea_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_bayarea_regression_test] 8aa502d77cbc        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 9 seconds        0.0.0.0:34680->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + kill_valhalla
[valhalla_route_calculation_bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_bayarea_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_bayarea_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_bayarea_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_bayarea_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_la_regression_test] + create_network
[valhalla_route_calculation_la_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] ++ wc -l
[valhalla_route_calculation_la_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + network_count=1
[valhalla_route_calculation_la_regression_test] + test 1 -eq 2
[valhalla_route_calculation_la_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_la_regression_test] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] ef9e2d1bc64faefcb92ee7f42313e488f917d8de5585f2106e5fa20c4f0b972f
[valhalla_route_calculation_la_regression_test] + launch_postgis
[valhalla_route_calculation_la_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_la_regression_test] + return 0
[valhalla_route_calculation_bayarea_regression_test] + launch_routing_engine
[valhalla_route_calculation_bayarea_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_bayarea_regression_test] + wait_for_routing_service=wait
[valhalla_route_calculation_bayarea_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ grep Status
[valhalla_route_calculation_bayarea_regression_test] ++ awk -F: '{print $2}'
[valhalla_route_calculation_bayarea_regression_test] ++ tr -d ' ",'
[valhalla_route_calculation_bayarea_regression_test] + container_status=running
[valhalla_route_calculation_bayarea_regression_test] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_bayarea_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[Pipeline] [valhalla_route_calculation_la_regression_test] sh
[valhalla_route_calculation_bayarea_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_bayarea_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_bayarea_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + output='{<nil> [] [8aa502d77cbc] fe9446f71a30f8dac6761e2e77173a620605b307d87062e3bfdc7c5da71a4fc0 75d11fe09ed55bf06fb602cdf12643e58e586c29fac732b2e811faf453c02ea8 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[valhalla_route_calculation_bayarea_regression_test] + [[ {<nil> [] [8aa502d77cbc] fe9446f71a30f8dac6761e2e77173a620605b307d87062e3bfdc7c5da71a4fc0 75d11fe09ed55bf06fb602cdf12643e58e586c29fac732b2e811faf453c02ea8 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_bayarea_regression_test] + return 0
[valhalla_route_calculation_bayarea_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_bayarea_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_bayarea_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_bayarea_regression_test] ++ print_regional_request
[valhalla_route_calculation_bayarea_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_bayarea_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_la_regression_test] + scripts/dump-map-info.sh la_regression_test
[valhalla_route_calculation_la_regression_test] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_la_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_la_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_la_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_la_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_la_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_la_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_la_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_la_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_la_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_la_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_la_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_la_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_la_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_la_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_la_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_la_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + BOUNDARY=la_regression_test
[valhalla_route_calculation_la_regression_test] + dump_map_info la_regression_test
[valhalla_route_calculation_la_regression_test] + BOUNDARY=la_regression_test
[valhalla_route_calculation_la_regression_test] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_la_regression_test] + mapdata_version=mapdata-la_regression_test.version
[valhalla_route_calculation_la_regression_test] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-la_regression_test.version
[Pipeline] [valhalla_route_calculation_la_regression_test] sh
[valhalla_route_calculation_la_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_la_regression_test] + scripts/run-route-diagnostics-pathiter.sh la_regression_test
[valhalla_route_calculation_la_regression_test] + BOUNDARY=la_regression_test
[valhalla_route_calculation_la_regression_test] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_la_regression_test] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_la_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_la_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_la_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_la_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_la_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_la_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_la_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_la_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_la_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_la_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_la_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_la_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_la_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_la_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_la_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_la_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + launch_postgis
[valhalla_route_calculation_la_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_la_regression_test] + return 0
[valhalla_route_calculation_la_regression_test] + launch_routing_engine nowait
[valhalla_route_calculation_la_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_la_regression_test] + wait_for_routing_service=nowait
[valhalla_route_calculation_la_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_la_regression_test] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_la_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_la_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_la_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_la_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_la_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_la_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_la_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_la_regression_test] ++ print_regional_request
[valhalla_route_calculation_la_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_la_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] + grep '"error":'
[valhalla_route_calculation_la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + grep '"error":'
[valhalla_route_calculation_bayarea_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_bayarea_regression_test] 8aa502d77cbc        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   22 seconds ago      Up 20 seconds       0.0.0.0:34680->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] + num_baseline=100
[valhalla_route_calculation_bayarea_regression_test] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ wc -l
[valhalla_route_calculation_bayarea_regression_test] + log_lines=144
[valhalla_route_calculation_bayarea_regression_test] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_bayarea_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_bayarea_regression_test] 387c9909144b9f2a51e19f07882e1a6a72f290ff010dd80741b2ab330c279142
[valhalla_route_calculation_bayarea_regression_test] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary bayarea_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary bayarea_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_bayarea_regression_test] Namespace(bias=1, boundary='bayarea_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_bayarea_regression_test] Retrieving baseline routes
[valhalla_route_calculation_bayarea_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_bayarea_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_taiwan_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_taiwan_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_taiwan_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_taiwan_boundary] Namespace(bias=0, boundary='taiwan_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[valhalla_route_calculation_taiwan_boundary] Retrieving baseline routes
[valhalla_route_calculation_taiwan_boundary] Retrieving valhalla routes
[valhalla_route_calculation_taiwan_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_seattle_regression_test] + create_network
[valhalla_route_calculation_seattle_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ wc -l
[valhalla_route_calculation_seattle_regression_test] + network_count=1
[valhalla_route_calculation_seattle_regression_test] + test 1 -eq 2
[valhalla_route_calculation_seattle_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_seattle_regression_test] Creating network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + docker network create jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] 62150f9e87490ea39d3a099a483eebfbf1ea8da69136c132ec416fcc9cc965e1
[valhalla_route_calculation_seattle_regression_test] + launch_postgis
[valhalla_route_calculation_seattle_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_seattle_regression_test] + return 0
[valhalla_route_calculation_la_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_la_regression_test] bce8e1a71d2f        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 10 seconds       0.0.0.0:34573->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + kill_valhalla
[valhalla_route_calculation_la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_la_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_la_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_la_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_la_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[Pipeline] [valhalla_route_calculation_seattle_regression_test] sh
[valhalla_route_calculation_seattle_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seattle_regression_test] + scripts/dump-map-info.sh seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_seattle_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_seattle_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_seattle_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seattle_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seattle_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seattle_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_seattle_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_seattle_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_seattle_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_seattle_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seattle_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seattle_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seattle_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seattle_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seattle_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_seattle_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + BOUNDARY=seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + dump_map_info seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + BOUNDARY=seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[valhalla_route_calculation_seattle_regression_test] + mapdata_version=mapdata-seattle_regression_test.version
[valhalla_route_calculation_seattle_regression_test] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-seattle_regression_test.version
[Pipeline] [valhalla_route_calculation_seattle_regression_test] sh
[valhalla_route_calculation_la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_seattle_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seattle_regression_test] + scripts/run-route-diagnostics-pathiter.sh seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + BOUNDARY=seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_seattle_regression_test] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_seattle_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_seattle_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_seattle_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seattle_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seattle_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seattle_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_seattle_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_seattle_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_seattle_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_seattle_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seattle_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seattle_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seattle_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seattle_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seattle_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_seattle_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + launch_postgis
[valhalla_route_calculation_seattle_regression_test] + [[ -n yes ]]
[valhalla_route_calculation_seattle_regression_test] + return 0
[valhalla_route_calculation_seattle_regression_test] + launch_routing_engine nowait
[valhalla_route_calculation_seattle_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_seattle_regression_test] + wait_for_routing_service=nowait
[valhalla_route_calculation_seattle_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[valhalla_route_calculation_seattle_regression_test] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[valhalla_route_calculation_seattle_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_seattle_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_seattle_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_seattle_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_seattle_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_seattle_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_seattle_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_seattle_regression_test] ++ print_regional_request
[valhalla_route_calculation_seattle_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_seattle_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] Out of 14 routes, found 14 trips
[valhalla_route_calculation_bayarea_regression_test] Writing 14 valhalla routes to pickle
[valhalla_route_calculation_bayarea_regression_test] Exporting 14 valhalla routes to insight database
[valhalla_route_calculation_bayarea_regression_test] Namespace(bias=0, boundary='bayarea_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_bayarea_regression_test] Retrieving baseline routes
[valhalla_route_calculation_bayarea_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_bayarea_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_la_regression_test] + launch_routing_engine
[valhalla_route_calculation_la_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_la_regression_test] + wait_for_routing_service=wait
[valhalla_route_calculation_la_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] ++ awk -F: '{print $2}'
[valhalla_route_calculation_la_regression_test] ++ tr -d ' ",'
[valhalla_route_calculation_la_regression_test] ++ grep Status
[valhalla_route_calculation_la_regression_test] + container_status=running
[valhalla_route_calculation_la_regression_test] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_la_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_la_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_la_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_la_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + output='{<nil> [] [bce8e1a71d2f] ef9e2d1bc64faefcb92ee7f42313e488f917d8de5585f2106e5fa20c4f0b972f c3ec81828278423a3ad73841a82f194e068283c59d461ae6c9c92ff3f09c5d83 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[valhalla_route_calculation_la_regression_test] + [[ {<nil> [] [bce8e1a71d2f] ef9e2d1bc64faefcb92ee7f42313e488f917d8de5585f2106e5fa20c4f0b972f c3ec81828278423a3ad73841a82f194e068283c59d461ae6c9c92ff3f09c5d83 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_la_regression_test] + return 0
[valhalla_route_calculation_la_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_la_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_la_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_la_regression_test] ++ print_regional_request
[valhalla_route_calculation_la_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_la_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] Out of 14 routes, found 14 trips
[valhalla_route_calculation_bayarea_regression_test] Exporting 14 valhalla routes to insight database
[valhalla_route_calculation_bayarea_regression_test] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_bayarea_regression_test] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[valhalla_route_calculation_seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + grep '"error":'
[valhalla_route_calculation_seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_seattle_regression_test] 459354c34fba        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   9 seconds ago       Up 8 seconds        0.0.0.0:35243->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + kill_valhalla
[valhalla_route_calculation_seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[valhalla_route_calculation_seattle_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_seattle_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_seattle_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_seattle_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[valhalla_route_calculation_seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_la_regression_test] + grep '"error":'
[valhalla_route_calculation_la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + launch_routing_engine
[valhalla_route_calculation_seattle_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_seattle_regression_test] + wait_for_routing_service=wait
[valhalla_route_calculation_seattle_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ grep Status
[valhalla_route_calculation_seattle_regression_test] ++ tr -d ' ",'
[valhalla_route_calculation_seattle_regression_test] ++ awk -F: '{print $2}'
[valhalla_route_calculation_seattle_regression_test] + container_status=running
[valhalla_route_calculation_seattle_regression_test] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_seattle_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[valhalla_route_calculation_seattle_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_seattle_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[valhalla_route_calculation_seattle_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + output='{<nil> [] [459354c34fba] 62150f9e87490ea39d3a099a483eebfbf1ea8da69136c132ec416fcc9cc965e1 51f174e5d74b06b6090aa6300955031c8bdcf8eb4437218bdac3c97b86618663 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[valhalla_route_calculation_seattle_regression_test] + [[ {<nil> [] [459354c34fba] 62150f9e87490ea39d3a099a483eebfbf1ea8da69136c132ec416fcc9cc965e1 51f174e5d74b06b6090aa6300955031c8bdcf8eb4437218bdac3c97b86618663 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_seattle_regression_test] + return 0
[valhalla_route_calculation_seattle_regression_test] + local_host=localhost:8002
[valhalla_route_calculation_seattle_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[valhalla_route_calculation_seattle_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[valhalla_route_calculation_seattle_regression_test] ++ print_regional_request
[valhalla_route_calculation_seattle_regression_test] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_seattle_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_la_regression_test] bce8e1a71d2f        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   25 seconds ago      Up 24 seconds       0.0.0.0:34573->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] + num_baseline=100
[valhalla_route_calculation_la_regression_test] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] ++ wc -l
[valhalla_route_calculation_la_regression_test] + log_lines=144
[valhalla_route_calculation_la_regression_test] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_la_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_la_regression_test] 136950b0b7ea0d0b23a36dd0500c8b7ea70cfead34c44272fb3e1c92dbd51f20
[valhalla_route_calculation_la_regression_test] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[valhalla_route_calculation_la_regression_test] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary la_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary la_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_la_regression_test] Namespace(bias=1, boundary='la_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_la_regression_test] Retrieving baseline routes
[valhalla_route_calculation_la_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_la_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_bayarea_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_bayarea_regression_test] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_bayarea_regression_test] + echo 460 valhalla_log2.txt
[valhalla_route_calculation_bayarea_regression_test] 460 valhalla_log2.txt
[valhalla_route_calculation_bayarea_regression_test] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_bayarea_regression_test] f7a9714aeeb55c1e3849e49f3ce64837f17200f236bb4430dcb5fce2ea86d044
[valhalla_route_calculation_bayarea_regression_test] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_bayarea_regression_test] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_bayarea_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary bayarea_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_bayarea_regression_test] Namespace(bias=1, boundary='bayarea_regression_test', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_bayarea_regression_test] Retrieving valhalla routes from pickle
[valhalla_route_calculation_bayarea_regression_test] Writing 14 valhalla routes to pickle
[valhalla_route_calculation_bayarea_regression_test] Adding 460 lines of logs
[valhalla_route_calculation_bayarea_regression_test] Out of 14 routes, found 13 logs
[valhalla_route_calculation_bayarea_regression_test] Exporting 14 valhalla routes to insight database
[valhalla_route_calculation_bayarea_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary bayarea_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_bayarea_regression_test] Valhalla Diagnostic) Boundary: bayarea_regression_test | Requested: 14 | Successful: 13 | Failed: 1 | BiasIterFwd: 53.15 | BiasIterBwd: 65.85 | UnbiasIterFwd: 52.69 | UnbiasIterBwd: 87.92
[valhalla_route_calculation_bayarea_regression_test] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[valhalla_route_calculation_seattle_regression_test] + grep '"error":'
[valhalla_route_calculation_seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_seattle_regression_test] 459354c34fba        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   19 seconds ago      Up 19 seconds       0.0.0.0:35243->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] + num_baseline=100
[valhalla_route_calculation_seattle_regression_test] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ wc -l
[valhalla_route_calculation_seattle_regression_test] + log_lines=144
[valhalla_route_calculation_seattle_regression_test] + let 'log_lines = 144 - 1'
[valhalla_route_calculation_seattle_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_seattle_regression_test] c567009275bc976dbdc1f91b48d2353738fe36ae3d6bdc252b03e68b090ea831
[valhalla_route_calculation_seattle_regression_test] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary seattle_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary seattle_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_seattle_regression_test] Namespace(bias=1, boundary='seattle_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_seattle_regression_test] Retrieving baseline routes
[valhalla_route_calculation_seattle_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_seattle_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_seattle_regression_test] Out of 15 routes, found 15 trips
[valhalla_route_calculation_seattle_regression_test] Writing 15 valhalla routes to pickle
[valhalla_route_calculation_seattle_regression_test] Exporting 15 valhalla routes to insight database
[valhalla_route_calculation_seattle_regression_test] Namespace(bias=0, boundary='seattle_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_seattle_regression_test] Retrieving baseline routes
[valhalla_route_calculation_seattle_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_seattle_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_seattle_regression_test] Out of 15 routes, found 15 trips
[valhalla_route_calculation_seattle_regression_test] Exporting 15 valhalla routes to insight database
[valhalla_route_calculation_seattle_regression_test] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_seattle_regression_test] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[valhalla_route_calculation_bayarea_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[valhalla_route_calculation_bayarea_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_bayarea_regression_test
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] stash
[valhalla_route_calculation_bayarea_regression_test] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] sh
[valhalla_route_calculation_bayarea_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_bayarea_regression_test] + scripts/cleanup.sh
[valhalla_route_calculation_bayarea_regression_test] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_bayarea_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_bayarea_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_bayarea_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_bayarea_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_bayarea_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_bayarea_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_bayarea_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_bayarea_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_bayarea_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_bayarea_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_bayarea_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_bayarea_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_bayarea_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_bayarea_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_bayarea_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_bayarea_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_bayarea_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_bayarea_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_bayarea_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_bayarea_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_bayarea_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + cleanup_network
[valhalla_route_calculation_bayarea_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_bayarea_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_bayarea_regression_test] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_bayarea_regression_test] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_bayarea_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_bayarea_regression_test] ++ tr -s ' '
[valhalla_route_calculation_bayarea_regression_test] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_bayarea_regression_test] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_bayarea_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_bayarea_regression_test] + cleanup_routing_engine
[valhalla_route_calculation_bayarea_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_bayarea_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_bayarea_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + gzip
[valhalla_route_calculation_bayarea_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] Out of 30 routes, found 30 trips
[valhalla_route_calculation_la_regression_test] Writing 30 valhalla routes to pickle
[valhalla_route_calculation_la_regression_test] Exporting 30 valhalla routes to insight database
[valhalla_route_calculation_la_regression_test] Namespace(bias=0, boundary='la_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_la_regression_test] Retrieving baseline routes
[valhalla_route_calculation_la_regression_test] Retrieving valhalla routes
[valhalla_route_calculation_la_regression_test] Valhalla request threadpool size: 1
[valhalla_route_calculation_la_regression_test] Out of 30 routes, found 30 trips
[valhalla_route_calculation_la_regression_test] Exporting 30 valhalla routes to insight database
[valhalla_route_calculation_la_regression_test] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_la_regression_test] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[valhalla_route_calculation_seattle_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_seattle_regression_test] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_seattle_regression_test] + echo 510 valhalla_log2.txt
[valhalla_route_calculation_seattle_regression_test] 510 valhalla_log2.txt
[valhalla_route_calculation_seattle_regression_test] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_seattle_regression_test] 54a2ae5b47aca436745985f1513aec047f1c048f8db16c3bcbcaa8cf6559ed46
[valhalla_route_calculation_seattle_regression_test] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_seattle_regression_test] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_seattle_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary seattle_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_seattle_regression_test] Namespace(bias=1, boundary='seattle_regression_test', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_seattle_regression_test] Retrieving valhalla routes from pickle
[valhalla_route_calculation_seattle_regression_test] Writing 15 valhalla routes to pickle
[valhalla_route_calculation_seattle_regression_test] Adding 510 lines of logs
[valhalla_route_calculation_seattle_regression_test] Out of 15 routes, found 15 logs
[valhalla_route_calculation_seattle_regression_test] Exporting 15 valhalla routes to insight database
[valhalla_route_calculation_seattle_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary seattle_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_seattle_regression_test] Valhalla Diagnostic) Boundary: seattle_regression_test | Requested: 15 | Successful: 15 | Failed: 0 | BiasIterFwd: 135.13 | BiasIterBwd: 123.4 | UnbiasIterFwd: 86.47 | UnbiasIterBwd: 145.4
[valhalla_route_calculation_seattle_regression_test] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[valhalla_route_calculation_bayarea_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_bayarea_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] }
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] // withEnv
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] }
[valhalla_route_calculation_uae_boundary] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] // node
[Pipeline] [valhalla_route_calculation_uae_boundary] {
[Pipeline] [valhalla_route_calculation_bayarea_regression_test] }
[Pipeline] [valhalla_route_calculation_uae_boundary] withEnv
[Pipeline] [valhalla_route_calculation_uae_boundary] {
[Pipeline] [valhalla_route_calculation_uae_boundary] checkout
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_uae_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_uae_boundary] Pruning obsolete local branches
[valhalla_route_calculation_uae_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_uae_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_uae_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_uae_boundary] Cleaning workspace
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_uae_boundary] Resetting working tree
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_uae_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_uae_boundary] unstash
[Pipeline] [valhalla_route_calculation_uae_boundary] sh
[valhalla_route_calculation_uae_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_uae_boundary] + scripts/setup.sh
[valhalla_route_calculation_uae_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_uae_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_uae_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_uae_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_uae_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_uae_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_uae_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_uae_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_uae_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_uae_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_uae_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_uae_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_uae_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_uae_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_uae_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_uae_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_uae_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_VERSION=ME-170803-183
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_REGION=ME
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[valhalla_route_calculation_uae_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_uae_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_uae_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_uae_boundary] + [[ -n true ]]
[valhalla_route_calculation_uae_boundary] + sync_aws_mapdata
[valhalla_route_calculation_uae_boundary] + which aws
[valhalla_route_calculation_uae_boundary] /usr/bin/aws
[valhalla_route_calculation_uae_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_uae_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/ME-170803-183/ /jenkins/autopilot-maps/ME-170803-183
[valhalla_route_calculation_uae_boundary] + create_network
[valhalla_route_calculation_uae_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + network=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] ++ wc -l
[valhalla_route_calculation_uae_boundary] + network_count=1
[valhalla_route_calculation_uae_boundary] + test 1 -eq 2
[valhalla_route_calculation_uae_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_ME'
[valhalla_route_calculation_uae_boundary] Creating network jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + docker network create jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] ab25efa30c400a2796cc4ee4adf5064819612f969b5a7db25020056939beb46b
[valhalla_route_calculation_uae_boundary] + launch_postgis
[valhalla_route_calculation_uae_boundary] + [[ -n yes ]]
[valhalla_route_calculation_uae_boundary] + return 0
[Pipeline] [valhalla_route_calculation_uae_boundary] sh
[valhalla_route_calculation_uae_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_uae_boundary] + scripts/dump-map-info.sh uae_boundary
[valhalla_route_calculation_uae_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_uae_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_uae_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_uae_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_uae_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_uae_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_uae_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_uae_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_uae_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_uae_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_uae_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_uae_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_uae_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_uae_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_uae_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_uae_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_uae_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_VERSION=ME-170803-183
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_REGION=ME
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[valhalla_route_calculation_uae_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + BOUNDARY=uae_boundary
[valhalla_route_calculation_uae_boundary] + dump_map_info uae_boundary
[valhalla_route_calculation_uae_boundary] + BOUNDARY=uae_boundary
[valhalla_route_calculation_uae_boundary] + [[ -r /jenkins/autopilot-maps/ME-170803-183/VERSION ]]
[valhalla_route_calculation_uae_boundary] + mapdata_version=mapdata-uae_boundary.version
[valhalla_route_calculation_uae_boundary] + cp /jenkins/autopilot-maps/ME-170803-183/VERSION mapdata-uae_boundary.version
[Pipeline] [valhalla_route_calculation_uae_boundary] sh
[valhalla_route_calculation_uae_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_uae_boundary] + scripts/run-route-diagnostics-pathiter.sh uae_boundary
[valhalla_route_calculation_uae_boundary] + BOUNDARY=uae_boundary
[valhalla_route_calculation_uae_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_uae_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_uae_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_uae_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_uae_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_uae_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_uae_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_uae_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_uae_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_uae_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_uae_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_uae_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_uae_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_uae_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_uae_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_uae_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_uae_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_uae_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_VERSION=ME-170803-183
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_REGION=ME
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[valhalla_route_calculation_uae_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + launch_postgis
[valhalla_route_calculation_uae_boundary] + [[ -n yes ]]
[valhalla_route_calculation_uae_boundary] + return 0
[valhalla_route_calculation_uae_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_uae_boundary] + [[ -n '' ]]
[valhalla_route_calculation_uae_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_uae_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P'
[valhalla_route_calculation_uae_boundary] + [[ -d /jenkins/autopilot-maps/ME-170803-183/tm/ME ]]
[valhalla_route_calculation_uae_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_uae_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_uae_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_uae_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'ln -sf /mapdata/ME-170803-183/tm/ME /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_uae_boundary] + local_host=localhost:8002
[valhalla_route_calculation_uae_boundary] + [[ jenkins_ValhallaPipeline_1004_ME == \h\o\s\t ]]
[valhalla_route_calculation_uae_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002
[valhalla_route_calculation_uae_boundary] ++ print_regional_request
[valhalla_route_calculation_uae_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_uae_boundary] ++ request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] ++ echo 'route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_la_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[valhalla_route_calculation_la_regression_test] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + tail -n +143 valhalla_log.txt
[valhalla_route_calculation_la_regression_test] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_la_regression_test] + echo 1070 valhalla_log2.txt
[valhalla_route_calculation_la_regression_test] 1070 valhalla_log2.txt
[valhalla_route_calculation_la_regression_test] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[valhalla_route_calculation_la_regression_test] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[valhalla_route_calculation_la_regression_test] + docker run --network jenkins_ValhallaPipeline_1004_NA --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_la_regression_test] c369f91e296f554aeee01de8e4e62d5e8e1303d574b6b06e5a597d38c2303153
[valhalla_route_calculation_la_regression_test] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[valhalla_route_calculation_la_regression_test] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_la_regression_test] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_la_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary la_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_seattle_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[valhalla_route_calculation_seattle_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_seattle_regression_test
[Pipeline] [valhalla_route_calculation_seattle_regression_test] stash
[valhalla_route_calculation_la_regression_test] Namespace(bias=1, boundary='la_regression_test', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[valhalla_route_calculation_la_regression_test] Retrieving valhalla routes from pickle
[valhalla_route_calculation_la_regression_test] Writing 30 valhalla routes to pickle
[valhalla_route_calculation_la_regression_test] Adding 1070 lines of logs
[valhalla_route_calculation_la_regression_test] Out of 30 routes, found 28 logs
[valhalla_route_calculation_la_regression_test] Exporting 30 valhalla routes to insight database
[valhalla_route_calculation_la_regression_test] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary la_regression_test -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_la_regression_test] Valhalla Diagnostic) Boundary: la_regression_test | Requested: 30 | Successful: 28 | Failed: 2 | BiasIterFwd: 63.86 | BiasIterBwd: 126.07 | UnbiasIterFwd: 66.18 | UnbiasIterBwd: 141.21
[valhalla_route_calculation_la_regression_test] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[valhalla_route_calculation_uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_seattle_regression_test] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_seattle_regression_test] sh
[valhalla_route_calculation_uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + grep '"error":'
[valhalla_route_calculation_seattle_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_seattle_regression_test] + scripts/cleanup.sh
[valhalla_route_calculation_seattle_regression_test] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_seattle_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_seattle_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_seattle_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_seattle_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_seattle_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_seattle_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_seattle_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_seattle_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_seattle_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_seattle_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_seattle_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_seattle_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_seattle_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_seattle_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_seattle_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_seattle_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_seattle_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_seattle_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_seattle_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_seattle_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_seattle_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + cleanup_network
[valhalla_route_calculation_seattle_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_seattle_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_seattle_regression_test] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_seattle_regression_test] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_seattle_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_seattle_regression_test] ++ tr -s ' '
[valhalla_route_calculation_seattle_regression_test] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_seattle_regression_test] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_seattle_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_seattle_regression_test] + cleanup_routing_engine
[valhalla_route_calculation_seattle_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_seattle_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_seattle_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + gzip
[valhalla_route_calculation_seattle_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_uae_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_uae_boundary] 219a333f81f7        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   4 seconds ago       Up 3 seconds        0.0.0.0:34681->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + kill_valhalla
[valhalla_route_calculation_uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME pkill -f valhalla_route_service
[valhalla_route_calculation_uae_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_uae_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_uae_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_uae_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:/navigation/valhalla-install.tgz
[valhalla_route_calculation_uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_uae_boundary] + launch_routing_engine
[valhalla_route_calculation_uae_boundary] + [[ -n '' ]]
[valhalla_route_calculation_uae_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_uae_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_uae_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_uae_boundary] ++ grep Status
[valhalla_route_calculation_uae_boundary] + container_status=running
[valhalla_route_calculation_uae_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_uae_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME pgrep -f valhalla_route_service
[valhalla_route_calculation_uae_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_uae_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_ME ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + network=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_ME}}'
[valhalla_route_calculation_uae_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_ME}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + output='{<nil> [] [219a333f81f7] ab25efa30c400a2796cc4ee4adf5064819612f969b5a7db25020056939beb46b d733f36f86318ca849d12a473a30adc5bd5c265215b3388e26437b7a1645f83f 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[valhalla_route_calculation_uae_boundary] + [[ {<nil> [] [219a333f81f7] ab25efa30c400a2796cc4ee4adf5064819612f969b5a7db25020056939beb46b d733f36f86318ca849d12a473a30adc5bd5c265215b3388e26437b7a1645f83f 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_uae_boundary] + return 0
[valhalla_route_calculation_uae_boundary] + local_host=localhost:8002
[valhalla_route_calculation_uae_boundary] + [[ jenkins_ValhallaPipeline_1004_ME == \h\o\s\t ]]
[valhalla_route_calculation_uae_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002
[valhalla_route_calculation_uae_boundary] ++ print_regional_request
[valhalla_route_calculation_uae_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_uae_boundary] ++ request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] ++ echo 'route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + grep '"error":'
[valhalla_route_calculation_uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_uae_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_uae_boundary] 219a333f81f7        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   12 seconds ago      Up 11 seconds       0.0.0.0:34681->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] + num_baseline=100
[valhalla_route_calculation_uae_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] ++ wc -l
[valhalla_route_calculation_uae_boundary] + log_lines=105
[valhalla_route_calculation_uae_boundary] + let 'log_lines = 105 - 1'
[valhalla_route_calculation_uae_boundary] + docker run --network jenkins_ValhallaPipeline_1004_ME --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_uae_boundary] c23c75caa3721f0fbb21cc6f9032fe600d99b47f319cd676c0382f990aeb3404
[valhalla_route_calculation_uae_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[valhalla_route_calculation_uae_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME -host pg.test.com -boundary uae_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME -host pg.test.com -boundary uae_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_uae_boundary] Namespace(bias=1, boundary='uae_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME', valhalla_port=8002)
[valhalla_route_calculation_uae_boundary] Retrieving baseline routes
[valhalla_route_calculation_uae_boundary] Retrieving valhalla routes
[valhalla_route_calculation_uae_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_seattle_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_seattle_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [valhalla_route_calculation_seattle_regression_test] }
[Pipeline] [valhalla_route_calculation_seattle_regression_test] // withEnv
[Pipeline] [valhalla_route_calculation_seattle_regression_test] }
[valhalla_route_calculation_jordan_boundary] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [valhalla_route_calculation_seattle_regression_test] // node
[Pipeline] [valhalla_route_calculation_jordan_boundary] {
[Pipeline] [valhalla_route_calculation_seattle_regression_test] }
[Pipeline] [valhalla_route_calculation_jordan_boundary] withEnv
[Pipeline] [valhalla_route_calculation_jordan_boundary] {
[Pipeline] [valhalla_route_calculation_jordan_boundary] checkout
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[valhalla_route_calculation_jordan_boundary] Fetching changes from the remote Git repository
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[valhalla_route_calculation_jordan_boundary] Pruning obsolete local branches
[valhalla_route_calculation_jordan_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git --version # timeout=10
[valhalla_route_calculation_jordan_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[valhalla_route_calculation_jordan_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[valhalla_route_calculation_jordan_boundary] Cleaning workspace
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[valhalla_route_calculation_jordan_boundary] Resetting working tree
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git reset --hard # timeout=10
[valhalla_route_calculation_jordan_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [valhalla_route_calculation_jordan_boundary] unstash
[valhalla_route_calculation_la_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[valhalla_route_calculation_la_regression_test] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[valhalla_route_calculation_la_regression_test] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_la_regression_test
[Pipeline] [valhalla_route_calculation_la_regression_test] stash
[Pipeline] [valhalla_route_calculation_jordan_boundary] sh
[valhalla_route_calculation_jordan_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_jordan_boundary] + scripts/setup.sh
[valhalla_route_calculation_jordan_boundary] ++ realpath scripts/setup.sh
[valhalla_route_calculation_jordan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_jordan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[valhalla_route_calculation_jordan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_jordan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_jordan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_jordan_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_jordan_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_jordan_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_jordan_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_jordan_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_jordan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_jordan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_jordan_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_jordan_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_jordan_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_jordan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_VERSION=ME-170803-183
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_REGION=ME
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[valhalla_route_calculation_jordan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[valhalla_route_calculation_jordan_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_jordan_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_jordan_boundary] + [[ -n true ]]
[valhalla_route_calculation_jordan_boundary] + sync_aws_mapdata
[valhalla_route_calculation_jordan_boundary] + which aws
[valhalla_route_calculation_jordan_boundary] /usr/bin/aws
[valhalla_route_calculation_jordan_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[valhalla_route_calculation_jordan_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/ME-170803-183/ /jenkins/autopilot-maps/ME-170803-183
[valhalla_route_calculation_la_regression_test] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_la_regression_test] sh
[valhalla_route_calculation_la_regression_test] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_la_regression_test] + scripts/cleanup.sh
[valhalla_route_calculation_la_regression_test] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_la_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_la_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_la_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_la_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_la_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_la_regression_test] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_la_regression_test] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_la_regression_test] ++ PG_USER=postgres
[valhalla_route_calculation_la_regression_test] ++ PG_PASSWD=
[valhalla_route_calculation_la_regression_test] ++ PG_DB=postgres
[valhalla_route_calculation_la_regression_test] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_la_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_la_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_la_regression_test] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_la_regression_test] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_la_regression_test] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_la_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[valhalla_route_calculation_la_regression_test] ++ MAPDATA_REGION=NA
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[valhalla_route_calculation_la_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_la_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] +++ sed -e s/-/_/g
[valhalla_route_calculation_la_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + cleanup_network
[valhalla_route_calculation_la_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[valhalla_route_calculation_la_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_la_regression_test] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_la_regression_test] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_la_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] ++ tr -s ' '
[valhalla_route_calculation_la_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_la_regression_test] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_la_regression_test] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA from jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + docker network disconnect jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[valhalla_route_calculation_la_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] jenkins_ValhallaPipeline_1004_NA
[valhalla_route_calculation_la_regression_test] + cleanup_routing_engine
[valhalla_route_calculation_la_regression_test] + [[ -n '' ]]
[valhalla_route_calculation_la_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[valhalla_route_calculation_la_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + gzip
[valhalla_route_calculation_la_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_jordan_boundary] + create_network
[valhalla_route_calculation_jordan_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + network=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] ++ wc -l
[valhalla_route_calculation_jordan_boundary] + network_count=1
[valhalla_route_calculation_jordan_boundary] + test 1 -eq 2
[valhalla_route_calculation_jordan_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_ME'
[valhalla_route_calculation_jordan_boundary] Creating network jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + docker network create jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] d596e886e097e21cd676cf225bf07c144b59b23393cad09780a0b6a263b80124
[valhalla_route_calculation_jordan_boundary] + launch_postgis
[valhalla_route_calculation_jordan_boundary] + [[ -n yes ]]
[valhalla_route_calculation_jordan_boundary] + return 0
[Pipeline] [valhalla_route_calculation_jordan_boundary] sh
[valhalla_route_calculation_jordan_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_jordan_boundary] + scripts/dump-map-info.sh jordan_boundary
[valhalla_route_calculation_jordan_boundary] ++ realpath scripts/dump-map-info.sh
[valhalla_route_calculation_jordan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_jordan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[valhalla_route_calculation_jordan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_jordan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_jordan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_jordan_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_jordan_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_jordan_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_jordan_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_jordan_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_jordan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_jordan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_jordan_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_jordan_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_jordan_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_jordan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_VERSION=ME-170803-183
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_REGION=ME
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[valhalla_route_calculation_jordan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + BOUNDARY=jordan_boundary
[valhalla_route_calculation_jordan_boundary] + dump_map_info jordan_boundary
[valhalla_route_calculation_jordan_boundary] + BOUNDARY=jordan_boundary
[valhalla_route_calculation_jordan_boundary] + [[ -r /jenkins/autopilot-maps/ME-170803-183/VERSION ]]
[valhalla_route_calculation_jordan_boundary] + mapdata_version=mapdata-jordan_boundary.version
[valhalla_route_calculation_jordan_boundary] + cp /jenkins/autopilot-maps/ME-170803-183/VERSION mapdata-jordan_boundary.version
[Pipeline] [valhalla_route_calculation_jordan_boundary] sh
[valhalla_route_calculation_jordan_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_jordan_boundary] + scripts/run-route-diagnostics-pathiter.sh jordan_boundary
[valhalla_route_calculation_jordan_boundary] + BOUNDARY=jordan_boundary
[valhalla_route_calculation_jordan_boundary] + FAILURE_THRESHOLD=20
[valhalla_route_calculation_jordan_boundary] ++ realpath scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_jordan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_jordan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-pathiter.sh
[valhalla_route_calculation_jordan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_jordan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_jordan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_jordan_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_jordan_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_jordan_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_jordan_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_jordan_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_jordan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_jordan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_jordan_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_jordan_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_jordan_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_jordan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_VERSION=ME-170803-183
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_REGION=ME
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[valhalla_route_calculation_jordan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + launch_postgis
[valhalla_route_calculation_jordan_boundary] + [[ -n yes ]]
[valhalla_route_calculation_jordan_boundary] + return 0
[valhalla_route_calculation_jordan_boundary] + launch_routing_engine nowait
[valhalla_route_calculation_jordan_boundary] + [[ -n '' ]]
[valhalla_route_calculation_jordan_boundary] + wait_for_routing_service=nowait
[valhalla_route_calculation_jordan_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P'
[valhalla_route_calculation_jordan_boundary] + [[ -d /jenkins/autopilot-maps/ME-170803-183/tm/ME ]]
[valhalla_route_calculation_jordan_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[valhalla_route_calculation_jordan_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_jordan_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[valhalla_route_calculation_jordan_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'ln -sf /mapdata/ME-170803-183/tm/ME /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_jordan_boundary] + local_host=localhost:8002
[valhalla_route_calculation_jordan_boundary] + [[ jenkins_ValhallaPipeline_1004_ME == \h\o\s\t ]]
[valhalla_route_calculation_jordan_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002
[valhalla_route_calculation_jordan_boundary] ++ print_regional_request
[valhalla_route_calculation_jordan_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_jordan_boundary] ++ request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] ++ echo 'route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + grep '"error":'
[valhalla_route_calculation_jordan_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_jordan_boundary] 73df08fca07c        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   3 seconds ago       Up 3 seconds        0.0.0.0:35244->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + kill_valhalla
[valhalla_route_calculation_jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME pkill -f valhalla_route_service
[valhalla_route_calculation_jordan_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_jordan_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[valhalla_route_calculation_jordan_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[valhalla_route_calculation_jordan_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:/navigation/valhalla-install.tgz
[valhalla_route_calculation_jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[valhalla_route_calculation_la_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_la_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[valhalla_route_calculation_jordan_boundary] + launch_routing_engine
[valhalla_route_calculation_jordan_boundary] + [[ -n '' ]]
[valhalla_route_calculation_jordan_boundary] + wait_for_routing_service=wait
[valhalla_route_calculation_jordan_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] ++ grep Status
[valhalla_route_calculation_jordan_boundary] ++ tr -d ' ",'
[valhalla_route_calculation_jordan_boundary] ++ awk -F: '{print $2}'
[valhalla_route_calculation_jordan_boundary] + container_status=running
[valhalla_route_calculation_jordan_boundary] + [[ running == \e\x\i\t\e\d ]]
[valhalla_route_calculation_jordan_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[valhalla_route_calculation_jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME pgrep -f valhalla_route_service
[valhalla_route_calculation_jordan_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[valhalla_route_calculation_jordan_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_ME ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + network=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_ME}}'
[valhalla_route_calculation_jordan_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_ME}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + output='{<nil> [] [73df08fca07c] d596e886e097e21cd676cf225bf07c144b59b23393cad09780a0b6a263b80124 41375db845cf65a13e7e89f6874f33043db7936553e1cb74e849178c8e550f51 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[valhalla_route_calculation_jordan_boundary] + [[ {<nil> [] [73df08fca07c] d596e886e097e21cd676cf225bf07c144b59b23393cad09780a0b6a263b80124 41375db845cf65a13e7e89f6874f33043db7936553e1cb74e849178c8e550f51 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[valhalla_route_calculation_jordan_boundary] + return 0
[valhalla_route_calculation_jordan_boundary] + local_host=localhost:8002
[valhalla_route_calculation_jordan_boundary] + [[ jenkins_ValhallaPipeline_1004_ME == \h\o\s\t ]]
[valhalla_route_calculation_jordan_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002
[valhalla_route_calculation_jordan_boundary] ++ print_regional_request
[valhalla_route_calculation_jordan_boundary] ++ case "$MAPDATA_REGION" in
[valhalla_route_calculation_jordan_boundary] ++ request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] ++ echo 'route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[valhalla_route_calculation_jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[Pipeline] [valhalla_route_calculation_la_regression_test] }
[Pipeline] [valhalla_route_calculation_la_regression_test] // withEnv
[Pipeline] [valhalla_route_calculation_la_regression_test] }
[Pipeline] [valhalla_route_calculation_la_regression_test] // node
[Pipeline] [valhalla_route_calculation_la_regression_test] }
[valhalla_route_calculation_jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[valhalla_route_calculation_jordan_boundary] + grep '"error":'
[valhalla_route_calculation_jordan_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[valhalla_route_calculation_jordan_boundary] 73df08fca07c        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   9 seconds ago       Up 8 seconds        0.0.0.0:35244->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] + num_baseline=100
[valhalla_route_calculation_jordan_boundary] ++ docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] ++ wc -l
[valhalla_route_calculation_jordan_boundary] + log_lines=99
[valhalla_route_calculation_jordan_boundary] + let 'log_lines = 99 - 1'
[valhalla_route_calculation_jordan_boundary] + docker run --network jenkins_ValhallaPipeline_1004_ME --name collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_jordan_boundary] 28364294b75c120604efde3fca0f310fcb837cc151073b2066e64f905d27a532
[valhalla_route_calculation_jordan_boundary] + collect_container=collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[valhalla_route_calculation_jordan_boundary] + docker exec collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME -host pg.test.com -boundary jordan_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -limit 100     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME -host pg.test.com -boundary jordan_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -bias '\''false'\'' -limit 100'
[valhalla_route_calculation_jordan_boundary] Namespace(bias=1, boundary='jordan_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME', valhalla_port=8002)
[valhalla_route_calculation_jordan_boundary] Retrieving baseline routes
[valhalla_route_calculation_jordan_boundary] Retrieving valhalla routes
[valhalla_route_calculation_jordan_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_taiwan_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_taiwan_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_taiwan_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_taiwan_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + tail -n +137 valhalla_log.txt
[valhalla_route_calculation_taiwan_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_taiwan_boundary] + echo 4115 valhalla_log2.txt
[valhalla_route_calculation_taiwan_boundary] 4115 valhalla_log2.txt
[valhalla_route_calculation_taiwan_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + docker run --network jenkins_ValhallaPipeline_1004_TW --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_taiwan_boundary] 32d83740b9780b570dad5da0ea82862f29e4feabcc2df31bd9ac179e955c9e66
[valhalla_route_calculation_taiwan_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_taiwan_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_taiwan_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taiwan_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_taiwan_boundary] Namespace(bias=1, boundary='taiwan_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[valhalla_route_calculation_taiwan_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_taiwan_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_taiwan_boundary] Adding 4115 lines of logs
[valhalla_route_calculation_taiwan_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_taiwan_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_taiwan_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary taiwan_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_taiwan_boundary] Valhalla Diagnostic) Boundary: taiwan_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 9727.13 | BiasIterBwd: 12903.14 | UnbiasIterFwd: 22253.37 | UnbiasIterBwd: 27119.98
[valhalla_route_calculation_taiwan_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[valhalla_route_calculation_taiwan_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_taiwan_boundary
[Pipeline] [valhalla_route_calculation_taiwan_boundary] stash
[valhalla_route_calculation_uae_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_uae_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_uae_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_uae_boundary] Namespace(bias=0, boundary='uae_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME', valhalla_port=8002)
[valhalla_route_calculation_uae_boundary] Retrieving baseline routes
[valhalla_route_calculation_uae_boundary] Retrieving valhalla routes
[valhalla_route_calculation_uae_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_taiwan_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_taiwan_boundary] sh
[valhalla_route_calculation_taiwan_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_taiwan_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_taiwan_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_taiwan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_taiwan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_taiwan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_taiwan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_taiwan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_taiwan_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_taiwan_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_taiwan_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_taiwan_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_taiwan_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_taiwan_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_taiwan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_taiwan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_taiwan_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_taiwan_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_taiwan_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_taiwan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_VERSION=TW-170616-136
[valhalla_route_calculation_taiwan_boundary] ++ MAPDATA_REGION=TW
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[valhalla_route_calculation_taiwan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_taiwan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_taiwan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + cleanup_network
[valhalla_route_calculation_taiwan_boundary] + [[ jenkins_ValhallaPipeline_1004_TW != \h\o\s\t ]]
[valhalla_route_calculation_taiwan_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_taiwan_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_taiwan_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_taiwan_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] ++ tr -s ' '
[valhalla_route_calculation_taiwan_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_taiwan_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_taiwan_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW from jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW from jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_TW ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_TW'
[valhalla_route_calculation_taiwan_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + docker network rm jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] jenkins_ValhallaPipeline_1004_TW
[valhalla_route_calculation_taiwan_boundary] + cleanup_routing_engine
[valhalla_route_calculation_taiwan_boundary] + [[ -n '' ]]
[valhalla_route_calculation_taiwan_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[valhalla_route_calculation_taiwan_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + gzip
[valhalla_route_calculation_taiwan_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[valhalla_route_calculation_taiwan_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[Pipeline] [valhalla_route_calculation_taiwan_boundary] }
[Pipeline] [valhalla_route_calculation_taiwan_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_taiwan_boundary] }
[Pipeline] [valhalla_route_calculation_taiwan_boundary] // node
[Pipeline] [valhalla_route_calculation_taiwan_boundary] }
[valhalla_route_calculation_uae_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_uae_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_uae_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_uae_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[valhalla_route_calculation_uae_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[valhalla_route_calculation_uae_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + tail -n +104 valhalla_log.txt
[valhalla_route_calculation_uae_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_uae_boundary] + echo 3801 valhalla_log2.txt
[valhalla_route_calculation_uae_boundary] 3801 valhalla_log2.txt
[valhalla_route_calculation_uae_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[valhalla_route_calculation_uae_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[valhalla_route_calculation_uae_boundary] + docker run --network jenkins_ValhallaPipeline_1004_ME --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_uae_boundary] 1b4cd82b0f85da1cc1152a0a43ecbe64b3cdf3392e5d28181eece136de6cf842
[valhalla_route_calculation_uae_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[valhalla_route_calculation_uae_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_uae_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_uae_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME -host pg.test.com -boundary uae_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_uae_boundary] Namespace(bias=1, boundary='uae_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME', valhalla_port=8002)
[valhalla_route_calculation_uae_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_uae_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_uae_boundary] Adding 3801 lines of logs
[valhalla_route_calculation_uae_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_uae_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_uae_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary uae_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_uae_boundary] Valhalla Diagnostic) Boundary: uae_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 3958.71 | BiasIterBwd: 2576.02 | UnbiasIterFwd: 11279.59 | UnbiasIterBwd: 11502.79
[valhalla_route_calculation_uae_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[valhalla_route_calculation_uae_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[valhalla_route_calculation_uae_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[valhalla_route_calculation_uae_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_uae_boundary
[Pipeline] [valhalla_route_calculation_uae_boundary] stash
[valhalla_route_calculation_uae_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_uae_boundary] sh
[valhalla_route_calculation_uae_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_uae_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_uae_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_uae_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_uae_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_uae_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_uae_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_uae_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_uae_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_uae_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_uae_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_uae_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_uae_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_uae_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_uae_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_uae_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_uae_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_uae_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_uae_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_uae_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_VERSION=ME-170803-183
[valhalla_route_calculation_uae_boundary] ++ MAPDATA_REGION=ME
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[valhalla_route_calculation_uae_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_uae_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_uae_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + cleanup_network
[valhalla_route_calculation_uae_boundary] + [[ jenkins_ValhallaPipeline_1004_ME != \h\o\s\t ]]
[valhalla_route_calculation_uae_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_uae_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_uae_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_uae_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_uae_boundary] ++ tr -s ' '
[valhalla_route_calculation_uae_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_uae_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME from jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME from jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_ME ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_ME'
[valhalla_route_calculation_uae_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + docker network rm jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_uae_boundary] + cleanup_routing_engine
[valhalla_route_calculation_uae_boundary] + [[ -n '' ]]
[valhalla_route_calculation_uae_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME'
[valhalla_route_calculation_uae_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + gzip
[valhalla_route_calculation_uae_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_uae_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[Pipeline] [valhalla_route_calculation_uae_boundary] }
[Pipeline] [valhalla_route_calculation_uae_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_uae_boundary] }
[Pipeline] [valhalla_route_calculation_uae_boundary] // node
[Pipeline] [valhalla_route_calculation_uae_boundary] }
[valhalla_route_calculation_jordan_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_jordan_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_jordan_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_jordan_boundary] Namespace(bias=0, boundary='jordan_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=100, log='', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME', valhalla_port=8002)
[valhalla_route_calculation_jordan_boundary] Retrieving baseline routes
[valhalla_route_calculation_jordan_boundary] Retrieving valhalla routes
[valhalla_route_calculation_jordan_boundary] Valhalla request threadpool size: 1
[valhalla_route_calculation_jordan_boundary] Out of 100 routes, found 100 trips
[valhalla_route_calculation_jordan_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_jordan_boundary] + docker cp collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary:/navigation/route_validators/route_diagnostics/route_collection/baseline.pkl ./baseline.pkl
[valhalla_route_calculation_jordan_boundary] + docker stop collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[valhalla_route_calculation_jordan_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[valhalla_route_calculation_jordan_boundary] + docker logs ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + tail -n +98 valhalla_log.txt
[valhalla_route_calculation_jordan_boundary] ++ wc -l valhalla_log2.txt
[valhalla_route_calculation_jordan_boundary] + echo 3524 valhalla_log2.txt
[valhalla_route_calculation_jordan_boundary] 3524 valhalla_log2.txt
[valhalla_route_calculation_jordan_boundary] + docker rm collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[valhalla_route_calculation_jordan_boundary] collect_route_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[valhalla_route_calculation_jordan_boundary] + docker run --network jenkins_ValhallaPipeline_1004_ME --name collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary --dns=12.34.5.67 --detach docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'tail -f /dev/null'
[valhalla_route_calculation_jordan_boundary] c6b61eae273fc668c20d963c7997fb187ceb7d1d62cc7e1941d5680c201e5829
[valhalla_route_calculation_jordan_boundary] + container=collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[valhalla_route_calculation_jordan_boundary] + docker cp valhalla_log2.txt collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_jordan_boundary] + docker cp baseline.pkl collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary:/navigation/route_validators/route_diagnostics/route_collection/
[valhalla_route_calculation_jordan_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -log valhalla_log2.txt -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME -host pg.test.com -boundary jordan_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'' -noprogress -maxworkers 1 -trips baseline.pkl -insert valhalla,valhalla_iter -limit 100'
[valhalla_route_calculation_jordan_boundary] Namespace(bias=1, boundary='jordan_boundary', database='postgres', host='pg.test.com', insert='valhalla,valhalla_iter', limit=100, log='valhalla_log2.txt', maxworkers=1, noprogress=True, password='', port=5432, schema='insight', tag='valhalla__jenkins-ValhallaPipeline-1004', trips='baseline.pkl', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME', valhalla_port=8002)
[valhalla_route_calculation_jordan_boundary] Retrieving valhalla routes from pickle
[valhalla_route_calculation_jordan_boundary] Writing 100 valhalla routes to pickle
[valhalla_route_calculation_jordan_boundary] Adding 3524 lines of logs
[valhalla_route_calculation_jordan_boundary] Out of 100 routes, found 100 logs
[valhalla_route_calculation_jordan_boundary] Exporting 100 valhalla routes to insight database
[valhalla_route_calculation_jordan_boundary] + docker exec collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary bash -c 'cd /navigation/route_validators/route_diagnostics/diagnostic     && python3 get_valhalla_diagnostics.py -host pg.test.com -boundary jordan_boundary -tag='\''valhalla__jenkins-ValhallaPipeline-1004'\'''
[valhalla_route_calculation_jordan_boundary] Valhalla Diagnostic) Boundary: jordan_boundary | Requested: 100 | Successful: 100 | Failed: 0 | BiasIterFwd: 13372.74 | BiasIterBwd: 14596.92 | UnbiasIterFwd: 7763.77 | UnbiasIterBwd: 8076.15
[valhalla_route_calculation_jordan_boundary] + docker stop collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[valhalla_route_calculation_jordan_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[valhalla_route_calculation_jordan_boundary] + docker rm collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[valhalla_route_calculation_jordan_boundary] collect_route_2_valhalla_diagnostic__jenkins-ValhallaPipeline-1004_jordan_boundary
[Pipeline] [valhalla_route_calculation_jordan_boundary] stash
[valhalla_route_calculation_jordan_boundary] Stashed 5 file(s)
[Pipeline] [valhalla_route_calculation_jordan_boundary] sh
[valhalla_route_calculation_jordan_boundary] [ValhallaPipeline] Running shell script
[valhalla_route_calculation_jordan_boundary] + scripts/cleanup.sh
[valhalla_route_calculation_jordan_boundary] ++ realpath scripts/cleanup.sh
[valhalla_route_calculation_jordan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_jordan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[valhalla_route_calculation_jordan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[valhalla_route_calculation_jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[valhalla_route_calculation_jordan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[valhalla_route_calculation_jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[valhalla_route_calculation_jordan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[valhalla_route_calculation_jordan_boundary] ++ POSTGIS=mdillon/postgis
[valhalla_route_calculation_jordan_boundary] ++ POSTGIS_LABEL=pg.test.com
[valhalla_route_calculation_jordan_boundary] ++ PG_USER=postgres
[valhalla_route_calculation_jordan_boundary] ++ PG_PASSWD=
[valhalla_route_calculation_jordan_boundary] ++ PG_DB=postgres
[valhalla_route_calculation_jordan_boundary] ++ INSIGHT_SCHEMA=insight
[valhalla_route_calculation_jordan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[valhalla_route_calculation_jordan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_BRANCH=origin/master
[valhalla_route_calculation_jordan_boundary] ++ NAME_SERVER=12.34.5.67
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_CONCURRENCY=
[valhalla_route_calculation_jordan_boundary] ++ BASELINE_FILE=./baseline.txt
[valhalla_route_calculation_jordan_boundary] ++ BUILD_FILE=./build.txt
[valhalla_route_calculation_jordan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_VERSION=ME-170803-183
[valhalla_route_calculation_jordan_boundary] ++ MAPDATA_REGION=ME
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[valhalla_route_calculation_jordan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[valhalla_route_calculation_jordan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] +++ sed -e s/-/_/g
[valhalla_route_calculation_jordan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + cleanup_network
[valhalla_route_calculation_jordan_boundary] + [[ jenkins_ValhallaPipeline_1004_ME != \h\o\s\t ]]
[valhalla_route_calculation_jordan_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[valhalla_route_calculation_jordan_boundary] + leading='s/^[[:space:]]*//'
[valhalla_route_calculation_jordan_boundary] + trailing='s/[[:space:]]*$//'
[valhalla_route_calculation_jordan_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] ++ tr -s ' '
[valhalla_route_calculation_jordan_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[valhalla_route_calculation_jordan_boundary] + for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
[valhalla_route_calculation_jordan_boundary] + echo Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME from jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] Disconnecting ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME from jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + docker network disconnect jenkins_ValhallaPipeline_1004_ME ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_ME'
[valhalla_route_calculation_jordan_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + docker network rm jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] jenkins_ValhallaPipeline_1004_ME
[valhalla_route_calculation_jordan_boundary] + cleanup_routing_engine
[valhalla_route_calculation_jordan_boundary] + [[ -n '' ]]
[valhalla_route_calculation_jordan_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME'
[valhalla_route_calculation_jordan_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + gzip
[valhalla_route_calculation_jordan_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[valhalla_route_calculation_jordan_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[Pipeline] [valhalla_route_calculation_jordan_boundary] }
[Pipeline] [valhalla_route_calculation_jordan_boundary] // withEnv
[Pipeline] [valhalla_route_calculation_jordan_boundary] }
[Pipeline] [valhalla_route_calculation_jordan_boundary] // node
[Pipeline] [valhalla_route_calculation_jordan_boundary] }
[Pipeline] // parallel
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Route Tests)
[Pipeline] parallel
[Pipeline] [atlanta_boundary] { (Branch: atlanta_boundary)
[Pipeline] [austin_boundary] { (Branch: austin_boundary)
[Pipeline] [bay_boundary] { (Branch: bay_boundary)
[Pipeline] [chicago_boundary] { (Branch: chicago_boundary)
[Pipeline] [dallas_boundary] { (Branch: dallas_boundary)
[Pipeline] [houston_boundary] { (Branch: houston_boundary)
[Pipeline] [la_boundary] { (Branch: la_boundary)
[Pipeline] [san_diego_boundary] { (Branch: san_diego_boundary)
[Pipeline] [seattle_boundary] { (Branch: seattle_boundary)
[Pipeline] [south_korea_boundary] { (Branch: south_korea_boundary)
[Pipeline] [seoul_boundary] { (Branch: seoul_boundary)
[Pipeline] [taiwan_boundary] { (Branch: taiwan_boundary)
[Pipeline] [taipei_boundary] { (Branch: taipei_boundary)
[Pipeline] [houston_regression_test] { (Branch: houston_regression_test)
[Pipeline] [taipei_regression_test] { (Branch: taipei_regression_test)
[Pipeline] [bayarea_regression_test] { (Branch: bayarea_regression_test)
[Pipeline] [la_regression_test] { (Branch: la_regression_test)
[Pipeline] [seattle_regression_test] { (Branch: seattle_regression_test)
[Pipeline] [uae_boundary] { (Branch: uae_boundary)
[Pipeline] [jordan_boundary] { (Branch: jordan_boundary)
[Pipeline] [atlanta_boundary] node
[atlanta_boundary] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [austin_boundary] node
[austin_boundary] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [bay_boundary] node
[bay_boundary] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [chicago_boundary] node
[chicago_boundary] Running on docker-tm-03 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [dallas_boundary] node
[Pipeline] [houston_boundary] node
[Pipeline] [la_boundary] node
[Pipeline] [san_diego_boundary] node
[Pipeline] [seattle_boundary] node
[Pipeline] [south_korea_boundary] node
[south_korea_boundary] Running on docker-aws-seoul-02 in /home/ec2-user/jenkins/workspace/ValhallaPipeline
[Pipeline] [seoul_boundary] node
[seoul_boundary] Running on docker-aws-seoul-01 in /home/ec2-user/jenkins/workspace/ValhallaPipeline
[Pipeline] [taiwan_boundary] node
[Pipeline] [taipei_boundary] node
[Pipeline] [houston_regression_test] node
[Pipeline] [taipei_regression_test] node
[Pipeline] [bayarea_regression_test] node
[Pipeline] [la_regression_test] node
[Pipeline] [seattle_regression_test] node
[Pipeline] [uae_boundary] node
[Pipeline] [jordan_boundary] node
[Pipeline] [atlanta_boundary] {
[Pipeline] [bay_boundary] {
[Pipeline] [austin_boundary] {
[Pipeline] [chicago_boundary] {
[Pipeline] [south_korea_boundary] {
[Pipeline] [seoul_boundary] {
[Pipeline] [atlanta_boundary] withEnv
[Pipeline] [atlanta_boundary] {
[Pipeline] [bay_boundary] withEnv
[Pipeline] [bay_boundary] {
[Pipeline] [austin_boundary] withEnv
[Pipeline] [austin_boundary] {
[Pipeline] [chicago_boundary] withEnv
[Pipeline] [chicago_boundary] {
[Pipeline] [south_korea_boundary] withEnv
[Pipeline] [south_korea_boundary] {
[Pipeline] [seoul_boundary] withEnv
[Pipeline] [seoul_boundary] {
[Pipeline] [atlanta_boundary] checkout
[atlanta_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[atlanta_boundary] Fetching changes from the remote Git repository
[atlanta_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[atlanta_boundary] Pruning obsolete local branches
[atlanta_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[atlanta_boundary]  > /usr/bin/git --version # timeout=10
[Pipeline] [bay_boundary] checkout
[bay_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[bay_boundary] Fetching changes from the remote Git repository
[bay_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[Pipeline] [austin_boundary] checkout
[bay_boundary] Pruning obsolete local branches
[austin_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[austin_boundary] Fetching changes from the remote Git repository
[austin_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[Pipeline] [chicago_boundary] checkout
[atlanta_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[austin_boundary] Pruning obsolete local branches
[Pipeline] [south_korea_boundary] timeout
[atlanta_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[austin_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[south_korea_boundary] Timeout set to expire in 1 hr 0 min
[Pipeline] [south_korea_boundary] {
[bay_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[bay_boundary]  > /usr/bin/git --version # timeout=10
[bay_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[austin_boundary]  > /usr/bin/git --version # timeout=10
[chicago_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[Pipeline] [seoul_boundary] timeout
[bay_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[seoul_boundary] Timeout set to expire in 1 hr 0 min
[Pipeline] [seoul_boundary] {
[atlanta_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[atlanta_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[atlanta_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[atlanta_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[atlanta_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[atlanta_boundary] Cleaning workspace
[atlanta_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[atlanta_boundary] Resetting working tree
[atlanta_boundary]  > /usr/bin/git reset --hard # timeout=10
[atlanta_boundary]  > /usr/bin/git clean -fdx # timeout=10
[bay_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[bay_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[bay_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[bay_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[bay_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[bay_boundary] Cleaning workspace
[bay_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[bay_boundary] Resetting working tree
[bay_boundary]  > /usr/bin/git reset --hard # timeout=10
[bay_boundary]  > /usr/bin/git clean -fdx # timeout=10
[austin_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[austin_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[austin_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[austin_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[austin_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[austin_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[austin_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[austin_boundary] Cleaning workspace
[austin_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[austin_boundary] Resetting working tree
[austin_boundary]  > /usr/bin/git reset --hard # timeout=10
[austin_boundary]  > /usr/bin/git clean -fdx # timeout=10
[chicago_boundary] Fetching changes from the remote Git repository
[chicago_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[chicago_boundary] Pruning obsolete local branches
[chicago_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[chicago_boundary]  > /usr/bin/git --version # timeout=10
[chicago_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[chicago_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[chicago_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[chicago_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[chicago_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[chicago_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[chicago_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[chicago_boundary] Cleaning workspace
[chicago_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[chicago_boundary] Resetting working tree
[chicago_boundary]  > /usr/bin/git reset --hard # timeout=10
[chicago_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [south_korea_boundary] sh
[south_korea_boundary] [ValhallaPipeline] Running shell script
[south_korea_boundary] + sudo rm -rf baseline.pkl docker env jenkinsfiles mapdata-south_korea_boundary.version route_validators ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR.log.gz scripts valhalla-install.tgz valhalla_log2.txt valhalla_log.txt valhalla-long-commit.txt .git .gitignore
[Pipeline] [seoul_boundary] sh
[seoul_boundary] [ValhallaPipeline] Running shell script
[seoul_boundary] + sudo rm -rf baseline.pkl docker env jenkinsfiles mapdata-seoul_boundary.version route_validators ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR.log.gz scripts valhalla-install.tgz valhalla_log2.txt valhalla_log.txt valhalla-long-commit.txt .git .gitignore
[Pipeline] [atlanta_boundary] unstash
[Pipeline] [bay_boundary] unstash
[Pipeline] [austin_boundary] unstash
[Pipeline] [chicago_boundary] unstash
[Pipeline] [south_korea_boundary] sh
[south_korea_boundary] [ValhallaPipeline] Running shell script
[south_korea_boundary] + git clone ssh://git@localhost:3333/nav/tm-docker.git .
[south_korea_boundary] Cloning into '.'...
[Pipeline] [atlanta_boundary] sh
[atlanta_boundary] [ValhallaPipeline] Running shell script
[atlanta_boundary] + scripts/setup.sh
[atlanta_boundary] ++ realpath scripts/setup.sh
[atlanta_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[atlanta_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[atlanta_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[atlanta_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[atlanta_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] ++ POSTGIS=mdillon/postgis
[atlanta_boundary] ++ POSTGIS_LABEL=pg.test.com
[atlanta_boundary] ++ PG_USER=postgres
[atlanta_boundary] ++ PG_PASSWD=
[atlanta_boundary] ++ PG_DB=postgres
[atlanta_boundary] ++ INSIGHT_SCHEMA=insight
[atlanta_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[atlanta_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[atlanta_boundary] ++ VALHALLA_BRANCH=origin/master
[atlanta_boundary] ++ NAME_SERVER=12.34.5.67
[atlanta_boundary] ++ VALHALLA_CONCURRENCY=
[atlanta_boundary] ++ BASELINE_FILE=./baseline.txt
[atlanta_boundary] ++ BUILD_FILE=./build.txt
[atlanta_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[atlanta_boundary] ++ MAPDATA_VERSION=NA-170714-148
[atlanta_boundary] ++ MAPDATA_REGION=NA
[atlanta_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[atlanta_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[atlanta_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[atlanta_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] +++ sed -e s/-/_/g
[atlanta_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[atlanta_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[atlanta_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[atlanta_boundary] + [[ -n true ]]
[atlanta_boundary] + sync_aws_mapdata
[atlanta_boundary] + which aws
[atlanta_boundary] /usr/bin/aws
[atlanta_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[atlanta_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[Pipeline] [bay_boundary] sh
[bay_boundary] [ValhallaPipeline] Running shell script
[bay_boundary] + scripts/setup.sh
[bay_boundary] ++ realpath scripts/setup.sh
[bay_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[bay_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[bay_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[bay_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[bay_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] ++ POSTGIS=mdillon/postgis
[bay_boundary] ++ POSTGIS_LABEL=pg.test.com
[bay_boundary] ++ PG_USER=postgres
[bay_boundary] ++ PG_PASSWD=
[bay_boundary] ++ PG_DB=postgres
[bay_boundary] ++ INSIGHT_SCHEMA=insight
[bay_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[bay_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[bay_boundary] ++ VALHALLA_BRANCH=origin/master
[bay_boundary] ++ NAME_SERVER=12.34.5.67
[bay_boundary] ++ VALHALLA_CONCURRENCY=
[bay_boundary] ++ BASELINE_FILE=./baseline.txt
[bay_boundary] ++ BUILD_FILE=./build.txt
[bay_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[bay_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[bay_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[bay_boundary] ++ MAPDATA_VERSION=NA-170714-148
[bay_boundary] ++ MAPDATA_REGION=NA
[bay_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[bay_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[bay_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[bay_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[bay_boundary] +++ sed -e s/-/_/g
[bay_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[bay_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[bay_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[bay_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[bay_boundary] + [[ -n true ]]
[bay_boundary] + sync_aws_mapdata
[bay_boundary] + which aws
[bay_boundary] /usr/bin/aws
[bay_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[bay_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[Pipeline] [austin_boundary] sh
[austin_boundary] [ValhallaPipeline] Running shell script
[austin_boundary] + scripts/setup.sh
[austin_boundary] ++ realpath scripts/setup.sh
[austin_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[austin_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[austin_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[austin_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[austin_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] ++ POSTGIS=mdillon/postgis
[austin_boundary] ++ POSTGIS_LABEL=pg.test.com
[austin_boundary] ++ PG_USER=postgres
[austin_boundary] ++ PG_PASSWD=
[austin_boundary] ++ PG_DB=postgres
[austin_boundary] ++ INSIGHT_SCHEMA=insight
[austin_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[austin_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[austin_boundary] ++ VALHALLA_BRANCH=origin/master
[austin_boundary] ++ NAME_SERVER=12.34.5.67
[austin_boundary] ++ VALHALLA_CONCURRENCY=
[austin_boundary] ++ BASELINE_FILE=./baseline.txt
[austin_boundary] ++ BUILD_FILE=./build.txt
[austin_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[austin_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[austin_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[austin_boundary] ++ MAPDATA_VERSION=NA-170714-148
[austin_boundary] ++ MAPDATA_REGION=NA
[austin_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[austin_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[austin_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[austin_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[austin_boundary] +++ sed -e s/-/_/g
[austin_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[austin_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[austin_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[austin_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[austin_boundary] + [[ -n true ]]
[austin_boundary] + sync_aws_mapdata
[austin_boundary] + which aws
[austin_boundary] /usr/bin/aws
[austin_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[austin_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[Pipeline] [chicago_boundary] sh
[chicago_boundary] [ValhallaPipeline] Running shell script
[chicago_boundary] + scripts/setup.sh
[chicago_boundary] ++ realpath scripts/setup.sh
[chicago_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[chicago_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[chicago_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[chicago_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[chicago_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] ++ POSTGIS=mdillon/postgis
[chicago_boundary] ++ POSTGIS_LABEL=pg.test.com
[chicago_boundary] ++ PG_USER=postgres
[chicago_boundary] ++ PG_PASSWD=
[chicago_boundary] ++ PG_DB=postgres
[chicago_boundary] ++ INSIGHT_SCHEMA=insight
[chicago_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[chicago_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[chicago_boundary] ++ VALHALLA_BRANCH=origin/master
[chicago_boundary] ++ NAME_SERVER=12.34.5.67
[chicago_boundary] ++ VALHALLA_CONCURRENCY=
[chicago_boundary] ++ BASELINE_FILE=./baseline.txt
[chicago_boundary] ++ BUILD_FILE=./build.txt
[chicago_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[chicago_boundary] ++ MAPDATA_VERSION=NA-170714-148
[chicago_boundary] ++ MAPDATA_REGION=NA
[chicago_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[chicago_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[chicago_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[chicago_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] +++ sed -e s/-/_/g
[chicago_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[chicago_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[chicago_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[chicago_boundary] + [[ -n true ]]
[chicago_boundary] + sync_aws_mapdata
[chicago_boundary] + which aws
[chicago_boundary] /usr/bin/aws
[chicago_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[chicago_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[Pipeline] [seoul_boundary] sh
[seoul_boundary] [ValhallaPipeline] Running shell script
[seoul_boundary] + git clone ssh://git@localhost:3333/nav/tm-docker.git .
[seoul_boundary] Cloning into '.'...
[south_korea_boundary] + git checkout origin/master
[south_korea_boundary] Note: checking out 'origin/master'.
[south_korea_boundary]
[south_korea_boundary] You are in 'detached HEAD' state. You can look around, make experimental
[south_korea_boundary] changes and commit them, and you can discard any commits you make in this
[south_korea_boundary] state without impacting any branches by performing another checkout.
[south_korea_boundary]
[south_korea_boundary] If you want to create a new branch to retain commits you create, you may
[south_korea_boundary] do so (now or later) by using -b with the checkout command again. Example:
[south_korea_boundary]
[south_korea_boundary]   git checkout -b <new-branch-name>
[south_korea_boundary]
[south_korea_boundary] HEAD is now at 095a4fb... Fix color_tag error
[south_korea_boundary] + git clone ssh://git@localhost:3333/nav/route_validators.git
[south_korea_boundary] Cloning into 'route_validators'...
[south_korea_boundary] + git -C route_validators checkout -f master
[south_korea_boundary] Already on 'master'
[south_korea_boundary] Your branch is up-to-date with 'origin/master'.
[seoul_boundary] + git checkout origin/master
[seoul_boundary] Note: checking out 'origin/master'.
[seoul_boundary]
[seoul_boundary] You are in 'detached HEAD' state. You can look around, make experimental
[seoul_boundary] changes and commit them, and you can discard any commits you make in this
[seoul_boundary] state without impacting any branches by performing another checkout.
[seoul_boundary]
[seoul_boundary] If you want to create a new branch to retain commits you create, you may
[seoul_boundary] do so (now or later) by using -b with the checkout command again. Example:
[seoul_boundary]
[seoul_boundary]   git checkout -b <new-branch-name>
[seoul_boundary]
[seoul_boundary] HEAD is now at 095a4fb... Fix color_tag error
[seoul_boundary] + git clone ssh://git@localhost:3333/nav/route_validators.git
[seoul_boundary] Cloning into 'route_validators'...
[Pipeline] [south_korea_boundary] sh
[seoul_boundary] + git -C route_validators checkout -f master
[seoul_boundary] Already on 'master'
[seoul_boundary] Your branch is up-to-date with 'origin/master'.
[south_korea_boundary] [ValhallaPipeline] Running shell script
[south_korea_boundary] + scripts/setup.sh
[south_korea_boundary] ++ realpath scripts/setup.sh
[south_korea_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[south_korea_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[south_korea_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[south_korea_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[south_korea_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] ++ POSTGIS=mdillon/postgis
[south_korea_boundary] ++ POSTGIS_LABEL=localhost
[south_korea_boundary] ++ PG_USER=postgres
[south_korea_boundary] ++ PG_PASSWD=
[south_korea_boundary] ++ PG_DB=postgres
[south_korea_boundary] ++ INSIGHT_SCHEMA=insight
[south_korea_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[south_korea_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[south_korea_boundary] ++ VALHALLA_BRANCH=origin/master
[south_korea_boundary] ++ NAME_SERVER=12.34.5.67
[south_korea_boundary] ++ VALHALLA_CONCURRENCY=
[south_korea_boundary] ++ BASELINE_FILE=./baseline.txt
[south_korea_boundary] ++ BUILD_FILE=./build.txt
[south_korea_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[south_korea_boundary] ++ MAPDATA_VERSION=KR-170530-111
[south_korea_boundary] ++ MAPDATA_REGION=KR
[south_korea_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[south_korea_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[south_korea_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[south_korea_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ TEST_NETWORK=host
[south_korea_boundary] +++ sed -e s/-/_/g
[south_korea_boundary] ++ TEST_NETWORK=host
[south_korea_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[south_korea_boundary] + grep 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[south_korea_boundary] 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[south_korea_boundary] + [[ -n true ]]
[south_korea_boundary] + sync_aws_mapdata
[south_korea_boundary] + which aws
[south_korea_boundary] /usr/bin/aws
[south_korea_boundary] + [[ ! -d /home/ec2-user/jenkins/data ]]
[south_korea_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps-kr/osm/release/valhalla/KR-170530-111/ /home/ec2-user/jenkins/data/KR-170530-111
[south_korea_boundary] + create_network
[south_korea_boundary] + _network_exists_ host
[south_korea_boundary] + network=host
[south_korea_boundary] ++ docker network ls --filter name=host
[south_korea_boundary] ++ wc -l
[south_korea_boundary] + network_count=2
[south_korea_boundary] + test 2 -eq 2
[south_korea_boundary] + echo 'Network host already exists, skipping creation'
[south_korea_boundary] Network host already exists, skipping creation
[south_korea_boundary] + launch_postgis
[south_korea_boundary] + [[ -n yes ]]
[south_korea_boundary] + return 0
[Pipeline] [seoul_boundary] sh
[seoul_boundary] [ValhallaPipeline] Running shell script
[seoul_boundary] + scripts/setup.sh
[seoul_boundary] ++ realpath scripts/setup.sh
[seoul_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[seoul_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[seoul_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[seoul_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seoul_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] ++ POSTGIS=mdillon/postgis
[seoul_boundary] ++ POSTGIS_LABEL=localhost
[seoul_boundary] ++ PG_USER=postgres
[seoul_boundary] ++ PG_PASSWD=
[seoul_boundary] ++ PG_DB=postgres
[seoul_boundary] ++ INSIGHT_SCHEMA=insight
[seoul_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[seoul_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[seoul_boundary] ++ VALHALLA_BRANCH=origin/master
[seoul_boundary] ++ NAME_SERVER=12.34.5.67
[seoul_boundary] ++ VALHALLA_CONCURRENCY=
[seoul_boundary] ++ BASELINE_FILE=./baseline.txt
[seoul_boundary] ++ BUILD_FILE=./build.txt
[seoul_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[seoul_boundary] ++ MAPDATA_VERSION=KR-170530-111
[seoul_boundary] ++ MAPDATA_REGION=KR
[seoul_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[seoul_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[seoul_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[seoul_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ TEST_NETWORK=host
[seoul_boundary] +++ sed -e s/-/_/g
[seoul_boundary] ++ TEST_NETWORK=host
[seoul_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[seoul_boundary] + grep 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[seoul_boundary] 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[seoul_boundary] + [[ -n true ]]
[seoul_boundary] + sync_aws_mapdata
[seoul_boundary] + which aws
[seoul_boundary] /usr/bin/aws
[seoul_boundary] + [[ ! -d /home/ec2-user/jenkins/data ]]
[seoul_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps-kr/osm/release/valhalla/KR-170530-111/ /home/ec2-user/jenkins/data/KR-170530-111
[seoul_boundary] + create_network
[seoul_boundary] + _network_exists_ host
[seoul_boundary] + network=host
[seoul_boundary] ++ docker network ls --filter name=host
[seoul_boundary] ++ wc -l
[seoul_boundary] + network_count=2
[seoul_boundary] + test 2 -eq 2
[seoul_boundary] + echo 'Network host already exists, skipping creation'
[seoul_boundary] Network host already exists, skipping creation
[seoul_boundary] + launch_postgis
[seoul_boundary] + [[ -n yes ]]
[seoul_boundary] + return 0
[Pipeline] [south_korea_boundary] sh
[south_korea_boundary] [ValhallaPipeline] Running shell script
[south_korea_boundary] + scripts/dump-map-info.sh south_korea_boundary
[south_korea_boundary] ++ realpath scripts/dump-map-info.sh
[south_korea_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[south_korea_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[south_korea_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[south_korea_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[south_korea_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] ++ POSTGIS=mdillon/postgis
[south_korea_boundary] ++ POSTGIS_LABEL=localhost
[south_korea_boundary] ++ PG_USER=postgres
[south_korea_boundary] ++ PG_PASSWD=
[south_korea_boundary] ++ PG_DB=postgres
[south_korea_boundary] ++ INSIGHT_SCHEMA=insight
[south_korea_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[south_korea_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[south_korea_boundary] ++ VALHALLA_BRANCH=origin/master
[south_korea_boundary] ++ NAME_SERVER=12.34.5.67
[south_korea_boundary] ++ VALHALLA_CONCURRENCY=
[south_korea_boundary] ++ BASELINE_FILE=./baseline.txt
[south_korea_boundary] ++ BUILD_FILE=./build.txt
[south_korea_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[south_korea_boundary] ++ MAPDATA_VERSION=KR-170530-111
[south_korea_boundary] ++ MAPDATA_REGION=KR
[south_korea_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[south_korea_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[south_korea_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[south_korea_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ TEST_NETWORK=host
[south_korea_boundary] +++ sed -e s/-/_/g
[south_korea_boundary] ++ TEST_NETWORK=host
[south_korea_boundary] + BOUNDARY=south_korea_boundary
[south_korea_boundary] + dump_map_info south_korea_boundary
[south_korea_boundary] + BOUNDARY=south_korea_boundary
[south_korea_boundary] + [[ -r /home/ec2-user/jenkins/data/KR-170530-111/VERSION ]]
[south_korea_boundary] + mapdata_version=mapdata-south_korea_boundary.version
[south_korea_boundary] + cp /home/ec2-user/jenkins/data/KR-170530-111/VERSION mapdata-south_korea_boundary.version
[Pipeline] [seoul_boundary] sh
[seoul_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [south_korea_boundary] unstash
[dallas_boundary] Still waiting to schedule task
[dallas_boundary] Waiting for next available executor on docker-tm
[houston_boundary] Still waiting to schedule task
[houston_boundary] Waiting for next available executor on docker-tm
[la_boundary] Still waiting to schedule task
[la_boundary] Waiting for next available executor on docker-tm
[san_diego_boundary] Still waiting to schedule task
[san_diego_boundary] Waiting for next available executor on docker-tm
[seattle_boundary] Still waiting to schedule task
[seattle_boundary] Waiting for next available executor on docker-tm
[taiwan_boundary] Still waiting to schedule task
[taiwan_boundary] Waiting for next available executor on docker-tm
[taipei_boundary] Still waiting to schedule task
[taipei_boundary] Waiting for next available executor on docker-tm
[houston_regression_test] Still waiting to schedule task
[houston_regression_test] Waiting for next available executor on docker-tm
[taipei_regression_test] Still waiting to schedule task
[taipei_regression_test] Waiting for next available executor on docker-tm
[bayarea_regression_test] Still waiting to schedule task
[bayarea_regression_test] Waiting for next available executor on docker-tm
[seoul_boundary] + scripts/dump-map-info.sh seoul_boundary
[seoul_boundary] ++ realpath scripts/dump-map-info.sh
[seoul_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[seoul_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[seoul_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[seoul_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seoul_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] ++ POSTGIS=mdillon/postgis
[seoul_boundary] ++ POSTGIS_LABEL=localhost
[seoul_boundary] ++ PG_USER=postgres
[seoul_boundary] ++ PG_PASSWD=
[seoul_boundary] ++ PG_DB=postgres
[seoul_boundary] ++ INSIGHT_SCHEMA=insight
[seoul_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[seoul_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[seoul_boundary] ++ VALHALLA_BRANCH=origin/master
[seoul_boundary] ++ NAME_SERVER=12.34.5.67
[seoul_boundary] ++ VALHALLA_CONCURRENCY=
[seoul_boundary] ++ BASELINE_FILE=./baseline.txt
[seoul_boundary] ++ BUILD_FILE=./build.txt
[seoul_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[seoul_boundary] ++ MAPDATA_VERSION=KR-170530-111
[seoul_boundary] ++ MAPDATA_REGION=KR
[seoul_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[seoul_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[seoul_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[seoul_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ TEST_NETWORK=host
[seoul_boundary] +++ sed -e s/-/_/g
[seoul_boundary] ++ TEST_NETWORK=host
[seoul_boundary] + BOUNDARY=seoul_boundary
[seoul_boundary] + dump_map_info seoul_boundary
[seoul_boundary] + BOUNDARY=seoul_boundary
[seoul_boundary] + [[ -r /home/ec2-user/jenkins/data/KR-170530-111/VERSION ]]
[seoul_boundary] + mapdata_version=mapdata-seoul_boundary.version
[seoul_boundary] + cp /home/ec2-user/jenkins/data/KR-170530-111/VERSION mapdata-seoul_boundary.version
[la_regression_test] Still waiting to schedule task
[la_regression_test] Waiting for next available executor on docker-tm
[seattle_regression_test] Still waiting to schedule task
[seattle_regression_test] Waiting for next available executor on docker-tm
[uae_boundary] Still waiting to schedule task
[uae_boundary] Waiting for next available executor on docker-tm
[jordan_boundary] Still waiting to schedule task
[jordan_boundary] Waiting for next available executor on docker-tm
[Pipeline] [seoul_boundary] unstash
[Pipeline] [south_korea_boundary] sh
[south_korea_boundary] [ValhallaPipeline] Running shell script
[south_korea_boundary] + scripts/run-route-diagnostics-skr.sh south_korea_boundary
[south_korea_boundary] + BOUNDARY=south_korea_boundary
[south_korea_boundary] + FAILURE_THRESHOLD=20
[south_korea_boundary] ++ realpath scripts/run-route-diagnostics-skr.sh
[south_korea_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-skr.sh
[south_korea_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-skr.sh
[south_korea_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[south_korea_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[south_korea_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] ++ POSTGIS=mdillon/postgis
[south_korea_boundary] ++ POSTGIS_LABEL=localhost
[south_korea_boundary] ++ PG_USER=postgres
[south_korea_boundary] ++ PG_PASSWD=
[south_korea_boundary] ++ PG_DB=postgres
[south_korea_boundary] ++ INSIGHT_SCHEMA=insight
[south_korea_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[south_korea_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[south_korea_boundary] ++ VALHALLA_BRANCH=origin/master
[south_korea_boundary] ++ NAME_SERVER=12.34.5.67
[south_korea_boundary] ++ VALHALLA_CONCURRENCY=
[south_korea_boundary] ++ BASELINE_FILE=./baseline.txt
[south_korea_boundary] ++ BUILD_FILE=./build.txt
[south_korea_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[south_korea_boundary] ++ MAPDATA_VERSION=KR-170530-111
[south_korea_boundary] ++ MAPDATA_REGION=KR
[south_korea_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[south_korea_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[south_korea_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[south_korea_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ TEST_NETWORK=host
[south_korea_boundary] +++ sed -e s/-/_/g
[south_korea_boundary] ++ TEST_NETWORK=host
[south_korea_boundary] + launch_routing_engine nowait
[south_korea_boundary] + [[ -n '' ]]
[south_korea_boundary] + wait_for_routing_service=nowait
[south_korea_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P'
[south_korea_boundary] + [[ -d /home/ec2-user/jenkins/data/KR-170530-111/tm/KR ]]
[south_korea_boundary] + routing_args+=' --volume /home/ec2-user/jenkins/data:/mapdata'
[south_korea_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[south_korea_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[south_korea_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'ln -sf /mapdata/KR-170530-111/tm/KR /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[south_korea_boundary] + local_host=localhost:8002
[south_korea_boundary] + [[ host == \h\o\s\t ]]
[south_korea_boundary] ++ docker inspect --format '{{.Config.Hostname}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + remote_host=ip-172-31-21-244:8002
[south_korea_boundary] ++ print_regional_request
[south_korea_boundary] ++ case "$MAPDATA_REGION" in
[south_korea_boundary] ++ request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] ++ echo 'route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + remote_request='http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[Pipeline] [seoul_boundary] sh
[seoul_boundary] [ValhallaPipeline] Running shell script
[south_korea_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + scripts/run-route-diagnostics-skr.sh seoul_boundary
[seoul_boundary] + BOUNDARY=seoul_boundary
[seoul_boundary] + FAILURE_THRESHOLD=20
[seoul_boundary] ++ realpath scripts/run-route-diagnostics-skr.sh
[seoul_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-skr.sh
[seoul_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics-skr.sh
[seoul_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[seoul_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seoul_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] ++ POSTGIS=mdillon/postgis
[seoul_boundary] ++ POSTGIS_LABEL=localhost
[seoul_boundary] ++ PG_USER=postgres
[seoul_boundary] ++ PG_PASSWD=
[seoul_boundary] ++ PG_DB=postgres
[seoul_boundary] ++ INSIGHT_SCHEMA=insight
[seoul_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[seoul_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[seoul_boundary] ++ VALHALLA_BRANCH=origin/master
[seoul_boundary] ++ NAME_SERVER=12.34.5.67
[seoul_boundary] ++ VALHALLA_CONCURRENCY=
[seoul_boundary] ++ BASELINE_FILE=./baseline.txt
[seoul_boundary] ++ BUILD_FILE=./build.txt
[seoul_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[seoul_boundary] ++ MAPDATA_VERSION=KR-170530-111
[seoul_boundary] ++ MAPDATA_REGION=KR
[seoul_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[seoul_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[seoul_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[seoul_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ TEST_NETWORK=host
[seoul_boundary] +++ sed -e s/-/_/g
[seoul_boundary] ++ TEST_NETWORK=host
[seoul_boundary] + launch_routing_engine nowait
[seoul_boundary] + [[ -n '' ]]
[seoul_boundary] + wait_for_routing_service=nowait
[seoul_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P'
[seoul_boundary] + [[ -d /home/ec2-user/jenkins/data/KR-170530-111/tm/KR ]]
[seoul_boundary] + routing_args+=' --volume /home/ec2-user/jenkins/data:/mapdata'
[seoul_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[seoul_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR --network host --dns=12.34.5.67 -P --volume /home/ec2-user/jenkins/data:/mapdata 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest tail -f /dev/null
[seoul_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'ln -sf /mapdata/KR-170530-111/tm/KR /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[seoul_boundary] + local_host=localhost:8002
[seoul_boundary] + [[ host == \h\o\s\t ]]
[seoul_boundary] ++ docker inspect --format '{{.Config.Hostname}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + remote_host=ip-172-31-17-146:8002
[seoul_boundary] ++ print_regional_request
[seoul_boundary] ++ case "$MAPDATA_REGION" in
[seoul_boundary] ++ request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] ++ echo 'route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + remote_request='http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + [[ nowait == \n\o\w\a\i\t ]]
[seoul_boundary] + break
[seoul_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + grep '"error":'
[south_korea_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] CONTAINER ID        IMAGE                                                              COMMAND               CREATED             STATUS              PORTS               NAMES
[south_korea_boundary] 23697f8446f2        123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest   "tail -f /dev/null"   7 seconds ago       Up 6 seconds                            ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + kill_valhalla
[south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR pkill -f valhalla_route_service
[south_korea_boundary] + install_valhalla_from_package /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[south_korea_boundary] + inputfile=/home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[south_korea_boundary] + [[ ! -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[south_korea_boundary] + docker cp /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR:/navigation/valhalla-install.tgz
[south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[seoul_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + grep '"error":'
[south_korea_boundary] + launch_routing_engine
[south_korea_boundary] + [[ -n '' ]]
[south_korea_boundary] + wait_for_routing_service=wait
[south_korea_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] ++ grep Status
[south_korea_boundary] ++ tr -d ' ",'
[south_korea_boundary] ++ awk -F: '{print $2}'
[south_korea_boundary] + container_status=running
[south_korea_boundary] + [[ running == \e\x\i\t\e\d ]]
[south_korea_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR pgrep -f valhalla_route_service
[south_korea_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[south_korea_boundary] + _network_has_container_ host ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + network=host
[south_korea_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + format='{{.NetworkSettings.Networks.host}}'
[south_korea_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.host}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + output='{<nil> [] [] 200879a4fb78e1ae8d026a7e0c18b3d66a382d7bc804b802fd662e0984fd4b5c 3a0f0d30fb89d77866fd597acc8f2cd725d28beecb03f96a4bbce5f0887cbe4a   0   0 }'
[south_korea_boundary] + [[ {<nil> [] [] 200879a4fb78e1ae8d026a7e0c18b3d66a382d7bc804b802fd662e0984fd4b5c 3a0f0d30fb89d77866fd597acc8f2cd725d28beecb03f96a4bbce5f0887cbe4a   0   0 } == *\<\n\o\ \v\a\l\u\e\>* ]]
[south_korea_boundary] + return 0
[south_korea_boundary] + local_host=localhost:8002
[south_korea_boundary] + [[ host == \h\o\s\t ]]
[south_korea_boundary] ++ docker inspect --format '{{.Config.Hostname}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + remote_host=ip-172-31-21-244:8002
[south_korea_boundary] ++ print_regional_request
[south_korea_boundary] ++ case "$MAPDATA_REGION" in
[south_korea_boundary] ++ request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] ++ echo 'route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + remote_request='http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[south_korea_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] CONTAINER ID        IMAGE                                                              COMMAND               CREATED             STATUS              PORTS               NAMES
[seoul_boundary] a9779fd12277        123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest   "tail -f /dev/null"   9 seconds ago       Up 7 seconds                            ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + kill_valhalla
[seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR pkill -f valhalla_route_service
[seoul_boundary] + install_valhalla_from_package /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[seoul_boundary] + inputfile=/home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[seoul_boundary] + [[ ! -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[seoul_boundary] + docker cp /home/ec2-user/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR:/navigation/valhalla-install.tgz
[seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[atlanta_boundary] + create_network
[atlanta_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] ++ wc -l
[atlanta_boundary] + network_count=1
[atlanta_boundary] + test 1 -eq 2
[atlanta_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[atlanta_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] 37fff694c85feb250d488464860d9fd1002bf09e5eeabf59931f95b9d68b7e7f
[atlanta_boundary] + launch_postgis
[atlanta_boundary] + [[ -n yes ]]
[atlanta_boundary] + return 0
[south_korea_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[Pipeline] [atlanta_boundary] sh
[bay_boundary] + create_network
[bay_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[bay_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[bay_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[bay_boundary] ++ wc -l
[bay_boundary] + network_count=1
[bay_boundary] + test 1 -eq 2
[bay_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[bay_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[bay_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[bay_boundary] 2770e60db758187f515c8d6479679955d6d0247b6f9e6aff6e5158227b666e6d
[bay_boundary] + launch_postgis
[bay_boundary] + [[ -n yes ]]
[bay_boundary] + return 0
[austin_boundary] + create_network
[austin_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[austin_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[austin_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[austin_boundary] ++ wc -l
[austin_boundary] + network_count=1
[austin_boundary] + test 1 -eq 2
[austin_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[austin_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[austin_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[austin_boundary] de76d34467ec5e8ed62b2d3d659f35da5d7ca5487d91ed159ead2da8d852d06a
[austin_boundary] + launch_postgis
[austin_boundary] + [[ -n yes ]]
[austin_boundary] + return 0
[atlanta_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [bay_boundary] sh
[chicago_boundary] + create_network
[chicago_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] ++ wc -l
[chicago_boundary] + network_count=1
[chicago_boundary] + test 1 -eq 2
[chicago_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[chicago_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[bay_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [austin_boundary] sh
[atlanta_boundary] + scripts/dump-map-info.sh atlanta_boundary
[atlanta_boundary] ++ realpath scripts/dump-map-info.sh
[atlanta_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[atlanta_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[atlanta_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[atlanta_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[atlanta_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] ++ POSTGIS=mdillon/postgis
[atlanta_boundary] ++ POSTGIS_LABEL=pg.test.com
[atlanta_boundary] ++ PG_USER=postgres
[atlanta_boundary] ++ PG_PASSWD=
[atlanta_boundary] ++ PG_DB=postgres
[atlanta_boundary] ++ INSIGHT_SCHEMA=insight
[atlanta_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[atlanta_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[atlanta_boundary] ++ VALHALLA_BRANCH=origin/master
[atlanta_boundary] ++ NAME_SERVER=12.34.5.67
[atlanta_boundary] ++ VALHALLA_CONCURRENCY=
[atlanta_boundary] ++ BASELINE_FILE=./baseline.txt
[atlanta_boundary] ++ BUILD_FILE=./build.txt
[atlanta_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[atlanta_boundary] ++ MAPDATA_VERSION=NA-170714-148
[atlanta_boundary] ++ MAPDATA_REGION=NA
[atlanta_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[atlanta_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[atlanta_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[atlanta_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] +++ sed -e s/-/_/g
[atlanta_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] + BOUNDARY=atlanta_boundary
[atlanta_boundary] + dump_map_info atlanta_boundary
[atlanta_boundary] + BOUNDARY=atlanta_boundary
[atlanta_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[atlanta_boundary] + mapdata_version=mapdata-atlanta_boundary.version
[atlanta_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-atlanta_boundary.version
[austin_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [atlanta_boundary] sh
[seoul_boundary] + launch_routing_engine
[seoul_boundary] + [[ -n '' ]]
[seoul_boundary] + wait_for_routing_service=wait
[seoul_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] ++ grep Status
[seoul_boundary] ++ tr -d ' ",'
[seoul_boundary] ++ awk -F: '{print $2}'
[seoul_boundary] + container_status=running
[seoul_boundary] + [[ running == \e\x\i\t\e\d ]]
[seoul_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR pgrep -f valhalla_route_service
[seoul_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[seoul_boundary] + _network_has_container_ host ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + network=host
[seoul_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + format='{{.NetworkSettings.Networks.host}}'
[seoul_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.host}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + output='{<nil> [] [] 0aff9a3063537a0e68c603afb44f3437efe82e4ad21660d758a1a630d1805a1c 16ebc73062ff7b64ade1b80100451381d0456304e46cc00df6666fe6bce442b2   0   0 }'
[seoul_boundary] + [[ {<nil> [] [] 0aff9a3063537a0e68c603afb44f3437efe82e4ad21660d758a1a630d1805a1c 16ebc73062ff7b64ade1b80100451381d0456304e46cc00df6666fe6bce442b2   0   0 } == *\<\n\o\ \v\a\l\u\e\>* ]]
[seoul_boundary] + return 0
[seoul_boundary] + local_host=localhost:8002
[seoul_boundary] + [[ host == \h\o\s\t ]]
[seoul_boundary] ++ docker inspect --format '{{.Config.Hostname}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + remote_host=ip-172-31-17-146:8002
[seoul_boundary] ++ print_regional_request
[seoul_boundary] ++ case "$MAPDATA_REGION" in
[seoul_boundary] ++ request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] ++ echo 'route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + request='route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + remote_request='http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[seoul_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[bay_boundary] + scripts/dump-map-info.sh bay_boundary
[bay_boundary] ++ realpath scripts/dump-map-info.sh
[bay_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[bay_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[bay_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[bay_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[bay_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] ++ POSTGIS=mdillon/postgis
[bay_boundary] ++ POSTGIS_LABEL=pg.test.com
[bay_boundary] ++ PG_USER=postgres
[bay_boundary] ++ PG_PASSWD=
[bay_boundary] ++ PG_DB=postgres
[bay_boundary] ++ INSIGHT_SCHEMA=insight
[bay_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[bay_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[bay_boundary] ++ VALHALLA_BRANCH=origin/master
[bay_boundary] ++ NAME_SERVER=12.34.5.67
[bay_boundary] ++ VALHALLA_CONCURRENCY=
[bay_boundary] ++ BASELINE_FILE=./baseline.txt
[bay_boundary] ++ BUILD_FILE=./build.txt
[bay_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[bay_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[bay_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[bay_boundary] ++ MAPDATA_VERSION=NA-170714-148
[bay_boundary] ++ MAPDATA_REGION=NA
[bay_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[bay_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[bay_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[bay_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[bay_boundary] +++ sed -e s/-/_/g
[bay_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[bay_boundary] + BOUNDARY=bay_boundary
[bay_boundary] + dump_map_info bay_boundary
[bay_boundary] + BOUNDARY=bay_boundary
[bay_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[bay_boundary] + mapdata_version=mapdata-bay_boundary.version
[bay_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-bay_boundary.version
[atlanta_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [bay_boundary] sh
[austin_boundary] + scripts/dump-map-info.sh austin_boundary
[austin_boundary] ++ realpath scripts/dump-map-info.sh
[austin_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[austin_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[austin_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[austin_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[austin_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] ++ POSTGIS=mdillon/postgis
[austin_boundary] ++ POSTGIS_LABEL=pg.test.com
[austin_boundary] ++ PG_USER=postgres
[austin_boundary] ++ PG_PASSWD=
[austin_boundary] ++ PG_DB=postgres
[austin_boundary] ++ INSIGHT_SCHEMA=insight
[austin_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[austin_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[austin_boundary] ++ VALHALLA_BRANCH=origin/master
[austin_boundary] ++ NAME_SERVER=12.34.5.67
[austin_boundary] ++ VALHALLA_CONCURRENCY=
[austin_boundary] ++ BASELINE_FILE=./baseline.txt
[austin_boundary] ++ BUILD_FILE=./build.txt
[austin_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[austin_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[austin_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[austin_boundary] ++ MAPDATA_VERSION=NA-170714-148
[austin_boundary] ++ MAPDATA_REGION=NA
[austin_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[austin_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[austin_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[austin_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[austin_boundary] +++ sed -e s/-/_/g
[austin_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[austin_boundary] + BOUNDARY=austin_boundary
[austin_boundary] + dump_map_info austin_boundary
[austin_boundary] + BOUNDARY=austin_boundary
[austin_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[austin_boundary] + mapdata_version=mapdata-austin_boundary.version
[austin_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-austin_boundary.version
[bay_boundary] [ValhallaPipeline] Running shell script
[chicago_boundary] 25b193d2d1f87e6cfb1fda7c3a301835fff47358eac07f23edde394056a9c042
[chicago_boundary] + launch_postgis
[chicago_boundary] + [[ -n yes ]]
[chicago_boundary] + return 0
[Pipeline] [austin_boundary] sh
[atlanta_boundary] + scripts/run-route-diagnostics.sh atlanta_boundary
[atlanta_boundary] + BOUNDARY=atlanta_boundary
[atlanta_boundary] + FAILURE_THRESHOLD=20
[atlanta_boundary] ++ realpath scripts/run-route-diagnostics.sh
[atlanta_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[atlanta_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[atlanta_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[atlanta_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[atlanta_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] ++ POSTGIS=mdillon/postgis
[atlanta_boundary] ++ POSTGIS_LABEL=pg.test.com
[atlanta_boundary] ++ PG_USER=postgres
[atlanta_boundary] ++ PG_PASSWD=
[atlanta_boundary] ++ PG_DB=postgres
[atlanta_boundary] ++ INSIGHT_SCHEMA=insight
[atlanta_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[atlanta_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[atlanta_boundary] ++ VALHALLA_BRANCH=origin/master
[atlanta_boundary] ++ NAME_SERVER=12.34.5.67
[atlanta_boundary] ++ VALHALLA_CONCURRENCY=
[atlanta_boundary] ++ BASELINE_FILE=./baseline.txt
[atlanta_boundary] ++ BUILD_FILE=./build.txt
[atlanta_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[atlanta_boundary] ++ MAPDATA_VERSION=NA-170714-148
[atlanta_boundary] ++ MAPDATA_REGION=NA
[atlanta_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[atlanta_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[atlanta_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[atlanta_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] +++ sed -e s/-/_/g
[atlanta_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] + launch_postgis
[atlanta_boundary] + [[ -n yes ]]
[atlanta_boundary] + return 0
[atlanta_boundary] + launch_routing_engine nowait
[atlanta_boundary] + [[ -n '' ]]
[atlanta_boundary] + wait_for_routing_service=nowait
[atlanta_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[atlanta_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[atlanta_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[atlanta_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[atlanta_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[austin_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [chicago_boundary] sh
[south_korea_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-21-244:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + grep '"error":'
[bay_boundary] + scripts/run-route-diagnostics.sh bay_boundary
[bay_boundary] + BOUNDARY=bay_boundary
[bay_boundary] + FAILURE_THRESHOLD=20
[bay_boundary] ++ realpath scripts/run-route-diagnostics.sh
[bay_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[bay_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[bay_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[bay_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[bay_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] ++ POSTGIS=mdillon/postgis
[bay_boundary] ++ POSTGIS_LABEL=pg.test.com
[bay_boundary] ++ PG_USER=postgres
[bay_boundary] ++ PG_PASSWD=
[bay_boundary] ++ PG_DB=postgres
[bay_boundary] ++ INSIGHT_SCHEMA=insight
[bay_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[bay_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[bay_boundary] ++ VALHALLA_BRANCH=origin/master
[bay_boundary] ++ NAME_SERVER=12.34.5.67
[bay_boundary] ++ VALHALLA_CONCURRENCY=
[bay_boundary] ++ BASELINE_FILE=./baseline.txt
[bay_boundary] ++ BUILD_FILE=./build.txt
[bay_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[bay_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[bay_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[bay_boundary] ++ MAPDATA_VERSION=NA-170714-148
[bay_boundary] ++ MAPDATA_REGION=NA
[bay_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[bay_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[bay_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[bay_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[bay_boundary] +++ sed -e s/-/_/g
[bay_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[bay_boundary] + launch_postgis
[bay_boundary] + [[ -n yes ]]
[bay_boundary] + return 0
[bay_boundary] + launch_routing_engine nowait
[bay_boundary] + [[ -n '' ]]
[bay_boundary] + wait_for_routing_service=nowait
[bay_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[bay_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[bay_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[bay_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[bay_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[austin_boundary] + scripts/run-route-diagnostics.sh austin_boundary
[austin_boundary] + BOUNDARY=austin_boundary
[austin_boundary] + FAILURE_THRESHOLD=20
[austin_boundary] ++ realpath scripts/run-route-diagnostics.sh
[austin_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[austin_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[austin_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[austin_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[austin_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] ++ POSTGIS=mdillon/postgis
[austin_boundary] ++ POSTGIS_LABEL=pg.test.com
[austin_boundary] ++ PG_USER=postgres
[austin_boundary] ++ PG_PASSWD=
[austin_boundary] ++ PG_DB=postgres
[austin_boundary] ++ INSIGHT_SCHEMA=insight
[austin_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[austin_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[austin_boundary] ++ VALHALLA_BRANCH=origin/master
[austin_boundary] ++ NAME_SERVER=12.34.5.67
[austin_boundary] ++ VALHALLA_CONCURRENCY=
[austin_boundary] ++ BASELINE_FILE=./baseline.txt
[austin_boundary] ++ BUILD_FILE=./build.txt
[austin_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[austin_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[austin_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[austin_boundary] ++ MAPDATA_VERSION=NA-170714-148
[austin_boundary] ++ MAPDATA_REGION=NA
[austin_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[austin_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[austin_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[austin_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[austin_boundary] +++ sed -e s/-/_/g
[austin_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[austin_boundary] + launch_postgis
[austin_boundary] + [[ -n yes ]]
[austin_boundary] + return 0
[austin_boundary] + launch_routing_engine nowait
[austin_boundary] + [[ -n '' ]]
[austin_boundary] + wait_for_routing_service=nowait
[austin_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[austin_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[austin_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[austin_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[austin_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[chicago_boundary] [ValhallaPipeline] Running shell script
[chicago_boundary] + scripts/dump-map-info.sh chicago_boundary
[chicago_boundary] ++ realpath scripts/dump-map-info.sh
[chicago_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[chicago_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[chicago_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[chicago_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[chicago_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] ++ POSTGIS=mdillon/postgis
[chicago_boundary] ++ POSTGIS_LABEL=pg.test.com
[chicago_boundary] ++ PG_USER=postgres
[chicago_boundary] ++ PG_PASSWD=
[chicago_boundary] ++ PG_DB=postgres
[chicago_boundary] ++ INSIGHT_SCHEMA=insight
[chicago_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[chicago_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[chicago_boundary] ++ VALHALLA_BRANCH=origin/master
[chicago_boundary] ++ NAME_SERVER=12.34.5.67
[chicago_boundary] ++ VALHALLA_CONCURRENCY=
[chicago_boundary] ++ BASELINE_FILE=./baseline.txt
[chicago_boundary] ++ BUILD_FILE=./build.txt
[chicago_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[chicago_boundary] ++ MAPDATA_VERSION=NA-170714-148
[chicago_boundary] ++ MAPDATA_REGION=NA
[chicago_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[chicago_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[chicago_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[chicago_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] +++ sed -e s/-/_/g
[chicago_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] + BOUNDARY=chicago_boundary
[chicago_boundary] + dump_map_info chicago_boundary
[chicago_boundary] + BOUNDARY=chicago_boundary
[chicago_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[chicago_boundary] + mapdata_version=mapdata-chicago_boundary.version
[chicago_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-chicago_boundary.version
[Pipeline] [chicago_boundary] sh
[atlanta_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[atlanta_boundary] + local_host=localhost:8002
[atlanta_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[atlanta_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[atlanta_boundary] ++ print_regional_request
[atlanta_boundary] ++ case "$MAPDATA_REGION" in
[atlanta_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[bay_boundary] + local_host=localhost:8002
[bay_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[bay_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[bay_boundary] ++ print_regional_request
[bay_boundary] ++ case "$MAPDATA_REGION" in
[bay_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[austin_boundary] + local_host=localhost:8002
[austin_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[austin_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[austin_boundary] ++ print_regional_request
[austin_boundary] ++ case "$MAPDATA_REGION" in
[austin_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] [ValhallaPipeline] Running shell script
[chicago_boundary] + scripts/run-route-diagnostics.sh chicago_boundary
[chicago_boundary] + BOUNDARY=chicago_boundary
[chicago_boundary] + FAILURE_THRESHOLD=20
[chicago_boundary] ++ realpath scripts/run-route-diagnostics.sh
[chicago_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[chicago_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[chicago_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[chicago_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[chicago_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] ++ POSTGIS=mdillon/postgis
[chicago_boundary] ++ POSTGIS_LABEL=pg.test.com
[chicago_boundary] ++ PG_USER=postgres
[chicago_boundary] ++ PG_PASSWD=
[chicago_boundary] ++ PG_DB=postgres
[chicago_boundary] ++ INSIGHT_SCHEMA=insight
[chicago_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[chicago_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[chicago_boundary] ++ VALHALLA_BRANCH=origin/master
[chicago_boundary] ++ NAME_SERVER=12.34.5.67
[chicago_boundary] ++ VALHALLA_CONCURRENCY=
[chicago_boundary] ++ BASELINE_FILE=./baseline.txt
[chicago_boundary] ++ BUILD_FILE=./build.txt
[chicago_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[chicago_boundary] ++ MAPDATA_VERSION=NA-170714-148
[chicago_boundary] ++ MAPDATA_REGION=NA
[chicago_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[chicago_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[chicago_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[chicago_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] +++ sed -e s/-/_/g
[chicago_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] + launch_postgis
[chicago_boundary] + [[ -n yes ]]
[chicago_boundary] + return 0
[chicago_boundary] + launch_routing_engine nowait
[chicago_boundary] + [[ -n '' ]]
[chicago_boundary] + wait_for_routing_service=nowait
[chicago_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[chicago_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[chicago_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[chicago_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[chicago_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[chicago_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[chicago_boundary] + local_host=localhost:8002
[chicago_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[chicago_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[chicago_boundary] ++ print_regional_request
[chicago_boundary] ++ case "$MAPDATA_REGION" in
[chicago_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] CONTAINER ID        IMAGE                                                              COMMAND               CREATED             STATUS              PORTS               NAMES
[south_korea_boundary] 23697f8446f2        123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest   "tail -f /dev/null"   15 seconds ago      Up 14 seconds                           ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[south_korea_boundary] + [[ host == \h\o\s\t ]]
[south_korea_boundary] + VALHALLA_LABEL=localhost
[south_korea_boundary] + docker run --rm --network host --name collect_route__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && python3 collect_route.py -host localhost -boundary south_korea_boundary -valhalla localhost -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[seoul_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] Namespace(bias=1, boundary='south_korea_boundary', database='postgres', host='localhost', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='localhost', valhalla_port=8002)
[south_korea_boundary] Retrieving baseline routes
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + docker run --rm --network host 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest curl --silent --globoff --connect-timeout 5 'http://ip-172-31-17-146:8002/route?json={"locations":[{"lat":37.514595,"lon":126.909366,"type":"break"},{"lat":37.266162,"lon":126.999821,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + grep '"error":'
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + grep '"error":'
[bay_boundary] + grep '"error":'
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + grep '"error":'
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] CONTAINER ID        IMAGE                                                              COMMAND               CREATED             STATUS              PORTS               NAMES
[seoul_boundary] a9779fd12277        123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest   "tail -f /dev/null"   21 seconds ago      Up 19 seconds                           ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[seoul_boundary] + [[ host == \h\o\s\t ]]
[seoul_boundary] + VALHALLA_LABEL=localhost
[seoul_boundary] + docker run --rm --network host --name collect_route__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && python3 collect_route.py -host localhost -boundary seoul_boundary -valhalla localhost -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[atlanta_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[atlanta_boundary] 08cdd9c43669        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   10 seconds ago      Up 9 seconds        0.0.0.0:34682->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + kill_valhalla
[atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[atlanta_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[atlanta_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[atlanta_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[atlanta_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[seoul_boundary] Namespace(bias=1, boundary='seoul_boundary', database='postgres', host='localhost', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='localhost', valhalla_port=8002)
[seoul_boundary] Retrieving baseline routes
[bay_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[bay_boundary] 115c0a571ac3        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 10 seconds       0.0.0.0:35245->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + kill_valhalla
[bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[bay_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[bay_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[bay_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[bay_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[austin_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[austin_boundary] 8aeb52be28b7        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   12 seconds ago      Up 10 seconds       0.0.0.0:34574->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + kill_valhalla
[austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[austin_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[austin_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[austin_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[austin_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[chicago_boundary] + grep '"error":'
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[south_korea_boundary] Retrieving valhalla routes
[south_korea_boundary] Valhalla request threadpool size: 10
[atlanta_boundary] + launch_routing_engine
[atlanta_boundary] + [[ -n '' ]]
[atlanta_boundary] + wait_for_routing_service=wait
[atlanta_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] ++ tr -d ' ",'
[atlanta_boundary] ++ awk -F: '{print $2}'
[atlanta_boundary] ++ grep Status
[atlanta_boundary] + container_status=running
[atlanta_boundary] + [[ running == \e\x\i\t\e\d ]]
[atlanta_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[atlanta_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[atlanta_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[atlanta_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + output='{<nil> [] [08cdd9c43669] 37fff694c85feb250d488464860d9fd1002bf09e5eeabf59931f95b9d68b7e7f 0c411a4c7327ce0b447dcfb49506b1fa33220b3c8f76958e36443798426a8150 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[atlanta_boundary] + [[ {<nil> [] [08cdd9c43669] 37fff694c85feb250d488464860d9fd1002bf09e5eeabf59931f95b9d68b7e7f 0c411a4c7327ce0b447dcfb49506b1fa33220b3c8f76958e36443798426a8150 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[atlanta_boundary] + return 0
[atlanta_boundary] + local_host=localhost:8002
[atlanta_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[atlanta_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[atlanta_boundary] ++ print_regional_request
[atlanta_boundary] ++ case "$MAPDATA_REGION" in
[atlanta_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[atlanta_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + launch_routing_engine
[bay_boundary] + [[ -n '' ]]
[bay_boundary] + wait_for_routing_service=wait
[bay_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] ++ awk -F: '{print $2}'
[bay_boundary] ++ tr -d ' ",'
[bay_boundary] ++ grep Status
[bay_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + container_status=running
[bay_boundary] + [[ running == \e\x\i\t\e\d ]]
[bay_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[bay_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[bay_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[bay_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[bay_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + output='{<nil> [] [115c0a571ac3] 2770e60db758187f515c8d6479679955d6d0247b6f9e6aff6e5158227b666e6d c4cca64cfd52b828026850c36b288b661b5727cd71ef9b8e37e61f11914e51c3 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[bay_boundary] + [[ {<nil> [] [115c0a571ac3] 2770e60db758187f515c8d6479679955d6d0247b6f9e6aff6e5158227b666e6d c4cca64cfd52b828026850c36b288b661b5727cd71ef9b8e37e61f11914e51c3 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[bay_boundary] + return 0
[bay_boundary] + local_host=localhost:8002
[bay_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[bay_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[bay_boundary] ++ print_regional_request
[bay_boundary] ++ case "$MAPDATA_REGION" in
[bay_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[bay_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + launch_routing_engine
[austin_boundary] + [[ -n '' ]]
[austin_boundary] + wait_for_routing_service=wait
[austin_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] ++ grep Status
[austin_boundary] ++ awk -F: '{print $2}'
[austin_boundary] ++ tr -d ' ",'
[austin_boundary] + container_status=running
[austin_boundary] + [[ running == \e\x\i\t\e\d ]]
[austin_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[austin_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[austin_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[austin_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[austin_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + output='{<nil> [] [8aeb52be28b7] de76d34467ec5e8ed62b2d3d659f35da5d7ca5487d91ed159ead2da8d852d06a 6f14218ffaae9dd1dde14a4d559119eed436d3903764418b08ca9751394ba488 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[austin_boundary] + [[ {<nil> [] [8aeb52be28b7] de76d34467ec5e8ed62b2d3d659f35da5d7ca5487d91ed159ead2da8d852d06a 6f14218ffaae9dd1dde14a4d559119eed436d3903764418b08ca9751394ba488 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[austin_boundary] + return 0
[austin_boundary] + local_host=localhost:8002
[austin_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[austin_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[austin_boundary] ++ print_regional_request
[austin_boundary] ++ case "$MAPDATA_REGION" in
[austin_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[austin_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[chicago_boundary] 2e778bc786ec        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   14 seconds ago      Up 12 seconds       0.0.0.0:34891->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + kill_valhalla
[chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[chicago_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[chicago_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[chicago_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[chicago_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[seoul_boundary] Retrieving valhalla routes
[seoul_boundary] Valhalla request threadpool size: 10
[chicago_boundary] + launch_routing_engine
[chicago_boundary] + [[ -n '' ]]
[chicago_boundary] + wait_for_routing_service=wait
[chicago_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] ++ grep Status
[chicago_boundary] ++ tr -d ' ",'
[chicago_boundary] ++ awk -F: '{print $2}'
[chicago_boundary] + container_status=running
[chicago_boundary] + [[ running == \e\x\i\t\e\d ]]
[chicago_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[chicago_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[chicago_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[chicago_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + output='{<nil> [] [2e778bc786ec] 25b193d2d1f87e6cfb1fda7c3a301835fff47358eac07f23edde394056a9c042 58f08ab057e854204cbb78ad4459f23cc2718043ccc7b15a84ef798241a1e746 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[chicago_boundary] + [[ {<nil> [] [2e778bc786ec] 25b193d2d1f87e6cfb1fda7c3a301835fff47358eac07f23edde394056a9c042 58f08ab057e854204cbb78ad4459f23cc2718043ccc7b15a84ef798241a1e746 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[chicago_boundary] + return 0
[chicago_boundary] + local_host=localhost:8002
[chicago_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[chicago_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[chicago_boundary] ++ print_regional_request
[chicago_boundary] ++ case "$MAPDATA_REGION" in
[chicago_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[chicago_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[atlanta_boundary] + grep '"error":'
[bay_boundary] + grep '"error":'
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[austin_boundary] + grep '"error":'
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bay_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[bay_boundary] 115c0a571ac3        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   23 seconds ago      Up 22 seconds       0.0.0.0:35245->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary bay_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[atlanta_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[atlanta_boundary] 08cdd9c43669        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   24 seconds ago      Up 23 seconds       0.0.0.0:34682->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary atlanta_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[atlanta_boundary] Namespace(bias=1, boundary='atlanta_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[atlanta_boundary] Retrieving baseline routes
[bay_boundary] Namespace(bias=1, boundary='bay_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[bay_boundary] Retrieving baseline routes
[austin_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[austin_boundary] 8aeb52be28b7        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   24 seconds ago      Up 23 seconds       0.0.0.0:34574->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary austin_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[austin_boundary] Namespace(bias=1, boundary='austin_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[austin_boundary] Retrieving baseline routes
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + grep '"error":'
[atlanta_boundary] Retrieving valhalla routes
[atlanta_boundary] Valhalla request threadpool size: 10
[austin_boundary] Retrieving valhalla routes
[austin_boundary] Valhalla request threadpool size: 10
[chicago_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[chicago_boundary] 2e778bc786ec        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   29 seconds ago      Up 27 seconds       0.0.0.0:34891->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary chicago_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[chicago_boundary] Namespace(bias=1, boundary='chicago_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[chicago_boundary] Retrieving baseline routes
[chicago_boundary] Retrieving valhalla routes
[chicago_boundary] Valhalla request threadpool size: 10
[bay_boundary] Retrieving valhalla routes
[bay_boundary] Valhalla request threadpool size: 10
[austin_boundary] Out of 1025 routes, found 1010 trips
[austin_boundary] Exporting 1010 valhalla routes to insight database
[seoul_boundary] Out of 2383 routes, found 2383 trips
[seoul_boundary] Exporting 2383 valhalla routes to insight database
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary austin_boundary -tag _jenkins-ValhallaPipeline-1004'
[austin_boundary] Processing 1010 polylines
[atlanta_boundary] Out of 1501 routes, found 1500 trips
[atlanta_boundary] Exporting 1500 valhalla routes to insight database
[south_korea_boundary] Out of 1899 routes, found 1899 trips
[south_korea_boundary] Exporting 1899 valhalla routes to insight database
[austin_boundary] Saving results
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary austin_boundary -tag _jenkins-ValhallaPipeline-1004'
[austin_boundary] Routing) Boundary: austin_boundary | Requested: 1010 | Successful: 1010 | Failed: 0 | Match pct: 77.23
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary austin_boundary -tag _jenkins-ValhallaPipeline-1004'
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary atlanta_boundary -tag _jenkins-ValhallaPipeline-1004'
[atlanta_boundary] Processing 1500 polylines
[atlanta_boundary] Saving results
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary atlanta_boundary -tag _jenkins-ValhallaPipeline-1004'
[austin_boundary] Saving error table with filename: max-error-table-austin_boundary.png
[austin_boundary] Saving max error chart with filename: max-error-hist-austin_boundary.png
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary austin_boundary -tag _jenkins-ValhallaPipeline-1004'
[seoul_boundary] + docker run --rm --network host --name run_comparison__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && python3 run_comparison.py -host localhost -boundary seoul_boundary -tag _jenkins-ValhallaPipeline-1004'
[atlanta_boundary] Routing) Boundary: atlanta_boundary | Requested: 1500 | Successful: 1500 | Failed: 0 | Match pct: 76.87
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary atlanta_boundary -tag _jenkins-ValhallaPipeline-1004'
[austin_boundary] Guidance) Boundary: austin_boundary | Total: 1010 | Steps Failed Count: 21 | Unnamed Start Count: 19 | Unnamed Middle Count: 35 | Unnamed Mid Short Count: 21 | Unnamed Mid Medium Count: 2 | Unnamed Mid Long Count: 15 | Unnamed End Count: 23 | Unnamed Verbal Count: 3
[austin_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary austin_boundary -tag _jenkins-ValhallaPipeline-1004'
[seoul_boundary] Processing 2383 polylines
[austin_boundary] Processing 206 routes
[austin_boundary] Angles) Boundary: austin_boundary | Total routes: 206 | Total turns compared: 861 |  Mismatches: 15 | Mismatch pct: 1.74 | Skipped: 916
[austin_boundary] + cleanup_routing_engine
[austin_boundary] + [[ -n '' ]]
[austin_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[austin_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + gzip
[austin_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seoul_boundary] Saving results
[south_korea_boundary] + docker run --rm --network host --name run_comparison__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && python3 run_comparison.py -host localhost -boundary south_korea_boundary -tag _jenkins-ValhallaPipeline-1004'
[seoul_boundary] + docker run --rm --network host --name get_rate__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline:/workspace -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host localhost -boundary seoul_boundary -tag _jenkins-ValhallaPipeline-1004'
[atlanta_boundary] Saving error table with filename: max-error-table-atlanta_boundary.png
[atlanta_boundary] Saving max error chart with filename: max-error-hist-atlanta_boundary.png
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary atlanta_boundary -tag _jenkins-ValhallaPipeline-1004'
[austin_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [austin_boundary] stash
[south_korea_boundary] Processing 1899 polylines
[atlanta_boundary] Guidance) Boundary: atlanta_boundary | Total: 1500 | Steps Failed Count: 81 | Unnamed Start Count: 55 | Unnamed Middle Count: 12 | Unnamed Mid Short Count: 9 | Unnamed Mid Medium Count: 6 | Unnamed Mid Long Count: 1 | Unnamed End Count: 58 | Unnamed Verbal Count: 0
[atlanta_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary atlanta_boundary -tag _jenkins-ValhallaPipeline-1004'
[austin_boundary] Stashed 13 file(s)
[Pipeline] [austin_boundary] sh
[austin_boundary] [ValhallaPipeline] Running shell script
[austin_boundary] + scripts/cleanup.sh
[austin_boundary] ++ realpath scripts/cleanup.sh
[austin_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[austin_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[austin_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[austin_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[austin_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[austin_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[austin_boundary] ++ POSTGIS=mdillon/postgis
[austin_boundary] ++ POSTGIS_LABEL=pg.test.com
[austin_boundary] ++ PG_USER=postgres
[austin_boundary] ++ PG_PASSWD=
[austin_boundary] ++ PG_DB=postgres
[austin_boundary] ++ INSIGHT_SCHEMA=insight
[austin_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[austin_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[austin_boundary] ++ VALHALLA_BRANCH=origin/master
[austin_boundary] ++ NAME_SERVER=12.34.5.67
[austin_boundary] ++ VALHALLA_CONCURRENCY=
[austin_boundary] ++ BASELINE_FILE=./baseline.txt
[austin_boundary] ++ BUILD_FILE=./build.txt
[austin_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[austin_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[austin_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[austin_boundary] ++ MAPDATA_VERSION=NA-170714-148
[austin_boundary] ++ MAPDATA_REGION=NA
[austin_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[austin_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[austin_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[austin_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[austin_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[austin_boundary] +++ sed -e s/-/_/g
[austin_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[austin_boundary] + cleanup_network
[austin_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[austin_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[austin_boundary] + leading='s/^[[:space:]]*//'
[austin_boundary] + trailing='s/[[:space:]]*$//'
[austin_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[austin_boundary] ++ tr -s ' '
[austin_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[austin_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[austin_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[austin_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[austin_boundary] jenkins_ValhallaPipeline_1004_NA
[austin_boundary] + cleanup_routing_engine
[austin_boundary] + [[ -n '' ]]
[austin_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[austin_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + gzip
[austin_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[austin_boundary] + true
[Pipeline] [austin_boundary] }
[Pipeline] [austin_boundary] // withEnv
[Pipeline] [austin_boundary] }
[dallas_boundary] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [austin_boundary] // node
[Pipeline] [dallas_boundary] {
[Pipeline] [austin_boundary] }
[Pipeline] [dallas_boundary] withEnv
[Pipeline] [dallas_boundary] {
[Pipeline] [dallas_boundary] checkout
[dallas_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[dallas_boundary] Fetching changes from the remote Git repository
[dallas_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[dallas_boundary] Pruning obsolete local branches
[dallas_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[dallas_boundary]  > /usr/bin/git --version # timeout=10
[dallas_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[dallas_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[dallas_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[dallas_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[dallas_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[dallas_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[dallas_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[dallas_boundary] Cleaning workspace
[dallas_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[dallas_boundary] Resetting working tree
[dallas_boundary]  > /usr/bin/git reset --hard # timeout=10
[dallas_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [dallas_boundary] unstash
[atlanta_boundary] Processing 278 routes
[atlanta_boundary] Angles) Boundary: atlanta_boundary | Total routes: 278 | Total turns compared: 1206 |  Mismatches: 14 | Mismatch pct: 1.16 | Skipped: 1435
[atlanta_boundary] + cleanup_routing_engine
[atlanta_boundary] + [[ -n '' ]]
[atlanta_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[atlanta_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + gzip
[atlanta_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [dallas_boundary] sh
[dallas_boundary] [ValhallaPipeline] Running shell script
[dallas_boundary] + scripts/setup.sh
[dallas_boundary] ++ realpath scripts/setup.sh
[dallas_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[dallas_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[dallas_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[dallas_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[dallas_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] ++ POSTGIS=mdillon/postgis
[dallas_boundary] ++ POSTGIS_LABEL=pg.test.com
[dallas_boundary] ++ PG_USER=postgres
[dallas_boundary] ++ PG_PASSWD=
[dallas_boundary] ++ PG_DB=postgres
[dallas_boundary] ++ INSIGHT_SCHEMA=insight
[dallas_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[dallas_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[dallas_boundary] ++ VALHALLA_BRANCH=origin/master
[dallas_boundary] ++ NAME_SERVER=12.34.5.67
[dallas_boundary] ++ VALHALLA_CONCURRENCY=
[dallas_boundary] ++ BASELINE_FILE=./baseline.txt
[dallas_boundary] ++ BUILD_FILE=./build.txt
[dallas_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[dallas_boundary] ++ MAPDATA_VERSION=NA-170714-148
[dallas_boundary] ++ MAPDATA_REGION=NA
[dallas_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[dallas_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[dallas_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[dallas_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] +++ sed -e s/-/_/g
[dallas_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[dallas_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[dallas_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[dallas_boundary] + [[ -n true ]]
[dallas_boundary] + sync_aws_mapdata
[dallas_boundary] + which aws
[dallas_boundary] /usr/bin/aws
[dallas_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[dallas_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[seoul_boundary] Routing) Boundary: seoul_boundary | Requested: 2383 | Successful: 2383 | Failed: 0 | Match pct: 93.2
[seoul_boundary] + docker run --rm --network host --name get_charts__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline:/workspace -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host localhost -boundary seoul_boundary -tag _jenkins-ValhallaPipeline-1004'
[south_korea_boundary] Saving results
[south_korea_boundary] + docker run --rm --network host --name get_rate__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline:/workspace -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host localhost -boundary south_korea_boundary -tag _jenkins-ValhallaPipeline-1004'
[atlanta_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [atlanta_boundary] stash
[atlanta_boundary] Stashed 13 file(s)
[Pipeline] [atlanta_boundary] sh
[atlanta_boundary] [ValhallaPipeline] Running shell script
[atlanta_boundary] + scripts/cleanup.sh
[atlanta_boundary] ++ realpath scripts/cleanup.sh
[atlanta_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[atlanta_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[atlanta_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[atlanta_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[atlanta_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[atlanta_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[atlanta_boundary] ++ POSTGIS=mdillon/postgis
[atlanta_boundary] ++ POSTGIS_LABEL=pg.test.com
[atlanta_boundary] ++ PG_USER=postgres
[atlanta_boundary] ++ PG_PASSWD=
[atlanta_boundary] ++ PG_DB=postgres
[atlanta_boundary] ++ INSIGHT_SCHEMA=insight
[atlanta_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[atlanta_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[atlanta_boundary] ++ VALHALLA_BRANCH=origin/master
[atlanta_boundary] ++ NAME_SERVER=12.34.5.67
[atlanta_boundary] ++ VALHALLA_CONCURRENCY=
[atlanta_boundary] ++ BASELINE_FILE=./baseline.txt
[atlanta_boundary] ++ BUILD_FILE=./build.txt
[atlanta_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[atlanta_boundary] ++ MAPDATA_VERSION=NA-170714-148
[atlanta_boundary] ++ MAPDATA_REGION=NA
[atlanta_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[atlanta_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[atlanta_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[atlanta_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[atlanta_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] +++ sed -e s/-/_/g
[atlanta_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] + cleanup_network
[atlanta_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[atlanta_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[atlanta_boundary] + leading='s/^[[:space:]]*//'
[atlanta_boundary] + trailing='s/[[:space:]]*$//'
[atlanta_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[atlanta_boundary] ++ tr -s ' '
[atlanta_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[atlanta_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] jenkins_ValhallaPipeline_1004_NA
[atlanta_boundary] + cleanup_routing_engine
[atlanta_boundary] + [[ -n '' ]]
[atlanta_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[atlanta_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + gzip
[atlanta_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[atlanta_boundary] + true
[Pipeline] [atlanta_boundary] }
[Pipeline] [atlanta_boundary] // withEnv
[houston_boundary] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [atlanta_boundary] }
[Pipeline] [atlanta_boundary] // node
[Pipeline] [houston_boundary] {
[Pipeline] [atlanta_boundary] }
[Pipeline] [houston_boundary] withEnv
[Pipeline] [houston_boundary] {
[Pipeline] [houston_boundary] checkout
[houston_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[houston_boundary] Fetching changes from the remote Git repository
[houston_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[houston_boundary] Pruning obsolete local branches
[houston_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[houston_boundary]  > /usr/bin/git --version # timeout=10
[houston_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[houston_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[houston_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[houston_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[houston_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[houston_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[houston_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[houston_boundary] Cleaning workspace
[houston_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[houston_boundary] Resetting working tree
[houston_boundary]  > /usr/bin/git reset --hard # timeout=10
[houston_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [houston_boundary] unstash
[Pipeline] [houston_boundary] sh
[houston_boundary] [ValhallaPipeline] Running shell script
[houston_boundary] + scripts/setup.sh
[houston_boundary] ++ realpath scripts/setup.sh
[houston_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[houston_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[houston_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[houston_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[houston_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] ++ POSTGIS=mdillon/postgis
[houston_boundary] ++ POSTGIS_LABEL=pg.test.com
[houston_boundary] ++ PG_USER=postgres
[houston_boundary] ++ PG_PASSWD=
[houston_boundary] ++ PG_DB=postgres
[houston_boundary] ++ INSIGHT_SCHEMA=insight
[houston_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[houston_boundary] ++ VALHALLA_BRANCH=origin/master
[houston_boundary] ++ NAME_SERVER=12.34.5.67
[houston_boundary] ++ VALHALLA_CONCURRENCY=
[houston_boundary] ++ BASELINE_FILE=./baseline.txt
[houston_boundary] ++ BUILD_FILE=./build.txt
[houston_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[houston_boundary] ++ MAPDATA_VERSION=NA-170714-148
[houston_boundary] ++ MAPDATA_REGION=NA
[houston_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[houston_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[houston_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[houston_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[houston_boundary] +++ sed -e s/-/_/g
[houston_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[houston_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[houston_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_boundary] + [[ -n true ]]
[houston_boundary] + sync_aws_mapdata
[houston_boundary] + which aws
[houston_boundary] /usr/bin/aws
[houston_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[houston_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[south_korea_boundary] Routing) Boundary: south_korea_boundary | Requested: 1899 | Successful: 1899 | Failed: 0 | Match pct: 92.1
[south_korea_boundary] + docker run --rm --network host --name get_charts__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline:/workspace -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host localhost -boundary south_korea_boundary -tag _jenkins-ValhallaPipeline-1004'
[seoul_boundary] Saving error table with filename: max-error-table-seoul_boundary.png
[seoul_boundary] Saving max error chart with filename: max-error-hist-seoul_boundary.png
[seoul_boundary] + docker run --rm --network host --name get_guidance__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline:/workspace -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host localhost -boundary seoul_boundary -tag _jenkins-ValhallaPipeline-1004'
[dallas_boundary] + create_network
[dallas_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] ++ wc -l
[dallas_boundary] + network_count=1
[dallas_boundary] + test 1 -eq 2
[dallas_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[dallas_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] 85b4f484575cee9f6ded265bbb1a83ac4ad942aba7dbe450d536dfbdad072e77
[dallas_boundary] + launch_postgis
[dallas_boundary] + [[ -n yes ]]
[dallas_boundary] + return 0
[Pipeline] [dallas_boundary] sh
[dallas_boundary] [ValhallaPipeline] Running shell script
[dallas_boundary] + scripts/dump-map-info.sh dallas_boundary
[dallas_boundary] ++ realpath scripts/dump-map-info.sh
[dallas_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[dallas_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[dallas_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[dallas_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[dallas_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] ++ POSTGIS=mdillon/postgis
[dallas_boundary] ++ POSTGIS_LABEL=pg.test.com
[dallas_boundary] ++ PG_USER=postgres
[dallas_boundary] ++ PG_PASSWD=
[dallas_boundary] ++ PG_DB=postgres
[dallas_boundary] ++ INSIGHT_SCHEMA=insight
[dallas_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[dallas_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[dallas_boundary] ++ VALHALLA_BRANCH=origin/master
[dallas_boundary] ++ NAME_SERVER=12.34.5.67
[dallas_boundary] ++ VALHALLA_CONCURRENCY=
[dallas_boundary] ++ BASELINE_FILE=./baseline.txt
[dallas_boundary] ++ BUILD_FILE=./build.txt
[dallas_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[dallas_boundary] ++ MAPDATA_VERSION=NA-170714-148
[dallas_boundary] ++ MAPDATA_REGION=NA
[dallas_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[dallas_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[dallas_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[dallas_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] +++ sed -e s/-/_/g
[dallas_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] + BOUNDARY=dallas_boundary
[dallas_boundary] + dump_map_info dallas_boundary
[dallas_boundary] + BOUNDARY=dallas_boundary
[dallas_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[dallas_boundary] + mapdata_version=mapdata-dallas_boundary.version
[dallas_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-dallas_boundary.version
[Pipeline] [dallas_boundary] sh
[dallas_boundary] [ValhallaPipeline] Running shell script
[dallas_boundary] + scripts/run-route-diagnostics.sh dallas_boundary
[dallas_boundary] + BOUNDARY=dallas_boundary
[dallas_boundary] + FAILURE_THRESHOLD=20
[dallas_boundary] ++ realpath scripts/run-route-diagnostics.sh
[dallas_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[dallas_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[dallas_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[dallas_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[dallas_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] ++ POSTGIS=mdillon/postgis
[dallas_boundary] ++ POSTGIS_LABEL=pg.test.com
[dallas_boundary] ++ PG_USER=postgres
[dallas_boundary] ++ PG_PASSWD=
[dallas_boundary] ++ PG_DB=postgres
[dallas_boundary] ++ INSIGHT_SCHEMA=insight
[dallas_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[dallas_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[dallas_boundary] ++ VALHALLA_BRANCH=origin/master
[dallas_boundary] ++ NAME_SERVER=12.34.5.67
[dallas_boundary] ++ VALHALLA_CONCURRENCY=
[dallas_boundary] ++ BASELINE_FILE=./baseline.txt
[dallas_boundary] ++ BUILD_FILE=./build.txt
[dallas_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[dallas_boundary] ++ MAPDATA_VERSION=NA-170714-148
[dallas_boundary] ++ MAPDATA_REGION=NA
[dallas_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[dallas_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[dallas_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[dallas_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] +++ sed -e s/-/_/g
[dallas_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] + launch_postgis
[dallas_boundary] + [[ -n yes ]]
[dallas_boundary] + return 0
[dallas_boundary] + launch_routing_engine nowait
[dallas_boundary] + [[ -n '' ]]
[dallas_boundary] + wait_for_routing_service=nowait
[dallas_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[dallas_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[dallas_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[dallas_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[dallas_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[dallas_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[dallas_boundary] + local_host=localhost:8002
[dallas_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[dallas_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[dallas_boundary] ++ print_regional_request
[dallas_boundary] ++ case "$MAPDATA_REGION" in
[dallas_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seoul_boundary] Guidance) Boundary: seoul_boundary | Total: 2383 | Steps Failed Count: 64 | Unnamed Start Count: 411 | Unnamed Middle Count: 269 | Unnamed Mid Short Count: 236 | Unnamed Mid Medium Count: 61 | Unnamed Mid Long Count: 59 | Unnamed End Count: 459 | Unnamed Verbal Count: 28
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seoul_boundary] + docker run --rm --network host --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline:/workspace -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py     -host localhost -boundary seoul_boundary -tag _jenkins-ValhallaPipeline-1004'
[dallas_boundary] + grep '"error":'
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[dallas_boundary] e5e7a2b1d51e        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   10 seconds ago      Up 9 seconds        0.0.0.0:34575->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + kill_valhalla
[dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[dallas_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[dallas_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[dallas_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[dallas_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[south_korea_boundary] Saving error table with filename: max-error-table-south_korea_boundary.png
[south_korea_boundary] Saving max error chart with filename: max-error-hist-south_korea_boundary.png
[south_korea_boundary] + docker run --rm --network host --name get_guidance__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline:/workspace -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host localhost -boundary south_korea_boundary -tag _jenkins-ValhallaPipeline-1004'
[dallas_boundary] + launch_routing_engine
[dallas_boundary] + [[ -n '' ]]
[dallas_boundary] + wait_for_routing_service=wait
[dallas_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] ++ grep Status
[dallas_boundary] ++ awk -F: '{print $2}'
[dallas_boundary] ++ tr -d ' ",'
[dallas_boundary] + container_status=running
[dallas_boundary] + [[ running == \e\x\i\t\e\d ]]
[dallas_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[dallas_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[dallas_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[dallas_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + output='{<nil> [] [e5e7a2b1d51e] 85b4f484575cee9f6ded265bbb1a83ac4ad942aba7dbe450d536dfbdad072e77 9e1ad72e12c3e3e410e2c95068a12c6ba022fc559100c3c979d93a86eab3d8a1 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[dallas_boundary] + [[ {<nil> [] [e5e7a2b1d51e] 85b4f484575cee9f6ded265bbb1a83ac4ad942aba7dbe450d536dfbdad072e77 9e1ad72e12c3e3e410e2c95068a12c6ba022fc559100c3c979d93a86eab3d8a1 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[dallas_boundary] + return 0
[dallas_boundary] + local_host=localhost:8002
[dallas_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[dallas_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[dallas_boundary] ++ print_regional_request
[dallas_boundary] ++ case "$MAPDATA_REGION" in
[dallas_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[dallas_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + create_network
[houston_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[houston_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[houston_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[houston_boundary] ++ wc -l
[houston_boundary] + network_count=1
[houston_boundary] + test 1 -eq 2
[houston_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[houston_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[houston_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[houston_boundary] fa2ad44a956350b41f5e4e5966fac138ffe8488b68bf2b4706ac31175b16996a
[houston_boundary] + launch_postgis
[houston_boundary] + [[ -n yes ]]
[houston_boundary] + return 0
[Pipeline] [houston_boundary] sh
[houston_boundary] [ValhallaPipeline] Running shell script
[houston_boundary] + scripts/dump-map-info.sh houston_boundary
[houston_boundary] ++ realpath scripts/dump-map-info.sh
[houston_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[houston_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[houston_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[houston_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[houston_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] ++ POSTGIS=mdillon/postgis
[houston_boundary] ++ POSTGIS_LABEL=pg.test.com
[houston_boundary] ++ PG_USER=postgres
[houston_boundary] ++ PG_PASSWD=
[houston_boundary] ++ PG_DB=postgres
[houston_boundary] ++ INSIGHT_SCHEMA=insight
[houston_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[houston_boundary] ++ VALHALLA_BRANCH=origin/master
[houston_boundary] ++ NAME_SERVER=12.34.5.67
[houston_boundary] ++ VALHALLA_CONCURRENCY=
[houston_boundary] ++ BASELINE_FILE=./baseline.txt
[houston_boundary] ++ BUILD_FILE=./build.txt
[houston_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[houston_boundary] ++ MAPDATA_VERSION=NA-170714-148
[houston_boundary] ++ MAPDATA_REGION=NA
[houston_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[houston_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[houston_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[houston_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[houston_boundary] +++ sed -e s/-/_/g
[houston_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[houston_boundary] + BOUNDARY=houston_boundary
[houston_boundary] + dump_map_info houston_boundary
[houston_boundary] + BOUNDARY=houston_boundary
[houston_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[houston_boundary] + mapdata_version=mapdata-houston_boundary.version
[houston_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-houston_boundary.version
[Pipeline] [houston_boundary] sh
[houston_boundary] [ValhallaPipeline] Running shell script
[houston_boundary] + scripts/run-route-diagnostics.sh houston_boundary
[houston_boundary] + BOUNDARY=houston_boundary
[houston_boundary] + FAILURE_THRESHOLD=20
[houston_boundary] ++ realpath scripts/run-route-diagnostics.sh
[houston_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[houston_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[houston_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[houston_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[houston_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] ++ POSTGIS=mdillon/postgis
[houston_boundary] ++ POSTGIS_LABEL=pg.test.com
[houston_boundary] ++ PG_USER=postgres
[houston_boundary] ++ PG_PASSWD=
[houston_boundary] ++ PG_DB=postgres
[houston_boundary] ++ INSIGHT_SCHEMA=insight
[houston_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[houston_boundary] ++ VALHALLA_BRANCH=origin/master
[houston_boundary] ++ NAME_SERVER=12.34.5.67
[houston_boundary] ++ VALHALLA_CONCURRENCY=
[houston_boundary] ++ BASELINE_FILE=./baseline.txt
[houston_boundary] ++ BUILD_FILE=./build.txt
[houston_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[houston_boundary] ++ MAPDATA_VERSION=NA-170714-148
[houston_boundary] ++ MAPDATA_REGION=NA
[houston_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[houston_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[houston_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[houston_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[houston_boundary] +++ sed -e s/-/_/g
[houston_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[houston_boundary] + launch_postgis
[houston_boundary] + [[ -n yes ]]
[houston_boundary] + return 0
[houston_boundary] + launch_routing_engine nowait
[houston_boundary] + [[ -n '' ]]
[houston_boundary] + wait_for_routing_service=nowait
[houston_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[houston_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[houston_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[houston_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[houston_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[houston_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[houston_boundary] + local_host=localhost:8002
[houston_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[houston_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[houston_boundary] ++ print_regional_request
[houston_boundary] ++ case "$MAPDATA_REGION" in
[houston_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] Guidance) Boundary: south_korea_boundary | Total: 1899 | Steps Failed Count: 70 | Unnamed Start Count: 352 | Unnamed Middle Count: 276 | Unnamed Mid Short Count: 138 | Unnamed Mid Medium Count: 89 | Unnamed Mid Long Count: 96 | Unnamed End Count: 400 | Unnamed Verbal Count: 35
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[south_korea_boundary] + docker run --rm --network host --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 -v /home/ec2-user/jenkins/workspace/ValhallaPipeline:/workspace -v /home/ec2-user/jenkins/workspace/ValhallaPipeline/route_validators:/navigation/route_validators 123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest bash -c 'cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py     -host localhost -boundary south_korea_boundary -tag _jenkins-ValhallaPipeline-1004'
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] Out of 2600 routes, found 2599 trips
[chicago_boundary] Exporting 2600 valhalla routes to insight database
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] + grep '"error":'
[dallas_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[dallas_boundary] e5e7a2b1d51e        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   23 seconds ago      Up 23 seconds       0.0.0.0:34575->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary dallas_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[dallas_boundary] Namespace(bias=1, boundary='dallas_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[dallas_boundary] Retrieving baseline routes
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + grep '"error":'
[houston_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[houston_boundary] 4f975be9f46d        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   10 seconds ago      Up 9 seconds        0.0.0.0:34683->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + kill_valhalla
[houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[houston_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[houston_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[houston_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[houston_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[houston_boundary] + launch_routing_engine
[houston_boundary] + [[ -n '' ]]
[houston_boundary] + wait_for_routing_service=wait
[houston_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] ++ grep Status
[houston_boundary] ++ tr -d ' ",'
[houston_boundary] ++ awk -F: '{print $2}'
[houston_boundary] + container_status=running
[houston_boundary] + [[ running == \e\x\i\t\e\d ]]
[houston_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[south_korea_boundary] Processing 1899 routes
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[dallas_boundary] Retrieving valhalla routes
[dallas_boundary] Valhalla request threadpool size: 10
[houston_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[houston_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[houston_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[houston_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + output='{<nil> [] [4f975be9f46d] fa2ad44a956350b41f5e4e5966fac138ffe8488b68bf2b4706ac31175b16996a fffd0ab21ab0043a319ffb04ab975ddd741a875e005e4fd9749cbb63ee43e541 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[houston_boundary] + [[ {<nil> [] [4f975be9f46d] fa2ad44a956350b41f5e4e5966fac138ffe8488b68bf2b4706ac31175b16996a fffd0ab21ab0043a319ffb04ab975ddd741a875e005e4fd9749cbb63ee43e541 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[houston_boundary] + return 0
[houston_boundary] + local_host=localhost:8002
[houston_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[houston_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[houston_boundary] ++ print_regional_request
[houston_boundary] ++ case "$MAPDATA_REGION" in
[houston_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[houston_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seoul_boundary] Processing 2383 routes
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Unknown Ollehmap turn angle type: 54
[seoul_boundary] Angles) Boundary: seoul_boundary | Total routes: 2383 | Total turns compared: 23201 |  Mismatches: 814 | Mismatch pct: 3.51 | Skipped: 10857
[Pipeline] [seoul_boundary] stash
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary chicago_boundary -tag _jenkins-ValhallaPipeline-1004'
[chicago_boundary] Processing 2599 polylines
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_boundary] + grep '"error":'
[houston_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[houston_boundary] 4f975be9f46d        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   22 seconds ago      Up 21 seconds       0.0.0.0:34683->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary houston_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[houston_boundary] Namespace(bias=1, boundary='houston_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[houston_boundary] Retrieving baseline routes
[houston_boundary] Retrieving valhalla routes
[houston_boundary] Valhalla request threadpool size: 10
[seoul_boundary] Stashed 12 file(s)
[Pipeline] [seoul_boundary] }
[Pipeline] [seoul_boundary] // timeout
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Unknown Ollehmap turn angle type: 54
[south_korea_boundary] Angles) Boundary: south_korea_boundary | Total routes: 1899 | Total turns compared: 20545 |  Mismatches: 1124 | Mismatch pct: 5.47 | Skipped: 9728
[Pipeline] [seoul_boundary] sh
[seoul_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [south_korea_boundary] stash
[seoul_boundary] + scripts/cleanup.sh
[seoul_boundary] ++ realpath scripts/cleanup.sh
[seoul_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[seoul_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[seoul_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[seoul_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[seoul_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seoul_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[seoul_boundary] ++ POSTGIS=mdillon/postgis
[seoul_boundary] ++ POSTGIS_LABEL=localhost
[seoul_boundary] ++ PG_USER=postgres
[seoul_boundary] ++ PG_PASSWD=
[seoul_boundary] ++ PG_DB=postgres
[seoul_boundary] ++ INSIGHT_SCHEMA=insight
[seoul_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[seoul_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[seoul_boundary] ++ VALHALLA_BRANCH=origin/master
[seoul_boundary] ++ NAME_SERVER=12.34.5.67
[seoul_boundary] ++ VALHALLA_CONCURRENCY=
[seoul_boundary] ++ BASELINE_FILE=./baseline.txt
[seoul_boundary] ++ BUILD_FILE=./build.txt
[seoul_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[seoul_boundary] ++ MAPDATA_VERSION=KR-170530-111
[seoul_boundary] ++ MAPDATA_REGION=KR
[seoul_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[seoul_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[seoul_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[seoul_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seoul_boundary] ++ TEST_NETWORK=host
[seoul_boundary] +++ sed -e s/-/_/g
[seoul_boundary] ++ TEST_NETWORK=host
[seoul_boundary] + cleanup_network
[seoul_boundary] + [[ host != \h\o\s\t ]]
[seoul_boundary] + echo 'Network '\''host'\'' cannot be cleaned up.. skipping'
[seoul_boundary] Network 'host' cannot be cleaned up.. skipping
[seoul_boundary] + cleanup_routing_engine
[seoul_boundary] + [[ -n '' ]]
[seoul_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR'
[seoul_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + gzip
[chicago_boundary] Saving results
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary chicago_boundary -tag _jenkins-ValhallaPipeline-1004'
[seoul_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[chicago_boundary] Routing) Boundary: chicago_boundary | Requested: 2600 | Successful: 2599 | Failed: 1 | Match pct: 81.58
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary chicago_boundary -tag _jenkins-ValhallaPipeline-1004'
[south_korea_boundary] Stashed 12 file(s)
[Pipeline] [south_korea_boundary] }
[Pipeline] [south_korea_boundary] // timeout
[seoul_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[seoul_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[Pipeline] [south_korea_boundary] sh
[seoul_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] [ValhallaPipeline] Running shell script
[south_korea_boundary] + scripts/cleanup.sh
[south_korea_boundary] ++ realpath scripts/cleanup.sh
[south_korea_boundary] + SCRIPT=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[south_korea_boundary] ++ dirname /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[south_korea_boundary] + SCRIPT_DIR=/home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts
[south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/scripts/../
[south_korea_boundary] + REPO_ROOT=/home/ec2-user/jenkins/workspace/ValhallaPipeline
[south_korea_boundary] ++ realpath /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] + ENV_FILE=/home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] + [[ -r /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[south_korea_boundary] + source /home/ec2-user/jenkins/workspace/ValhallaPipeline/env/docker.env
[south_korea_boundary] ++ POSTGIS=mdillon/postgis
[south_korea_boundary] ++ POSTGIS_LABEL=localhost
[south_korea_boundary] ++ PG_USER=postgres
[south_korea_boundary] ++ PG_PASSWD=
[south_korea_boundary] ++ PG_DB=postgres
[south_korea_boundary] ++ INSIGHT_SCHEMA=insight
[south_korea_boundary] ++ TM_SERVER=123456789.dkr.ecr.us-west-2.amazonaws.com/tesla-docker:latest
[south_korea_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[south_korea_boundary] ++ VALHALLA_BRANCH=origin/master
[south_korea_boundary] ++ NAME_SERVER=12.34.5.67
[south_korea_boundary] ++ VALHALLA_CONCURRENCY=
[south_korea_boundary] ++ BASELINE_FILE=./baseline.txt
[south_korea_boundary] ++ BUILD_FILE=./build.txt
[south_korea_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ MAPDATA_DIR=/home/ec2-user/jenkins/data
[south_korea_boundary] ++ MAPDATA_VERSION=KR-170530-111
[south_korea_boundary] ++ MAPDATA_REGION=KR
[south_korea_boundary] ++ VALHALLA_VERSION=/home/ec2-user/jenkins/data/KR-170530-111/VERSION
[south_korea_boundary] ++ VALHALLA_DATA=/home/ec2-user/jenkins/data/KR-170530-111/tm/KR
[south_korea_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps-kr/osm/release/valhalla
[south_korea_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[south_korea_boundary] ++ TEST_NETWORK=host
[south_korea_boundary] +++ sed -e s/-/_/g
[south_korea_boundary] ++ TEST_NETWORK=host
[south_korea_boundary] + cleanup_network
[south_korea_boundary] + [[ host != \h\o\s\t ]]
[south_korea_boundary] + echo 'Network '\''host'\'' cannot be cleaned up.. skipping'
[south_korea_boundary] Network 'host' cannot be cleaned up.. skipping
[south_korea_boundary] + cleanup_routing_engine
[south_korea_boundary] + [[ -n '' ]]
[south_korea_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR'
[south_korea_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + gzip
[Pipeline] [seoul_boundary] }
[Pipeline] [seoul_boundary] // withEnv
[Pipeline] [seoul_boundary] }
[Pipeline] [seoul_boundary] // node
[Pipeline] [seoul_boundary] }
[south_korea_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[south_korea_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_KR
[Pipeline] [south_korea_boundary] }
[Pipeline] [south_korea_boundary] // withEnv
[Pipeline] [south_korea_boundary] }
[Pipeline] [south_korea_boundary] // node
[Pipeline] [south_korea_boundary] }
[bay_boundary] Out of 4300 routes, found 4292 trips
[bay_boundary] Exporting 4300 valhalla routes to insight database
[chicago_boundary] Saving error table with filename: max-error-table-chicago_boundary.png
[chicago_boundary] Saving max error chart with filename: max-error-hist-chicago_boundary.png
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary chicago_boundary -tag _jenkins-ValhallaPipeline-1004'
[chicago_boundary] Guidance) Boundary: chicago_boundary | Total: 2599 | Steps Failed Count: 159 | Unnamed Start Count: 38 | Unnamed Middle Count: 62 | Unnamed Mid Short Count: 23 | Unnamed Mid Medium Count: 35 | Unnamed Mid Long Count: 15 | Unnamed End Count: 56 | Unnamed Verbal Count: 17
[chicago_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary chicago_boundary -tag _jenkins-ValhallaPipeline-1004'
[chicago_boundary] Processing 723 routes
[chicago_boundary] Angles) Boundary: chicago_boundary | Total routes: 723 | Total turns compared: 3428 |  Mismatches: 52 | Mismatch pct: 1.52 | Skipped: 3570
[chicago_boundary] + cleanup_routing_engine
[chicago_boundary] + [[ -n '' ]]
[chicago_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[chicago_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + gzip
[chicago_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [chicago_boundary] stash
[chicago_boundary] Stashed 14 file(s)
[Pipeline] [chicago_boundary] sh
[chicago_boundary] [ValhallaPipeline] Running shell script
[chicago_boundary] + scripts/cleanup.sh
[chicago_boundary] ++ realpath scripts/cleanup.sh
[chicago_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[chicago_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[chicago_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[chicago_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[chicago_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[chicago_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[chicago_boundary] ++ POSTGIS=mdillon/postgis
[chicago_boundary] ++ POSTGIS_LABEL=pg.test.com
[chicago_boundary] ++ PG_USER=postgres
[chicago_boundary] ++ PG_PASSWD=
[chicago_boundary] ++ PG_DB=postgres
[chicago_boundary] ++ INSIGHT_SCHEMA=insight
[chicago_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[chicago_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[chicago_boundary] ++ VALHALLA_BRANCH=origin/master
[chicago_boundary] ++ NAME_SERVER=12.34.5.67
[chicago_boundary] ++ VALHALLA_CONCURRENCY=
[chicago_boundary] ++ BASELINE_FILE=./baseline.txt
[chicago_boundary] ++ BUILD_FILE=./build.txt
[chicago_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[chicago_boundary] ++ MAPDATA_VERSION=NA-170714-148
[chicago_boundary] ++ MAPDATA_REGION=NA
[chicago_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[chicago_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[chicago_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[chicago_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[chicago_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] +++ sed -e s/-/_/g
[chicago_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] + cleanup_network
[chicago_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[chicago_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[chicago_boundary] + leading='s/^[[:space:]]*//'
[chicago_boundary] + trailing='s/[[:space:]]*$//'
[chicago_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[chicago_boundary] ++ tr -s ' '
[chicago_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[chicago_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] jenkins_ValhallaPipeline_1004_NA
[chicago_boundary] + cleanup_routing_engine
[chicago_boundary] + [[ -n '' ]]
[chicago_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[chicago_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + gzip
[chicago_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[chicago_boundary] + true
[Pipeline] [chicago_boundary] }
[Pipeline] [chicago_boundary] // withEnv
[la_boundary] Running on docker-tm-03 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [chicago_boundary] }
[Pipeline] [chicago_boundary] // node
[Pipeline] [la_boundary] {
[Pipeline] [chicago_boundary] }
[Pipeline] [la_boundary] withEnv
[Pipeline] [la_boundary] {
[Pipeline] [la_boundary] checkout
[la_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[la_boundary] Fetching changes from the remote Git repository
[la_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[la_boundary] Pruning obsolete local branches
[la_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[la_boundary]  > /usr/bin/git --version # timeout=10
[la_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[la_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[la_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[la_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[la_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[la_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[la_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[la_boundary] Cleaning workspace
[la_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[la_boundary] Resetting working tree
[la_boundary]  > /usr/bin/git reset --hard # timeout=10
[la_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [la_boundary] unstash
[houston_boundary] Out of 1201 routes, found 1200 trips
[houston_boundary] Exporting 1200 valhalla routes to insight database
[Pipeline] [la_boundary] sh
[la_boundary] [ValhallaPipeline] Running shell script
[la_boundary] + scripts/setup.sh
[la_boundary] ++ realpath scripts/setup.sh
[la_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[la_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[la_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[la_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[la_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] ++ POSTGIS=mdillon/postgis
[la_boundary] ++ POSTGIS_LABEL=pg.test.com
[la_boundary] ++ PG_USER=postgres
[la_boundary] ++ PG_PASSWD=
[la_boundary] ++ PG_DB=postgres
[la_boundary] ++ INSIGHT_SCHEMA=insight
[la_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[la_boundary] ++ VALHALLA_BRANCH=origin/master
[la_boundary] ++ NAME_SERVER=12.34.5.67
[la_boundary] ++ VALHALLA_CONCURRENCY=
[la_boundary] ++ BASELINE_FILE=./baseline.txt
[la_boundary] ++ BUILD_FILE=./build.txt
[la_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[la_boundary] ++ MAPDATA_VERSION=NA-170714-148
[la_boundary] ++ MAPDATA_REGION=NA
[la_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[la_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[la_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[la_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[la_boundary] +++ sed -e s/-/_/g
[la_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[la_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[la_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_boundary] + [[ -n true ]]
[la_boundary] + sync_aws_mapdata
[la_boundary] + which aws
[la_boundary] /usr/bin/aws
[la_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[la_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary houston_boundary -tag _jenkins-ValhallaPipeline-1004'
[houston_boundary] Processing 1200 polylines
[houston_boundary] Saving results
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary houston_boundary -tag _jenkins-ValhallaPipeline-1004'
[houston_boundary] Routing) Boundary: houston_boundary | Requested: 1200 | Successful: 1200 | Failed: 0 | Match pct: 67.08
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary houston_boundary -tag _jenkins-ValhallaPipeline-1004'
[la_boundary] + create_network
[la_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[la_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[la_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[la_boundary] ++ wc -l
[la_boundary] + network_count=1
[la_boundary] + test 1 -eq 2
[la_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[la_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[la_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[la_boundary] d31ba68314ea7e8ccd85af45d6183c2ce2a903166ce0ebab2603229d180420a2
[la_boundary] + launch_postgis
[la_boundary] + [[ -n yes ]]
[la_boundary] + return 0
[Pipeline] [la_boundary] sh
[la_boundary] [ValhallaPipeline] Running shell script
[la_boundary] + scripts/dump-map-info.sh la_boundary
[la_boundary] ++ realpath scripts/dump-map-info.sh
[la_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[la_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[la_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[la_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[la_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] ++ POSTGIS=mdillon/postgis
[la_boundary] ++ POSTGIS_LABEL=pg.test.com
[la_boundary] ++ PG_USER=postgres
[la_boundary] ++ PG_PASSWD=
[la_boundary] ++ PG_DB=postgres
[la_boundary] ++ INSIGHT_SCHEMA=insight
[la_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[la_boundary] ++ VALHALLA_BRANCH=origin/master
[la_boundary] ++ NAME_SERVER=12.34.5.67
[la_boundary] ++ VALHALLA_CONCURRENCY=
[la_boundary] ++ BASELINE_FILE=./baseline.txt
[la_boundary] ++ BUILD_FILE=./build.txt
[la_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[la_boundary] ++ MAPDATA_VERSION=NA-170714-148
[la_boundary] ++ MAPDATA_REGION=NA
[la_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[la_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[la_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[la_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[la_boundary] +++ sed -e s/-/_/g
[la_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[la_boundary] + BOUNDARY=la_boundary
[la_boundary] + dump_map_info la_boundary
[la_boundary] + BOUNDARY=la_boundary
[la_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[la_boundary] + mapdata_version=mapdata-la_boundary.version
[la_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-la_boundary.version
[Pipeline] [la_boundary] sh
[la_boundary] [ValhallaPipeline] Running shell script
[la_boundary] + scripts/run-route-diagnostics.sh la_boundary
[la_boundary] + BOUNDARY=la_boundary
[la_boundary] + FAILURE_THRESHOLD=20
[la_boundary] ++ realpath scripts/run-route-diagnostics.sh
[la_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[la_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[la_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[la_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[la_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] ++ POSTGIS=mdillon/postgis
[la_boundary] ++ POSTGIS_LABEL=pg.test.com
[la_boundary] ++ PG_USER=postgres
[la_boundary] ++ PG_PASSWD=
[la_boundary] ++ PG_DB=postgres
[la_boundary] ++ INSIGHT_SCHEMA=insight
[la_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[la_boundary] ++ VALHALLA_BRANCH=origin/master
[la_boundary] ++ NAME_SERVER=12.34.5.67
[la_boundary] ++ VALHALLA_CONCURRENCY=
[la_boundary] ++ BASELINE_FILE=./baseline.txt
[la_boundary] ++ BUILD_FILE=./build.txt
[la_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[la_boundary] ++ MAPDATA_VERSION=NA-170714-148
[la_boundary] ++ MAPDATA_REGION=NA
[la_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[la_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[la_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[la_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[la_boundary] +++ sed -e s/-/_/g
[la_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[la_boundary] + launch_postgis
[la_boundary] + [[ -n yes ]]
[la_boundary] + return 0
[la_boundary] + launch_routing_engine nowait
[la_boundary] + [[ -n '' ]]
[la_boundary] + wait_for_routing_service=nowait
[la_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[la_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[la_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[la_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[la_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[la_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[la_boundary] + local_host=localhost:8002
[la_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[la_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[la_boundary] ++ print_regional_request
[la_boundary] ++ case "$MAPDATA_REGION" in
[la_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + [[ nowait == \n\o\w\a\i\t ]]
[la_boundary] + break
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + grep '"error":'
[la_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[la_boundary] 119d62055507        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   8 seconds ago       Up 8 seconds        0.0.0.0:34892->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + kill_valhalla
[la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[la_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[la_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[la_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[la_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[la_boundary] + launch_routing_engine
[la_boundary] + [[ -n '' ]]
[la_boundary] + wait_for_routing_service=wait
[la_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] ++ grep Status
[la_boundary] ++ awk -F: '{print $2}'
[la_boundary] ++ tr -d ' ",'
[la_boundary] + container_status=running
[la_boundary] + [[ running == \e\x\i\t\e\d ]]
[la_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[la_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[la_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[la_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[la_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + output='{<nil> [] [119d62055507] d31ba68314ea7e8ccd85af45d6183c2ce2a903166ce0ebab2603229d180420a2 db3c9fcaa42c23411598d9f360831784416a2cf77ee4fcc7c9dbc1b191f2af16 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[la_boundary] + [[ {<nil> [] [119d62055507] d31ba68314ea7e8ccd85af45d6183c2ce2a903166ce0ebab2603229d180420a2 db3c9fcaa42c23411598d9f360831784416a2cf77ee4fcc7c9dbc1b191f2af16 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[la_boundary] + return 0
[la_boundary] + local_host=localhost:8002
[la_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[la_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[la_boundary] ++ print_regional_request
[la_boundary] ++ case "$MAPDATA_REGION" in
[la_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[la_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[dallas_boundary] Out of 2400 routes, found 2398 trips
[dallas_boundary] Exporting 2400 valhalla routes to insight database
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + grep '"error":'
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[la_boundary] 119d62055507        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   21 seconds ago      Up 20 seconds       0.0.0.0:34892->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary la_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[la_boundary] Namespace(bias=1, boundary='la_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[la_boundary] Retrieving baseline routes
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary bay_boundary -tag _jenkins-ValhallaPipeline-1004'
[bay_boundary] Processing 4292 polylines
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary dallas_boundary -tag _jenkins-ValhallaPipeline-1004'
[dallas_boundary] Processing 2398 polylines
[la_boundary] Retrieving valhalla routes
[la_boundary] Valhalla request threadpool size: 10
[dallas_boundary] Saving results
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary dallas_boundary -tag _jenkins-ValhallaPipeline-1004'
[dallas_boundary] Routing) Boundary: dallas_boundary | Requested: 2400 | Successful: 2398 | Failed: 2 | Match pct: 72.71
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary dallas_boundary -tag _jenkins-ValhallaPipeline-1004'
[bay_boundary] Saving results
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary bay_boundary -tag _jenkins-ValhallaPipeline-1004'
[bay_boundary] Routing) Boundary: bay_boundary | Requested: 4300 | Successful: 4292 | Failed: 8 | Match pct: 87.33
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary bay_boundary -tag _jenkins-ValhallaPipeline-1004'
[houston_boundary] Saving error table with filename: max-error-table-houston_boundary.png
[houston_boundary] Plotly server error saving max-error-table-houston_boundary.png, retrying #1
[houston_boundary] Plotly server error saving max-error-table-houston_boundary.png, retrying #2
[houston_boundary] Plotly server error saving max-error-table-houston_boundary.png, retrying #3
[houston_boundary] Plotly server error saving max-error-table-houston_boundary.png, retrying #4
[houston_boundary] Plotly server error saving max-error-table-houston_boundary.png, retrying #5
[houston_boundary] Saving max error chart with filename: max-error-hist-houston_boundary.png
[houston_boundary] Plotly server error saving max-error-hist-houston_boundary.png, retrying #1
[houston_boundary] Plotly server error saving max-error-hist-houston_boundary.png, retrying #2
[houston_boundary] Plotly server error saving max-error-hist-houston_boundary.png, retrying #3
[houston_boundary] Plotly server error saving max-error-hist-houston_boundary.png, retrying #4
[houston_boundary] Plotly server error saving max-error-hist-houston_boundary.png, retrying #5
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary houston_boundary -tag _jenkins-ValhallaPipeline-1004'
[houston_boundary] Guidance) Boundary: houston_boundary | Total: 1200 | Steps Failed Count: 60 | Unnamed Start Count: 53 | Unnamed Middle Count: 61 | Unnamed Mid Short Count: 15 | Unnamed Mid Medium Count: 4 | Unnamed Mid Long Count: 44 | Unnamed End Count: 69 | Unnamed Verbal Count: 3
[houston_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary houston_boundary -tag _jenkins-ValhallaPipeline-1004'
[houston_boundary] Processing 296 routes
[houston_boundary] Angles) Boundary: houston_boundary | Total routes: 296 | Total turns compared: 1309 |  Mismatches: 19 | Mismatch pct: 1.45 | Skipped: 1598
[houston_boundary] + cleanup_routing_engine
[houston_boundary] + [[ -n '' ]]
[houston_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[houston_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + gzip
[houston_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [houston_boundary] stash
[houston_boundary] Stashed 11 file(s)
[Pipeline] [houston_boundary] sh
[houston_boundary] [ValhallaPipeline] Running shell script
[houston_boundary] + scripts/cleanup.sh
[houston_boundary] ++ realpath scripts/cleanup.sh
[houston_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[houston_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[houston_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[houston_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[houston_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[houston_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_boundary] ++ POSTGIS=mdillon/postgis
[houston_boundary] ++ POSTGIS_LABEL=pg.test.com
[houston_boundary] ++ PG_USER=postgres
[houston_boundary] ++ PG_PASSWD=
[houston_boundary] ++ PG_DB=postgres
[houston_boundary] ++ INSIGHT_SCHEMA=insight
[houston_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[houston_boundary] ++ VALHALLA_BRANCH=origin/master
[houston_boundary] ++ NAME_SERVER=12.34.5.67
[houston_boundary] ++ VALHALLA_CONCURRENCY=
[houston_boundary] ++ BASELINE_FILE=./baseline.txt
[houston_boundary] ++ BUILD_FILE=./build.txt
[houston_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[houston_boundary] ++ MAPDATA_VERSION=NA-170714-148
[houston_boundary] ++ MAPDATA_REGION=NA
[houston_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[houston_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[houston_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[houston_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[houston_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[houston_boundary] +++ sed -e s/-/_/g
[houston_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[houston_boundary] + cleanup_network
[houston_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[houston_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[houston_boundary] + leading='s/^[[:space:]]*//'
[houston_boundary] + trailing='s/[[:space:]]*$//'
[houston_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[houston_boundary] ++ tr -s ' '
[houston_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[houston_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[houston_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[houston_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[houston_boundary] jenkins_ValhallaPipeline_1004_NA
[houston_boundary] + cleanup_routing_engine
[houston_boundary] + [[ -n '' ]]
[houston_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[houston_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + gzip
[houston_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_boundary] + true
[Pipeline] [houston_boundary] }
[Pipeline] [houston_boundary] // withEnv
[Pipeline] [houston_boundary] }
[san_diego_boundary] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [houston_boundary] // node
[Pipeline] [san_diego_boundary] {
[Pipeline] [houston_boundary] }
[Pipeline] [san_diego_boundary] withEnv
[Pipeline] [san_diego_boundary] {
[Pipeline] [san_diego_boundary] checkout
[san_diego_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[san_diego_boundary] Fetching changes from the remote Git repository
[san_diego_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[san_diego_boundary] Pruning obsolete local branches
[san_diego_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[san_diego_boundary]  > /usr/bin/git --version # timeout=10
[san_diego_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[san_diego_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[san_diego_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[san_diego_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[san_diego_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[san_diego_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[san_diego_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[san_diego_boundary] Cleaning workspace
[san_diego_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[san_diego_boundary] Resetting working tree
[san_diego_boundary]  > /usr/bin/git reset --hard # timeout=10
[san_diego_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [san_diego_boundary] unstash
[Pipeline] [san_diego_boundary] sh
[san_diego_boundary] [ValhallaPipeline] Running shell script
[san_diego_boundary] + scripts/setup.sh
[san_diego_boundary] ++ realpath scripts/setup.sh
[san_diego_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[san_diego_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[san_diego_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[san_diego_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[san_diego_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] ++ POSTGIS=mdillon/postgis
[san_diego_boundary] ++ POSTGIS_LABEL=pg.test.com
[san_diego_boundary] ++ PG_USER=postgres
[san_diego_boundary] ++ PG_PASSWD=
[san_diego_boundary] ++ PG_DB=postgres
[san_diego_boundary] ++ INSIGHT_SCHEMA=insight
[san_diego_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[san_diego_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[san_diego_boundary] ++ VALHALLA_BRANCH=origin/master
[san_diego_boundary] ++ NAME_SERVER=12.34.5.67
[san_diego_boundary] ++ VALHALLA_CONCURRENCY=
[san_diego_boundary] ++ BASELINE_FILE=./baseline.txt
[san_diego_boundary] ++ BUILD_FILE=./build.txt
[san_diego_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[san_diego_boundary] ++ MAPDATA_VERSION=NA-170714-148
[san_diego_boundary] ++ MAPDATA_REGION=NA
[san_diego_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[san_diego_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[san_diego_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[san_diego_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] +++ sed -e s/-/_/g
[san_diego_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[san_diego_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[san_diego_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[san_diego_boundary] + [[ -n true ]]
[san_diego_boundary] + sync_aws_mapdata
[san_diego_boundary] + which aws
[san_diego_boundary] /usr/bin/aws
[san_diego_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[san_diego_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[san_diego_boundary] + create_network
[san_diego_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] ++ wc -l
[san_diego_boundary] + network_count=1
[san_diego_boundary] + test 1 -eq 2
[san_diego_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[san_diego_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] e6f7e0e89955db1cd7bdc9773d1a7d618e8113de509630ee03ac88a414c0b27b
[san_diego_boundary] + launch_postgis
[san_diego_boundary] + [[ -n yes ]]
[san_diego_boundary] + return 0
[Pipeline] [san_diego_boundary] sh
[san_diego_boundary] [ValhallaPipeline] Running shell script
[san_diego_boundary] + scripts/dump-map-info.sh san_diego_boundary
[san_diego_boundary] ++ realpath scripts/dump-map-info.sh
[san_diego_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[san_diego_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[san_diego_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[san_diego_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[san_diego_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] ++ POSTGIS=mdillon/postgis
[san_diego_boundary] ++ POSTGIS_LABEL=pg.test.com
[san_diego_boundary] ++ PG_USER=postgres
[san_diego_boundary] ++ PG_PASSWD=
[san_diego_boundary] ++ PG_DB=postgres
[san_diego_boundary] ++ INSIGHT_SCHEMA=insight
[san_diego_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[san_diego_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[san_diego_boundary] ++ VALHALLA_BRANCH=origin/master
[san_diego_boundary] ++ NAME_SERVER=12.34.5.67
[san_diego_boundary] ++ VALHALLA_CONCURRENCY=
[san_diego_boundary] ++ BASELINE_FILE=./baseline.txt
[san_diego_boundary] ++ BUILD_FILE=./build.txt
[san_diego_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[san_diego_boundary] ++ MAPDATA_VERSION=NA-170714-148
[san_diego_boundary] ++ MAPDATA_REGION=NA
[san_diego_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[san_diego_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[san_diego_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[san_diego_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] +++ sed -e s/-/_/g
[san_diego_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] + BOUNDARY=san_diego_boundary
[san_diego_boundary] + dump_map_info san_diego_boundary
[san_diego_boundary] + BOUNDARY=san_diego_boundary
[san_diego_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[san_diego_boundary] + mapdata_version=mapdata-san_diego_boundary.version
[san_diego_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-san_diego_boundary.version
[Pipeline] [san_diego_boundary] sh
[san_diego_boundary] [ValhallaPipeline] Running shell script
[san_diego_boundary] + scripts/run-route-diagnostics.sh san_diego_boundary
[san_diego_boundary] + BOUNDARY=san_diego_boundary
[san_diego_boundary] + FAILURE_THRESHOLD=20
[san_diego_boundary] ++ realpath scripts/run-route-diagnostics.sh
[san_diego_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[san_diego_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[san_diego_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[san_diego_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[san_diego_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] ++ POSTGIS=mdillon/postgis
[san_diego_boundary] ++ POSTGIS_LABEL=pg.test.com
[san_diego_boundary] ++ PG_USER=postgres
[san_diego_boundary] ++ PG_PASSWD=
[san_diego_boundary] ++ PG_DB=postgres
[san_diego_boundary] ++ INSIGHT_SCHEMA=insight
[san_diego_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[san_diego_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[san_diego_boundary] ++ VALHALLA_BRANCH=origin/master
[san_diego_boundary] ++ NAME_SERVER=12.34.5.67
[san_diego_boundary] ++ VALHALLA_CONCURRENCY=
[san_diego_boundary] ++ BASELINE_FILE=./baseline.txt
[san_diego_boundary] ++ BUILD_FILE=./build.txt
[san_diego_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[san_diego_boundary] ++ MAPDATA_VERSION=NA-170714-148
[san_diego_boundary] ++ MAPDATA_REGION=NA
[san_diego_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[san_diego_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[san_diego_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[san_diego_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] +++ sed -e s/-/_/g
[san_diego_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] + launch_postgis
[san_diego_boundary] + [[ -n yes ]]
[san_diego_boundary] + return 0
[san_diego_boundary] + launch_routing_engine nowait
[san_diego_boundary] + [[ -n '' ]]
[san_diego_boundary] + wait_for_routing_service=nowait
[san_diego_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[san_diego_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[san_diego_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[san_diego_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[san_diego_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[san_diego_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[san_diego_boundary] + local_host=localhost:8002
[san_diego_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[san_diego_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[san_diego_boundary] ++ print_regional_request
[san_diego_boundary] ++ case "$MAPDATA_REGION" in
[san_diego_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + grep '"error":'
[san_diego_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[san_diego_boundary] dab8579c66a2        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   9 seconds ago       Up 8 seconds        0.0.0.0:34684->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + kill_valhalla
[san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[san_diego_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[san_diego_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[san_diego_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[san_diego_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[san_diego_boundary] + launch_routing_engine
[san_diego_boundary] + [[ -n '' ]]
[san_diego_boundary] + wait_for_routing_service=wait
[san_diego_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] ++ grep Status
[san_diego_boundary] ++ awk -F: '{print $2}'
[san_diego_boundary] ++ tr -d ' ",'
[san_diego_boundary] + container_status=running
[san_diego_boundary] + [[ running == \e\x\i\t\e\d ]]
[san_diego_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[san_diego_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[san_diego_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[san_diego_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + output='{<nil> [] [dab8579c66a2] e6f7e0e89955db1cd7bdc9773d1a7d618e8113de509630ee03ac88a414c0b27b ff82692c8589c419515cdbe7dc714bdb99bee7c3c99c710749edf02d988eb164 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[san_diego_boundary] + [[ {<nil> [] [dab8579c66a2] e6f7e0e89955db1cd7bdc9773d1a7d618e8113de509630ee03ac88a414c0b27b ff82692c8589c419515cdbe7dc714bdb99bee7c3c99c710749edf02d988eb164 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[san_diego_boundary] + return 0
[san_diego_boundary] + local_host=localhost:8002
[san_diego_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[san_diego_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[san_diego_boundary] ++ print_regional_request
[san_diego_boundary] ++ case "$MAPDATA_REGION" in
[san_diego_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[san_diego_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[san_diego_boundary] + grep '"error":'
[san_diego_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[san_diego_boundary] dab8579c66a2        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   22 seconds ago      Up 20 seconds       0.0.0.0:34684->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary san_diego_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[san_diego_boundary] Namespace(bias=1, boundary='san_diego_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[san_diego_boundary] Retrieving baseline routes
[dallas_boundary] Saving error table with filename: max-error-table-dallas_boundary.png
[dallas_boundary] Plotly server error saving max-error-table-dallas_boundary.png, retrying #1
[dallas_boundary] Plotly server error saving max-error-table-dallas_boundary.png, retrying #2
[dallas_boundary] Plotly server error saving max-error-table-dallas_boundary.png, retrying #3
[dallas_boundary] Plotly server error saving max-error-table-dallas_boundary.png, retrying #4
[dallas_boundary] Plotly server error saving max-error-table-dallas_boundary.png, retrying #5
[dallas_boundary] Saving max error chart with filename: max-error-hist-dallas_boundary.png
[dallas_boundary] Plotly server error saving max-error-hist-dallas_boundary.png, retrying #1
[dallas_boundary] Plotly server error saving max-error-hist-dallas_boundary.png, retrying #2
[dallas_boundary] Plotly server error saving max-error-hist-dallas_boundary.png, retrying #3
[dallas_boundary] Plotly server error saving max-error-hist-dallas_boundary.png, retrying #4
[dallas_boundary] Plotly server error saving max-error-hist-dallas_boundary.png, retrying #5
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary dallas_boundary -tag _jenkins-ValhallaPipeline-1004'
[dallas_boundary] Guidance) Boundary: dallas_boundary | Total: 2398 | Steps Failed Count: 76 | Unnamed Start Count: 33 | Unnamed Middle Count: 217 | Unnamed Mid Short Count: 19 | Unnamed Mid Medium Count: 33 | Unnamed Mid Long Count: 184 | Unnamed End Count: 67 | Unnamed Verbal Count: 585
[dallas_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary dallas_boundary -tag _jenkins-ValhallaPipeline-1004'
[dallas_boundary] Processing 196 routes
[dallas_boundary] Angles) Boundary: dallas_boundary | Total routes: 196 | Total turns compared: 820 |  Mismatches: 18 | Mismatch pct: 2.2 | Skipped: 1038
[dallas_boundary] + cleanup_routing_engine
[dallas_boundary] + [[ -n '' ]]
[dallas_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[dallas_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + gzip
[dallas_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [dallas_boundary] stash
[san_diego_boundary] Retrieving valhalla routes
[san_diego_boundary] Valhalla request threadpool size: 10
[dallas_boundary] Stashed 12 file(s)
[Pipeline] [dallas_boundary] sh
[dallas_boundary] [ValhallaPipeline] Running shell script
[dallas_boundary] + scripts/cleanup.sh
[dallas_boundary] ++ realpath scripts/cleanup.sh
[dallas_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[dallas_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[dallas_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[dallas_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[dallas_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[dallas_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[dallas_boundary] ++ POSTGIS=mdillon/postgis
[dallas_boundary] ++ POSTGIS_LABEL=pg.test.com
[dallas_boundary] ++ PG_USER=postgres
[dallas_boundary] ++ PG_PASSWD=
[dallas_boundary] ++ PG_DB=postgres
[dallas_boundary] ++ INSIGHT_SCHEMA=insight
[dallas_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[dallas_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[dallas_boundary] ++ VALHALLA_BRANCH=origin/master
[dallas_boundary] ++ NAME_SERVER=12.34.5.67
[dallas_boundary] ++ VALHALLA_CONCURRENCY=
[dallas_boundary] ++ BASELINE_FILE=./baseline.txt
[dallas_boundary] ++ BUILD_FILE=./build.txt
[dallas_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[dallas_boundary] ++ MAPDATA_VERSION=NA-170714-148
[dallas_boundary] ++ MAPDATA_REGION=NA
[dallas_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[dallas_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[dallas_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[dallas_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[dallas_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] +++ sed -e s/-/_/g
[dallas_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] + cleanup_network
[dallas_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[dallas_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[dallas_boundary] + leading='s/^[[:space:]]*//'
[dallas_boundary] + trailing='s/[[:space:]]*$//'
[dallas_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] ++ tr -s ' '
[dallas_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[dallas_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[dallas_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] jenkins_ValhallaPipeline_1004_NA
[dallas_boundary] + cleanup_routing_engine
[dallas_boundary] + [[ -n '' ]]
[dallas_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[dallas_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + gzip
[dallas_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[dallas_boundary] + true
[Pipeline] [dallas_boundary] }
[Pipeline] [dallas_boundary] // withEnv
[Pipeline] [dallas_boundary] }
[seattle_boundary] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [dallas_boundary] // node
[Pipeline] [seattle_boundary] {
[Pipeline] [dallas_boundary] }
[Pipeline] [seattle_boundary] withEnv
[Pipeline] [seattle_boundary] {
[Pipeline] [seattle_boundary] checkout
[seattle_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[seattle_boundary] Fetching changes from the remote Git repository
[seattle_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[seattle_boundary] Pruning obsolete local branches
[seattle_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[seattle_boundary]  > /usr/bin/git --version # timeout=10
[seattle_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[seattle_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[seattle_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[seattle_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[seattle_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[seattle_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[seattle_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[seattle_boundary] Cleaning workspace
[seattle_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[seattle_boundary] Resetting working tree
[seattle_boundary]  > /usr/bin/git reset --hard # timeout=10
[seattle_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [seattle_boundary] unstash
[Pipeline] [seattle_boundary] sh
[seattle_boundary] [ValhallaPipeline] Running shell script
[seattle_boundary] + scripts/setup.sh
[seattle_boundary] ++ realpath scripts/setup.sh
[seattle_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[seattle_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[seattle_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[seattle_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seattle_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] ++ POSTGIS=mdillon/postgis
[seattle_boundary] ++ POSTGIS_LABEL=pg.test.com
[seattle_boundary] ++ PG_USER=postgres
[seattle_boundary] ++ PG_PASSWD=
[seattle_boundary] ++ PG_DB=postgres
[seattle_boundary] ++ INSIGHT_SCHEMA=insight
[seattle_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[seattle_boundary] ++ VALHALLA_BRANCH=origin/master
[seattle_boundary] ++ NAME_SERVER=12.34.5.67
[seattle_boundary] ++ VALHALLA_CONCURRENCY=
[seattle_boundary] ++ BASELINE_FILE=./baseline.txt
[seattle_boundary] ++ BUILD_FILE=./build.txt
[seattle_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[seattle_boundary] ++ MAPDATA_VERSION=NA-170714-148
[seattle_boundary] ++ MAPDATA_REGION=NA
[seattle_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[seattle_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[seattle_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[seattle_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] +++ sed -e s/-/_/g
[seattle_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[seattle_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_boundary] + [[ -n true ]]
[seattle_boundary] + sync_aws_mapdata
[seattle_boundary] + which aws
[seattle_boundary] /usr/bin/aws
[seattle_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[seattle_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[bay_boundary] Saving error table with filename: max-error-table-bay_boundary.png
[bay_boundary] Plotly server error saving max-error-table-bay_boundary.png, retrying #1
[bay_boundary] Plotly server error saving max-error-table-bay_boundary.png, retrying #2
[bay_boundary] Plotly server error saving max-error-table-bay_boundary.png, retrying #3
[bay_boundary] Plotly server error saving max-error-table-bay_boundary.png, retrying #4
[bay_boundary] Plotly server error saving max-error-table-bay_boundary.png, retrying #5
[bay_boundary] Saving max error chart with filename: max-error-hist-bay_boundary.png
[bay_boundary] Plotly server error saving max-error-hist-bay_boundary.png, retrying #1
[bay_boundary] Plotly server error saving max-error-hist-bay_boundary.png, retrying #2
[bay_boundary] Plotly server error saving max-error-hist-bay_boundary.png, retrying #3
[bay_boundary] Plotly server error saving max-error-hist-bay_boundary.png, retrying #4
[bay_boundary] Plotly server error saving max-error-hist-bay_boundary.png, retrying #5
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary bay_boundary -tag _jenkins-ValhallaPipeline-1004'
[bay_boundary] Guidance) Boundary: bay_boundary | Total: 4292 | Steps Failed Count: 343 | Unnamed Start Count: 66 | Unnamed Middle Count: 24 | Unnamed Mid Short Count: 15 | Unnamed Mid Medium Count: 2 | Unnamed Mid Long Count: 8 | Unnamed End Count: 74 | Unnamed Verbal Count: 20
[bay_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary bay_boundary -tag _jenkins-ValhallaPipeline-1004'
[bay_boundary] Processing 1161 routes
[bay_boundary] Angles) Boundary: bay_boundary | Total routes: 1161 | Total turns compared: 6389 |  Mismatches: 95 | Mismatch pct: 1.49 | Skipped: 6742
[bay_boundary] + cleanup_routing_engine
[bay_boundary] + [[ -n '' ]]
[bay_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[bay_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + gzip
[bay_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [bay_boundary] stash
[bay_boundary] Stashed 12 file(s)
[Pipeline] [bay_boundary] sh
[bay_boundary] [ValhallaPipeline] Running shell script
[bay_boundary] + scripts/cleanup.sh
[bay_boundary] ++ realpath scripts/cleanup.sh
[bay_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[bay_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[bay_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[bay_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[bay_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[bay_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[bay_boundary] ++ POSTGIS=mdillon/postgis
[bay_boundary] ++ POSTGIS_LABEL=pg.test.com
[bay_boundary] ++ PG_USER=postgres
[bay_boundary] ++ PG_PASSWD=
[bay_boundary] ++ PG_DB=postgres
[bay_boundary] ++ INSIGHT_SCHEMA=insight
[bay_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[bay_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[bay_boundary] ++ VALHALLA_BRANCH=origin/master
[bay_boundary] ++ NAME_SERVER=12.34.5.67
[bay_boundary] ++ VALHALLA_CONCURRENCY=
[bay_boundary] ++ BASELINE_FILE=./baseline.txt
[bay_boundary] ++ BUILD_FILE=./build.txt
[bay_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[bay_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[bay_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[bay_boundary] ++ MAPDATA_VERSION=NA-170714-148
[bay_boundary] ++ MAPDATA_REGION=NA
[bay_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[bay_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[bay_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[bay_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[bay_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[bay_boundary] +++ sed -e s/-/_/g
[bay_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[bay_boundary] + cleanup_network
[bay_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[bay_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[bay_boundary] + leading='s/^[[:space:]]*//'
[bay_boundary] + trailing='s/[[:space:]]*$//'
[bay_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[bay_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[bay_boundary] ++ tr -s ' '
[bay_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[bay_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[bay_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[bay_boundary] jenkins_ValhallaPipeline_1004_NA
[bay_boundary] + cleanup_routing_engine
[bay_boundary] + [[ -n '' ]]
[bay_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[bay_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + gzip
[bay_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bay_boundary] + true
[Pipeline] [bay_boundary] }
[Pipeline] [bay_boundary] // withEnv
[Pipeline] [bay_boundary] }
[taiwan_boundary] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [bay_boundary] // node
[Pipeline] [taiwan_boundary] {
[Pipeline] [bay_boundary] }
[Pipeline] [taiwan_boundary] withEnv
[Pipeline] [taiwan_boundary] {
[Pipeline] [taiwan_boundary] checkout
[taiwan_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[taiwan_boundary] Fetching changes from the remote Git repository
[taiwan_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[taiwan_boundary] Pruning obsolete local branches
[taiwan_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[taiwan_boundary]  > /usr/bin/git --version # timeout=10
[taiwan_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[taiwan_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[taiwan_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[taiwan_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[taiwan_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[taiwan_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[taiwan_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[taiwan_boundary] Cleaning workspace
[taiwan_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[taiwan_boundary] Resetting working tree
[taiwan_boundary]  > /usr/bin/git reset --hard # timeout=10
[taiwan_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [taiwan_boundary] unstash
[seattle_boundary] + create_network
[seattle_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] ++ wc -l
[seattle_boundary] + network_count=1
[seattle_boundary] + test 1 -eq 2
[seattle_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[seattle_boundary] Creating network jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] + docker network create jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] ab6e2b5033af3e173669185b15b21fecfd3f7929cb338986aaaac7cd75a0a500
[seattle_boundary] + launch_postgis
[seattle_boundary] + [[ -n yes ]]
[seattle_boundary] + return 0
[Pipeline] [seattle_boundary] sh
[seattle_boundary] [ValhallaPipeline] Running shell script
[seattle_boundary] + scripts/dump-map-info.sh seattle_boundary
[seattle_boundary] ++ realpath scripts/dump-map-info.sh
[seattle_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[seattle_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[seattle_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[seattle_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seattle_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] ++ POSTGIS=mdillon/postgis
[seattle_boundary] ++ POSTGIS_LABEL=pg.test.com
[seattle_boundary] ++ PG_USER=postgres
[seattle_boundary] ++ PG_PASSWD=
[seattle_boundary] ++ PG_DB=postgres
[seattle_boundary] ++ INSIGHT_SCHEMA=insight
[seattle_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[seattle_boundary] ++ VALHALLA_BRANCH=origin/master
[seattle_boundary] ++ NAME_SERVER=12.34.5.67
[seattle_boundary] ++ VALHALLA_CONCURRENCY=
[seattle_boundary] ++ BASELINE_FILE=./baseline.txt
[seattle_boundary] ++ BUILD_FILE=./build.txt
[seattle_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[seattle_boundary] ++ MAPDATA_VERSION=NA-170714-148
[seattle_boundary] ++ MAPDATA_REGION=NA
[seattle_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[seattle_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[seattle_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[seattle_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] +++ sed -e s/-/_/g
[seattle_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] + BOUNDARY=seattle_boundary
[seattle_boundary] + dump_map_info seattle_boundary
[seattle_boundary] + BOUNDARY=seattle_boundary
[seattle_boundary] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[seattle_boundary] + mapdata_version=mapdata-seattle_boundary.version
[seattle_boundary] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-seattle_boundary.version
[Pipeline] [seattle_boundary] sh
[seattle_boundary] [ValhallaPipeline] Running shell script
[seattle_boundary] + scripts/run-route-diagnostics.sh seattle_boundary
[seattle_boundary] + BOUNDARY=seattle_boundary
[seattle_boundary] + FAILURE_THRESHOLD=20
[seattle_boundary] ++ realpath scripts/run-route-diagnostics.sh
[seattle_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[seattle_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[seattle_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[seattle_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seattle_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] ++ POSTGIS=mdillon/postgis
[seattle_boundary] ++ POSTGIS_LABEL=pg.test.com
[seattle_boundary] ++ PG_USER=postgres
[seattle_boundary] ++ PG_PASSWD=
[seattle_boundary] ++ PG_DB=postgres
[seattle_boundary] ++ INSIGHT_SCHEMA=insight
[seattle_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[seattle_boundary] ++ VALHALLA_BRANCH=origin/master
[seattle_boundary] ++ NAME_SERVER=12.34.5.67
[seattle_boundary] ++ VALHALLA_CONCURRENCY=
[seattle_boundary] ++ BASELINE_FILE=./baseline.txt
[seattle_boundary] ++ BUILD_FILE=./build.txt
[seattle_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[seattle_boundary] ++ MAPDATA_VERSION=NA-170714-148
[seattle_boundary] ++ MAPDATA_REGION=NA
[seattle_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[seattle_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[seattle_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[seattle_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] +++ sed -e s/-/_/g
[seattle_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] + launch_postgis
[seattle_boundary] + [[ -n yes ]]
[seattle_boundary] + return 0
[seattle_boundary] + launch_routing_engine nowait
[seattle_boundary] + [[ -n '' ]]
[seattle_boundary] + wait_for_routing_service=nowait
[seattle_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[seattle_boundary] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[seattle_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[seattle_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[seattle_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[Pipeline] [taiwan_boundary] sh
[seattle_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[seattle_boundary] + local_host=localhost:8002
[seattle_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[seattle_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[seattle_boundary] ++ print_regional_request
[seattle_boundary] ++ case "$MAPDATA_REGION" in
[seattle_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] [ValhallaPipeline] Running shell script
[taiwan_boundary] + scripts/setup.sh
[taiwan_boundary] ++ realpath scripts/setup.sh
[taiwan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[taiwan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[taiwan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taiwan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taiwan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] ++ POSTGIS=mdillon/postgis
[taiwan_boundary] ++ POSTGIS_LABEL=pg.test.com
[taiwan_boundary] ++ PG_USER=postgres
[taiwan_boundary] ++ PG_PASSWD=
[taiwan_boundary] ++ PG_DB=postgres
[taiwan_boundary] ++ INSIGHT_SCHEMA=insight
[taiwan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taiwan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[taiwan_boundary] ++ VALHALLA_BRANCH=origin/master
[taiwan_boundary] ++ NAME_SERVER=12.34.5.67
[taiwan_boundary] ++ VALHALLA_CONCURRENCY=
[taiwan_boundary] ++ BASELINE_FILE=./baseline.txt
[taiwan_boundary] ++ BUILD_FILE=./build.txt
[taiwan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taiwan_boundary] ++ MAPDATA_VERSION=TW-170616-136
[taiwan_boundary] ++ MAPDATA_REGION=TW
[taiwan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taiwan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taiwan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taiwan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] +++ sed -e s/-/_/g
[taiwan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[taiwan_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[taiwan_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[taiwan_boundary] + [[ -n true ]]
[taiwan_boundary] + sync_aws_mapdata
[taiwan_boundary] + which aws
[taiwan_boundary] /usr/bin/aws
[taiwan_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[taiwan_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/TW-170616-136/ /jenkins/autopilot-maps/TW-170616-136
[taiwan_boundary] + create_network
[taiwan_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] + network=jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] ++ wc -l
[taiwan_boundary] + network_count=1
[taiwan_boundary] + test 1 -eq 2
[taiwan_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_TW'
[taiwan_boundary] Creating network jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] + docker network create jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] ae9d8c7da8868c33035d97c7b0901c17368c9027c220d8ed06e38564e32e9c6e
[taiwan_boundary] + launch_postgis
[taiwan_boundary] + [[ -n yes ]]
[taiwan_boundary] + return 0
[Pipeline] [taiwan_boundary] sh
[taiwan_boundary] [ValhallaPipeline] Running shell script
[taiwan_boundary] + scripts/dump-map-info.sh taiwan_boundary
[taiwan_boundary] ++ realpath scripts/dump-map-info.sh
[taiwan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[taiwan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[taiwan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taiwan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taiwan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] ++ POSTGIS=mdillon/postgis
[taiwan_boundary] ++ POSTGIS_LABEL=pg.test.com
[taiwan_boundary] ++ PG_USER=postgres
[taiwan_boundary] ++ PG_PASSWD=
[taiwan_boundary] ++ PG_DB=postgres
[taiwan_boundary] ++ INSIGHT_SCHEMA=insight
[taiwan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taiwan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[taiwan_boundary] ++ VALHALLA_BRANCH=origin/master
[taiwan_boundary] ++ NAME_SERVER=12.34.5.67
[taiwan_boundary] ++ VALHALLA_CONCURRENCY=
[taiwan_boundary] ++ BASELINE_FILE=./baseline.txt
[taiwan_boundary] ++ BUILD_FILE=./build.txt
[taiwan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taiwan_boundary] ++ MAPDATA_VERSION=TW-170616-136
[taiwan_boundary] ++ MAPDATA_REGION=TW
[taiwan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taiwan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taiwan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taiwan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] +++ sed -e s/-/_/g
[taiwan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] + BOUNDARY=taiwan_boundary
[taiwan_boundary] + dump_map_info taiwan_boundary
[taiwan_boundary] + BOUNDARY=taiwan_boundary
[taiwan_boundary] + [[ -r /jenkins/autopilot-maps/TW-170616-136/VERSION ]]
[taiwan_boundary] + mapdata_version=mapdata-taiwan_boundary.version
[taiwan_boundary] + cp /jenkins/autopilot-maps/TW-170616-136/VERSION mapdata-taiwan_boundary.version
[Pipeline] [taiwan_boundary] sh
[taiwan_boundary] [ValhallaPipeline] Running shell script
[taiwan_boundary] + scripts/run-route-diagnostics.sh taiwan_boundary
[taiwan_boundary] + BOUNDARY=taiwan_boundary
[taiwan_boundary] + FAILURE_THRESHOLD=20
[taiwan_boundary] ++ realpath scripts/run-route-diagnostics.sh
[taiwan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[taiwan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[taiwan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taiwan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taiwan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] ++ POSTGIS=mdillon/postgis
[taiwan_boundary] ++ POSTGIS_LABEL=pg.test.com
[taiwan_boundary] ++ PG_USER=postgres
[taiwan_boundary] ++ PG_PASSWD=
[taiwan_boundary] ++ PG_DB=postgres
[taiwan_boundary] ++ INSIGHT_SCHEMA=insight
[taiwan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taiwan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[taiwan_boundary] ++ VALHALLA_BRANCH=origin/master
[taiwan_boundary] ++ NAME_SERVER=12.34.5.67
[taiwan_boundary] ++ VALHALLA_CONCURRENCY=
[taiwan_boundary] ++ BASELINE_FILE=./baseline.txt
[taiwan_boundary] ++ BUILD_FILE=./build.txt
[taiwan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taiwan_boundary] ++ MAPDATA_VERSION=TW-170616-136
[taiwan_boundary] ++ MAPDATA_REGION=TW
[taiwan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taiwan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taiwan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taiwan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] +++ sed -e s/-/_/g
[taiwan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] + launch_postgis
[taiwan_boundary] + [[ -n yes ]]
[taiwan_boundary] + return 0
[taiwan_boundary] + launch_routing_engine nowait
[taiwan_boundary] + [[ -n '' ]]
[taiwan_boundary] + wait_for_routing_service=nowait
[taiwan_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P'
[taiwan_boundary] + [[ -d /jenkins/autopilot-maps/TW-170616-136/tm/TW ]]
[taiwan_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[taiwan_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[taiwan_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[taiwan_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'ln -sf /mapdata/TW-170616-136/tm/TW /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[taiwan_boundary] + local_host=localhost:8002
[taiwan_boundary] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[taiwan_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[taiwan_boundary] ++ print_regional_request
[taiwan_boundary] ++ case "$MAPDATA_REGION" in
[taiwan_boundary] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + [[ nowait == \n\o\w\a\i\t ]]
[taiwan_boundary] + break
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + grep '"error":'
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[taiwan_boundary] 8a8be8af0a13        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   3 seconds ago       Up 3 seconds        0.0.0.0:35246->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + kill_valhalla
[taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pkill -f valhalla_route_service
[taiwan_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[taiwan_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[taiwan_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[taiwan_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:/navigation/valhalla-install.tgz
[taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[taiwan_boundary] + launch_routing_engine
[taiwan_boundary] + [[ -n '' ]]
[taiwan_boundary] + wait_for_routing_service=wait
[taiwan_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] ++ grep Status
[taiwan_boundary] ++ awk -F: '{print $2}'
[taiwan_boundary] ++ tr -d ' ",'
[taiwan_boundary] + container_status=running
[taiwan_boundary] + [[ running == \e\x\i\t\e\d ]]
[taiwan_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pgrep -f valhalla_route_service
[taiwan_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[taiwan_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_TW ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + network=jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}'
[taiwan_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + output='{<nil> [] [8a8be8af0a13] ae9d8c7da8868c33035d97c7b0901c17368c9027c220d8ed06e38564e32e9c6e cbabb8bf58c588a417747b167597922411edcc64f653ced9eeaef71d15ab8da8 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[taiwan_boundary] + [[ {<nil> [] [8a8be8af0a13] ae9d8c7da8868c33035d97c7b0901c17368c9027c220d8ed06e38564e32e9c6e cbabb8bf58c588a417747b167597922411edcc64f653ced9eeaef71d15ab8da8 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[taiwan_boundary] + return 0
[taiwan_boundary] + local_host=localhost:8002
[taiwan_boundary] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[taiwan_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[taiwan_boundary] ++ print_regional_request
[taiwan_boundary] ++ case "$MAPDATA_REGION" in
[taiwan_boundary] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[taiwan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + grep '"error":'
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[seattle_boundary] ccddd9b849d6        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 10 seconds       0.0.0.0:34576->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + kill_valhalla
[seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[seattle_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[seattle_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[seattle_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[seattle_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] + grep '"error":'
[seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[taiwan_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[taiwan_boundary] 8a8be8af0a13        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   9 seconds ago       Up 8 seconds        0.0.0.0:35246->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taiwan_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[taiwan_boundary] Namespace(bias=1, boundary='taiwan_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[taiwan_boundary] Retrieving baseline routes
[seattle_boundary] + launch_routing_engine
[seattle_boundary] + [[ -n '' ]]
[seattle_boundary] + wait_for_routing_service=wait
[seattle_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] ++ grep Status
[seattle_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] ++ tr -d ' ",'
[seattle_boundary] ++ awk -F: '{print $2}'
[seattle_boundary] + container_status=running
[seattle_boundary] + [[ running == \e\x\i\t\e\d ]]
[seattle_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[seattle_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[seattle_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + network=jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[seattle_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + output='{<nil> [] [ccddd9b849d6] ab6e2b5033af3e173669185b15b21fecfd3f7929cb338986aaaac7cd75a0a500 9cb142fe66e6efece4873db3676217cb0e17441a5a789163f7bbc1a738850fd9 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[seattle_boundary] + [[ {<nil> [] [ccddd9b849d6] ab6e2b5033af3e173669185b15b21fecfd3f7929cb338986aaaac7cd75a0a500 9cb142fe66e6efece4873db3676217cb0e17441a5a789163f7bbc1a738850fd9 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[seattle_boundary] + return 0
[seattle_boundary] + local_host=localhost:8002
[seattle_boundary] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[seattle_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[seattle_boundary] ++ print_regional_request
[seattle_boundary] ++ case "$MAPDATA_REGION" in
[seattle_boundary] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[seattle_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + grep '"error":'
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[seattle_boundary] ccddd9b849d6        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   24 seconds ago      Up 23 seconds       0.0.0.0:34576->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary seattle_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[seattle_boundary] Namespace(bias=1, boundary='seattle_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[seattle_boundary] Retrieving baseline routes
[taiwan_boundary] Retrieving valhalla routes
[taiwan_boundary] Valhalla request threadpool size: 10
[seattle_boundary] Retrieving valhalla routes
[seattle_boundary] Valhalla request threadpool size: 10
[san_diego_boundary] Out of 1400 routes, found 1398 trips
[san_diego_boundary] Exporting 1400 valhalla routes to insight database
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary san_diego_boundary -tag _jenkins-ValhallaPipeline-1004'
[san_diego_boundary] Processing 1398 polylines
[san_diego_boundary] Saving results
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary san_diego_boundary -tag _jenkins-ValhallaPipeline-1004'
[san_diego_boundary] Routing) Boundary: san_diego_boundary | Requested: 1400 | Successful: 1398 | Failed: 2 | Match pct: 86.07
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary san_diego_boundary -tag _jenkins-ValhallaPipeline-1004'
[la_boundary] Out of 5504 routes, found 5496 trips
[la_boundary] Exporting 5502 valhalla routes to insight database
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary la_boundary -tag _jenkins-ValhallaPipeline-1004'
[la_boundary] Processing 5496 polylines
[seattle_boundary] Out of 1901 routes, found 1896 trips
[seattle_boundary] Exporting 1900 valhalla routes to insight database
[la_boundary] Saving results
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary la_boundary -tag _jenkins-ValhallaPipeline-1004'
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary seattle_boundary -tag _jenkins-ValhallaPipeline-1004'
[seattle_boundary] Processing 1896 polylines
[la_boundary] Routing) Boundary: la_boundary | Requested: 5502 | Successful: 5496 | Failed: 6 | Match pct: 84.86
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary la_boundary -tag _jenkins-ValhallaPipeline-1004'
[seattle_boundary] Saving results
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary seattle_boundary -tag _jenkins-ValhallaPipeline-1004'
[seattle_boundary] Routing) Boundary: seattle_boundary | Requested: 1900 | Successful: 1896 | Failed: 4 | Match pct: 79.37
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary seattle_boundary -tag _jenkins-ValhallaPipeline-1004'
[san_diego_boundary] Saving error table with filename: max-error-table-san_diego_boundary.png
[san_diego_boundary] Plotly server error saving max-error-table-san_diego_boundary.png, retrying #1
[san_diego_boundary] Plotly server error saving max-error-table-san_diego_boundary.png, retrying #2
[san_diego_boundary] Plotly server error saving max-error-table-san_diego_boundary.png, retrying #3
[san_diego_boundary] Plotly server error saving max-error-table-san_diego_boundary.png, retrying #4
[san_diego_boundary] Plotly server error saving max-error-table-san_diego_boundary.png, retrying #5
[san_diego_boundary] Saving max error chart with filename: max-error-hist-san_diego_boundary.png
[san_diego_boundary] Plotly server error saving max-error-hist-san_diego_boundary.png, retrying #1
[san_diego_boundary] Plotly server error saving max-error-hist-san_diego_boundary.png, retrying #2
[san_diego_boundary] Plotly server error saving max-error-hist-san_diego_boundary.png, retrying #3
[san_diego_boundary] Plotly server error saving max-error-hist-san_diego_boundary.png, retrying #4
[san_diego_boundary] Plotly server error saving max-error-hist-san_diego_boundary.png, retrying #5
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary san_diego_boundary -tag _jenkins-ValhallaPipeline-1004'
[san_diego_boundary] Guidance) Boundary: san_diego_boundary | Total: 1398 | Steps Failed Count: 157 | Unnamed Start Count: 22 | Unnamed Middle Count: 11 | Unnamed Mid Short Count: 9 | Unnamed Mid Medium Count: 1 | Unnamed Mid Long Count: 2 | Unnamed End Count: 33 | Unnamed Verbal Count: 0
[san_diego_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary san_diego_boundary -tag _jenkins-ValhallaPipeline-1004'
[san_diego_boundary] Processing 199 routes
[san_diego_boundary] Angles) Boundary: san_diego_boundary | Total routes: 199 | Total turns compared: 1099 |  Mismatches: 11 | Mismatch pct: 1.0 | Skipped: 1056
[san_diego_boundary] + cleanup_routing_engine
[san_diego_boundary] + [[ -n '' ]]
[san_diego_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[san_diego_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + gzip
[san_diego_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [san_diego_boundary] stash
[san_diego_boundary] Stashed 12 file(s)
[Pipeline] [san_diego_boundary] sh
[san_diego_boundary] [ValhallaPipeline] Running shell script
[san_diego_boundary] + scripts/cleanup.sh
[san_diego_boundary] ++ realpath scripts/cleanup.sh
[san_diego_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[san_diego_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[san_diego_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[san_diego_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[san_diego_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[san_diego_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[san_diego_boundary] ++ POSTGIS=mdillon/postgis
[san_diego_boundary] ++ POSTGIS_LABEL=pg.test.com
[san_diego_boundary] ++ PG_USER=postgres
[san_diego_boundary] ++ PG_PASSWD=
[san_diego_boundary] ++ PG_DB=postgres
[san_diego_boundary] ++ INSIGHT_SCHEMA=insight
[san_diego_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[san_diego_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[san_diego_boundary] ++ VALHALLA_BRANCH=origin/master
[san_diego_boundary] ++ NAME_SERVER=12.34.5.67
[san_diego_boundary] ++ VALHALLA_CONCURRENCY=
[san_diego_boundary] ++ BASELINE_FILE=./baseline.txt
[san_diego_boundary] ++ BUILD_FILE=./build.txt
[san_diego_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[san_diego_boundary] ++ MAPDATA_VERSION=NA-170714-148
[san_diego_boundary] ++ MAPDATA_REGION=NA
[san_diego_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[san_diego_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[san_diego_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[san_diego_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[san_diego_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] +++ sed -e s/-/_/g
[san_diego_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] + cleanup_network
[san_diego_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[san_diego_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[san_diego_boundary] + leading='s/^[[:space:]]*//'
[san_diego_boundary] + trailing='s/[[:space:]]*$//'
[san_diego_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[san_diego_boundary] ++ tr -s ' '
[san_diego_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[san_diego_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] jenkins_ValhallaPipeline_1004_NA
[san_diego_boundary] + cleanup_routing_engine
[san_diego_boundary] + [[ -n '' ]]
[san_diego_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[san_diego_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + gzip
[san_diego_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[san_diego_boundary] + true
[Pipeline] [san_diego_boundary] }
[Pipeline] [san_diego_boundary] // withEnv
[Pipeline] [san_diego_boundary] }
[taipei_boundary] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [san_diego_boundary] // node
[Pipeline] [taipei_boundary] {
[Pipeline] [san_diego_boundary] }
[Pipeline] [taipei_boundary] withEnv
[Pipeline] [taipei_boundary] {
[Pipeline] [taipei_boundary] checkout
[taipei_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[taipei_boundary] Fetching changes from the remote Git repository
[taipei_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[taipei_boundary] Pruning obsolete local branches
[taipei_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[taipei_boundary]  > /usr/bin/git --version # timeout=10
[taipei_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[taipei_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[taipei_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[taipei_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[taipei_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[taipei_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[taipei_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[taipei_boundary] Cleaning workspace
[taipei_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[taipei_boundary] Resetting working tree
[taipei_boundary]  > /usr/bin/git reset --hard # timeout=10
[taipei_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [taipei_boundary] unstash
[Pipeline] [taipei_boundary] sh
[taipei_boundary] [ValhallaPipeline] Running shell script
[taipei_boundary] + scripts/setup.sh
[taipei_boundary] ++ realpath scripts/setup.sh
[taipei_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[taipei_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[taipei_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taipei_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taipei_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] ++ POSTGIS=mdillon/postgis
[taipei_boundary] ++ POSTGIS_LABEL=pg.test.com
[taipei_boundary] ++ PG_USER=postgres
[taipei_boundary] ++ PG_PASSWD=
[taipei_boundary] ++ PG_DB=postgres
[taipei_boundary] ++ INSIGHT_SCHEMA=insight
[taipei_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[taipei_boundary] ++ VALHALLA_BRANCH=origin/master
[taipei_boundary] ++ NAME_SERVER=12.34.5.67
[taipei_boundary] ++ VALHALLA_CONCURRENCY=
[taipei_boundary] ++ BASELINE_FILE=./baseline.txt
[taipei_boundary] ++ BUILD_FILE=./build.txt
[taipei_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taipei_boundary] ++ MAPDATA_VERSION=TW-170616-136
[taipei_boundary] ++ MAPDATA_REGION=TW
[taipei_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taipei_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taipei_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taipei_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] +++ sed -e s/-/_/g
[taipei_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[taipei_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_boundary] + [[ -n true ]]
[taipei_boundary] + sync_aws_mapdata
[taipei_boundary] + which aws
[taipei_boundary] /usr/bin/aws
[taipei_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[taipei_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/TW-170616-136/ /jenkins/autopilot-maps/TW-170616-136
[taipei_boundary] + create_network
[taipei_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] + network=jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] ++ wc -l
[taipei_boundary] + network_count=1
[taipei_boundary] + test 1 -eq 2
[taipei_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_TW'
[taipei_boundary] Creating network jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] + docker network create jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] 016a62a3b6a7cc4ea92b621843559004ffb78c5999856880a5fca18f613d8023
[taipei_boundary] + launch_postgis
[taipei_boundary] + [[ -n yes ]]
[taipei_boundary] + return 0
[Pipeline] [taipei_boundary] sh
[taipei_boundary] [ValhallaPipeline] Running shell script
[taipei_boundary] + scripts/dump-map-info.sh taipei_boundary
[taipei_boundary] ++ realpath scripts/dump-map-info.sh
[taipei_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[taipei_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[taipei_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taipei_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taipei_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] ++ POSTGIS=mdillon/postgis
[taipei_boundary] ++ POSTGIS_LABEL=pg.test.com
[taipei_boundary] ++ PG_USER=postgres
[taipei_boundary] ++ PG_PASSWD=
[taipei_boundary] ++ PG_DB=postgres
[taipei_boundary] ++ INSIGHT_SCHEMA=insight
[taipei_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[taipei_boundary] ++ VALHALLA_BRANCH=origin/master
[taipei_boundary] ++ NAME_SERVER=12.34.5.67
[taipei_boundary] ++ VALHALLA_CONCURRENCY=
[taipei_boundary] ++ BASELINE_FILE=./baseline.txt
[taipei_boundary] ++ BUILD_FILE=./build.txt
[taipei_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taipei_boundary] ++ MAPDATA_VERSION=TW-170616-136
[taipei_boundary] ++ MAPDATA_REGION=TW
[taipei_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taipei_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taipei_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taipei_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] +++ sed -e s/-/_/g
[taipei_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] + BOUNDARY=taipei_boundary
[taipei_boundary] + dump_map_info taipei_boundary
[taipei_boundary] + BOUNDARY=taipei_boundary
[taipei_boundary] + [[ -r /jenkins/autopilot-maps/TW-170616-136/VERSION ]]
[taipei_boundary] + mapdata_version=mapdata-taipei_boundary.version
[taipei_boundary] + cp /jenkins/autopilot-maps/TW-170616-136/VERSION mapdata-taipei_boundary.version
[Pipeline] [taipei_boundary] sh
[taipei_boundary] [ValhallaPipeline] Running shell script
[taipei_boundary] + scripts/run-route-diagnostics.sh taipei_boundary
[taipei_boundary] + BOUNDARY=taipei_boundary
[taipei_boundary] + FAILURE_THRESHOLD=20
[taipei_boundary] ++ realpath scripts/run-route-diagnostics.sh
[taipei_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[taipei_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[taipei_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taipei_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taipei_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] ++ POSTGIS=mdillon/postgis
[taipei_boundary] ++ POSTGIS_LABEL=pg.test.com
[taipei_boundary] ++ PG_USER=postgres
[taipei_boundary] ++ PG_PASSWD=
[taipei_boundary] ++ PG_DB=postgres
[taipei_boundary] ++ INSIGHT_SCHEMA=insight
[taipei_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[taipei_boundary] ++ VALHALLA_BRANCH=origin/master
[taipei_boundary] ++ NAME_SERVER=12.34.5.67
[taipei_boundary] ++ VALHALLA_CONCURRENCY=
[taipei_boundary] ++ BASELINE_FILE=./baseline.txt
[taipei_boundary] ++ BUILD_FILE=./build.txt
[taipei_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taipei_boundary] ++ MAPDATA_VERSION=TW-170616-136
[taipei_boundary] ++ MAPDATA_REGION=TW
[taipei_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taipei_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taipei_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taipei_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] +++ sed -e s/-/_/g
[taipei_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] + launch_postgis
[taipei_boundary] + [[ -n yes ]]
[taipei_boundary] + return 0
[taipei_boundary] + launch_routing_engine nowait
[taipei_boundary] + [[ -n '' ]]
[taipei_boundary] + wait_for_routing_service=nowait
[taipei_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P'
[taipei_boundary] + [[ -d /jenkins/autopilot-maps/TW-170616-136/tm/TW ]]
[taipei_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[taipei_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[taipei_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[taipei_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'ln -sf /mapdata/TW-170616-136/tm/TW /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[taipei_boundary] + local_host=localhost:8002
[taipei_boundary] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[taipei_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[taipei_boundary] ++ print_regional_request
[taipei_boundary] ++ case "$MAPDATA_REGION" in
[taipei_boundary] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + grep '"error":'
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[taipei_boundary] affa82fd7f72        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   4 seconds ago       Up 3 seconds        0.0.0.0:34685->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + kill_valhalla
[taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pkill -f valhalla_route_service
[taipei_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[taipei_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[taipei_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[taipei_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:/navigation/valhalla-install.tgz
[taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[taipei_boundary] + launch_routing_engine
[taipei_boundary] + [[ -n '' ]]
[taipei_boundary] + wait_for_routing_service=wait
[taipei_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] ++ grep Status
[taipei_boundary] ++ tr -d ' ",'
[taipei_boundary] ++ awk -F: '{print $2}'
[taipei_boundary] + container_status=running
[taipei_boundary] + [[ running == \e\x\i\t\e\d ]]
[taipei_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pgrep -f valhalla_route_service
[taipei_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[taipei_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_TW ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + network=jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}'
[taipei_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + output='{<nil> [] [affa82fd7f72] 016a62a3b6a7cc4ea92b621843559004ffb78c5999856880a5fca18f613d8023 fd9fde4855fdc50b4cb815856b751e7404732dd20be1d4935cf50ba97ba6eb1f 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[taipei_boundary] + [[ {<nil> [] [affa82fd7f72] 016a62a3b6a7cc4ea92b621843559004ffb78c5999856880a5fca18f613d8023 fd9fde4855fdc50b4cb815856b751e7404732dd20be1d4935cf50ba97ba6eb1f 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[taipei_boundary] + return 0
[taipei_boundary] + local_host=localhost:8002
[taipei_boundary] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[taipei_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[taipei_boundary] ++ print_regional_request
[taipei_boundary] ++ case "$MAPDATA_REGION" in
[taipei_boundary] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[taipei_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_boundary] + grep '"error":'
[taipei_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[taipei_boundary] affa82fd7f72        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 10 seconds       0.0.0.0:34685->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taipei_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[taipei_boundary] Namespace(bias=1, boundary='taipei_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[taipei_boundary] Retrieving baseline routes
[taipei_boundary] Retrieving valhalla routes
[taipei_boundary] Valhalla request threadpool size: 10
[taipei_boundary] Out of 1223 routes, found 1222 trips
[taipei_boundary] Exporting 1223 valhalla routes to insight database
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary taipei_boundary -tag _jenkins-ValhallaPipeline-1004'
[taipei_boundary] Processing 1222 polylines
[taipei_boundary] Saving results
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary taipei_boundary -tag _jenkins-ValhallaPipeline-1004'
[taipei_boundary] Routing) Boundary: taipei_boundary | Requested: 1223 | Successful: 1222 | Failed: 1 | Match pct: 65.0
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary taipei_boundary -tag _jenkins-ValhallaPipeline-1004'
[taiwan_boundary] Out of 1720 routes, found 1715 trips
[taiwan_boundary] Exporting 1720 valhalla routes to insight database
[la_boundary] Saving error table with filename: max-error-table-la_boundary.png
[la_boundary] Plotly server error saving max-error-table-la_boundary.png, retrying #1
[la_boundary] Plotly server error saving max-error-table-la_boundary.png, retrying #2
[la_boundary] Plotly server error saving max-error-table-la_boundary.png, retrying #3
[la_boundary] Plotly server error saving max-error-table-la_boundary.png, retrying #4
[la_boundary] Plotly server error saving max-error-table-la_boundary.png, retrying #5
[la_boundary] Saving max error chart with filename: max-error-hist-la_boundary.png
[la_boundary] Plotly server error saving max-error-hist-la_boundary.png, retrying #1
[la_boundary] Plotly server error saving max-error-hist-la_boundary.png, retrying #2
[la_boundary] Plotly server error saving max-error-hist-la_boundary.png, retrying #3
[la_boundary] Plotly server error saving max-error-hist-la_boundary.png, retrying #4
[la_boundary] Plotly server error saving max-error-hist-la_boundary.png, retrying #5
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary la_boundary -tag _jenkins-ValhallaPipeline-1004'
[la_boundary] Guidance) Boundary: la_boundary | Total: 5496 | Steps Failed Count: 827 | Unnamed Start Count: 68 | Unnamed Middle Count: 61 | Unnamed Mid Short Count: 29 | Unnamed Mid Medium Count: 13 | Unnamed Mid Long Count: 24 | Unnamed End Count: 93 | Unnamed Verbal Count: 86
[la_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary la_boundary -tag _jenkins-ValhallaPipeline-1004'
[la_boundary] Processing 2199 routes
[la_boundary] Angles) Boundary: la_boundary | Total routes: 2199 | Total turns compared: 11391 |  Mismatches: 165 | Mismatch pct: 1.45 | Skipped: 12464
[la_boundary] + cleanup_routing_engine
[la_boundary] + [[ -n '' ]]
[la_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[la_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + gzip
[seattle_boundary] Saving error table with filename: max-error-table-seattle_boundary.png
[seattle_boundary] Plotly server error saving max-error-table-seattle_boundary.png, retrying #1
[seattle_boundary] Plotly server error saving max-error-table-seattle_boundary.png, retrying #2
[seattle_boundary] Plotly server error saving max-error-table-seattle_boundary.png, retrying #3
[seattle_boundary] Plotly server error saving max-error-table-seattle_boundary.png, retrying #4
[seattle_boundary] Plotly server error saving max-error-table-seattle_boundary.png, retrying #5
[seattle_boundary] Saving max error chart with filename: max-error-hist-seattle_boundary.png
[seattle_boundary] Plotly server error saving max-error-hist-seattle_boundary.png, retrying #1
[seattle_boundary] Plotly server error saving max-error-hist-seattle_boundary.png, retrying #2
[seattle_boundary] Plotly server error saving max-error-hist-seattle_boundary.png, retrying #3
[seattle_boundary] Plotly server error saving max-error-hist-seattle_boundary.png, retrying #4
[seattle_boundary] Plotly server error saving max-error-hist-seattle_boundary.png, retrying #5
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary seattle_boundary -tag _jenkins-ValhallaPipeline-1004'
[la_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] Guidance) Boundary: seattle_boundary | Total: 1896 | Steps Failed Count: 134 | Unnamed Start Count: 26 | Unnamed Middle Count: 62 | Unnamed Mid Short Count: 16 | Unnamed Mid Medium Count: 13 | Unnamed Mid Long Count: 35 | Unnamed End Count: 32 | Unnamed Verbal Count: 0
[seattle_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary seattle_boundary -tag _jenkins-ValhallaPipeline-1004'
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary taiwan_boundary -tag _jenkins-ValhallaPipeline-1004'
[taiwan_boundary] Processing 1715 polylines
[seattle_boundary] Processing 219 routes
[seattle_boundary] Angles) Boundary: seattle_boundary | Total routes: 219 | Total turns compared: 1160 |  Mismatches: 9 | Mismatch pct: 0.78 | Skipped: 1045
[seattle_boundary] + cleanup_routing_engine
[seattle_boundary] + [[ -n '' ]]
[seattle_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[seattle_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + gzip
[seattle_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [la_boundary] stash
[seattle_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [seattle_boundary] stash
[la_boundary] Stashed 12 file(s)
[Pipeline] [la_boundary] sh
[la_boundary] [ValhallaPipeline] Running shell script
[la_boundary] + scripts/cleanup.sh
[la_boundary] ++ realpath scripts/cleanup.sh
[la_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[la_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[la_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[la_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[la_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[la_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_boundary] ++ POSTGIS=mdillon/postgis
[la_boundary] ++ POSTGIS_LABEL=pg.test.com
[la_boundary] ++ PG_USER=postgres
[la_boundary] ++ PG_PASSWD=
[la_boundary] ++ PG_DB=postgres
[la_boundary] ++ INSIGHT_SCHEMA=insight
[la_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[la_boundary] ++ VALHALLA_BRANCH=origin/master
[la_boundary] ++ NAME_SERVER=12.34.5.67
[la_boundary] ++ VALHALLA_CONCURRENCY=
[la_boundary] ++ BASELINE_FILE=./baseline.txt
[la_boundary] ++ BUILD_FILE=./build.txt
[la_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[la_boundary] ++ MAPDATA_VERSION=NA-170714-148
[la_boundary] ++ MAPDATA_REGION=NA
[la_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[la_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[la_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[la_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[la_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[la_boundary] +++ sed -e s/-/_/g
[la_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[la_boundary] + cleanup_network
[la_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[la_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[la_boundary] + leading='s/^[[:space:]]*//'
[la_boundary] + trailing='s/[[:space:]]*$//'
[la_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[la_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[la_boundary] ++ tr -s ' '
[la_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[la_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[la_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] Stashed 12 file(s)
[Pipeline] [seattle_boundary] sh
[la_boundary] jenkins_ValhallaPipeline_1004_NA
[la_boundary] + cleanup_routing_engine
[la_boundary] + [[ -n '' ]]
[la_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[la_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + gzip
[la_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_boundary] + true
[seattle_boundary] [ValhallaPipeline] Running shell script
[Pipeline] [la_boundary] }
[Pipeline] [la_boundary] // withEnv
[houston_regression_test] Running on docker-tm-03 in /jenkins/workspace/ValhallaPipeline
[seattle_boundary] + scripts/cleanup.sh
[seattle_boundary] ++ realpath scripts/cleanup.sh
[seattle_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[seattle_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[seattle_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[seattle_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[seattle_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seattle_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_boundary] ++ POSTGIS=mdillon/postgis
[seattle_boundary] ++ POSTGIS_LABEL=pg.test.com
[seattle_boundary] ++ PG_USER=postgres
[seattle_boundary] ++ PG_PASSWD=
[seattle_boundary] ++ PG_DB=postgres
[seattle_boundary] ++ INSIGHT_SCHEMA=insight
[seattle_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[seattle_boundary] ++ VALHALLA_BRANCH=origin/master
[seattle_boundary] ++ NAME_SERVER=12.34.5.67
[seattle_boundary] ++ VALHALLA_CONCURRENCY=
[seattle_boundary] ++ BASELINE_FILE=./baseline.txt
[seattle_boundary] ++ BUILD_FILE=./build.txt
[seattle_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[seattle_boundary] ++ MAPDATA_VERSION=NA-170714-148
[seattle_boundary] ++ MAPDATA_REGION=NA
[seattle_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[seattle_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[seattle_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[seattle_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seattle_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] +++ sed -e s/-/_/g
[seattle_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] + cleanup_network
[seattle_boundary] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[seattle_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[seattle_boundary] + leading='s/^[[:space:]]*//'
[seattle_boundary] + trailing='s/[[:space:]]*$//'
[seattle_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[seattle_boundary] ++ tr -s ' '
[seattle_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[seattle_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] + docker network rm jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] jenkins_ValhallaPipeline_1004_NA
[seattle_boundary] + cleanup_routing_engine
[seattle_boundary] + [[ -n '' ]]
[seattle_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[seattle_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + gzip
[seattle_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [la_boundary] }
[Pipeline] [la_boundary] // node
[Pipeline] [houston_regression_test] {
[Pipeline] [la_boundary] }
[Pipeline] [houston_regression_test] withEnv
[Pipeline] [houston_regression_test] {
[Pipeline] [houston_regression_test] checkout
[seattle_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_boundary] + true
[houston_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[houston_regression_test] Fetching changes from the remote Git repository
[houston_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[houston_regression_test] Pruning obsolete local branches
[houston_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[houston_regression_test]  > /usr/bin/git --version # timeout=10
[houston_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[houston_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[Pipeline] [seattle_boundary] }
[Pipeline] [seattle_boundary] // withEnv
[Pipeline] [seattle_boundary] }
[taipei_regression_test] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [seattle_boundary] // node
[Pipeline] [taipei_regression_test] {
[Pipeline] [seattle_boundary] }
[Pipeline] [taipei_regression_test] withEnv
[Pipeline] [taipei_regression_test] {
[Pipeline] [taipei_regression_test] checkout
[taipei_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[taipei_regression_test] Fetching changes from the remote Git repository
[taipei_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[taipei_regression_test] Pruning obsolete local branches
[taipei_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[taipei_regression_test]  > /usr/bin/git --version # timeout=10
[taipei_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[taipei_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[taipei_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[taipei_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[taipei_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[taipei_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[taipei_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[taipei_regression_test] Cleaning workspace
[taipei_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[taipei_regression_test] Resetting working tree
[taipei_regression_test]  > /usr/bin/git reset --hard # timeout=10
[taipei_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [taipei_regression_test] unstash
[houston_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[houston_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[houston_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[houston_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[houston_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[houston_regression_test] Cleaning workspace
[houston_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[houston_regression_test] Resetting working tree
[houston_regression_test]  > /usr/bin/git reset --hard # timeout=10
[houston_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [houston_regression_test] unstash
[Pipeline] [taipei_regression_test] sh
[taipei_regression_test] [ValhallaPipeline] Running shell script
[taipei_regression_test] + scripts/setup.sh
[taipei_regression_test] ++ realpath scripts/setup.sh
[taipei_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[taipei_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[taipei_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taipei_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taipei_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] ++ POSTGIS=mdillon/postgis
[taipei_regression_test] ++ POSTGIS_LABEL=pg.test.com
[taipei_regression_test] ++ PG_USER=postgres
[taipei_regression_test] ++ PG_PASSWD=
[taipei_regression_test] ++ PG_DB=postgres
[taipei_regression_test] ++ INSIGHT_SCHEMA=insight
[taipei_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[taipei_regression_test] ++ VALHALLA_BRANCH=origin/master
[taipei_regression_test] ++ NAME_SERVER=12.34.5.67
[taipei_regression_test] ++ VALHALLA_CONCURRENCY=
[taipei_regression_test] ++ BASELINE_FILE=./baseline.txt
[taipei_regression_test] ++ BUILD_FILE=./build.txt
[taipei_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taipei_regression_test] ++ MAPDATA_VERSION=TW-170616-136
[taipei_regression_test] ++ MAPDATA_REGION=TW
[taipei_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taipei_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taipei_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taipei_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] +++ sed -e s/-/_/g
[taipei_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[taipei_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_regression_test] + [[ -n true ]]
[taipei_regression_test] + sync_aws_mapdata
[taipei_regression_test] + which aws
[taipei_regression_test] /usr/bin/aws
[taipei_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[taipei_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/TW-170616-136/ /jenkins/autopilot-maps/TW-170616-136
[Pipeline] [houston_regression_test] sh
[houston_regression_test] [ValhallaPipeline] Running shell script
[houston_regression_test] + scripts/setup.sh
[houston_regression_test] ++ realpath scripts/setup.sh
[houston_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[houston_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[houston_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[houston_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[houston_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] ++ POSTGIS=mdillon/postgis
[houston_regression_test] ++ POSTGIS_LABEL=pg.test.com
[houston_regression_test] ++ PG_USER=postgres
[houston_regression_test] ++ PG_PASSWD=
[houston_regression_test] ++ PG_DB=postgres
[houston_regression_test] ++ INSIGHT_SCHEMA=insight
[houston_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[houston_regression_test] ++ VALHALLA_BRANCH=origin/master
[houston_regression_test] ++ NAME_SERVER=12.34.5.67
[houston_regression_test] ++ VALHALLA_CONCURRENCY=
[houston_regression_test] ++ BASELINE_FILE=./baseline.txt
[houston_regression_test] ++ BUILD_FILE=./build.txt
[houston_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[houston_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[houston_regression_test] ++ MAPDATA_REGION=NA
[houston_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[houston_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[houston_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[houston_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] +++ sed -e s/-/_/g
[houston_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[houston_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_regression_test] + [[ -n true ]]
[houston_regression_test] + sync_aws_mapdata
[houston_regression_test] + which aws
[houston_regression_test] /usr/bin/aws
[houston_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[houston_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[taipei_regression_test] + create_network
[taipei_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] + network=jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] ++ wc -l
[taipei_regression_test] + network_count=1
[taipei_regression_test] + test 1 -eq 2
[taipei_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_TW'
[taipei_regression_test] Creating network jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] + docker network create jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] d0cd12d066f0fecc031ce4b23734a1abd5db3dca83b36b2a70954abe46ff7bac
[taipei_regression_test] + launch_postgis
[taipei_regression_test] + [[ -n yes ]]
[taipei_regression_test] + return 0
[Pipeline] [taipei_regression_test] sh
[taipei_regression_test] [ValhallaPipeline] Running shell script
[taipei_regression_test] + scripts/dump-map-info.sh taipei_regression_test
[taipei_regression_test] ++ realpath scripts/dump-map-info.sh
[taipei_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[taipei_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[taipei_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taipei_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taipei_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] ++ POSTGIS=mdillon/postgis
[taipei_regression_test] ++ POSTGIS_LABEL=pg.test.com
[taipei_regression_test] ++ PG_USER=postgres
[taipei_regression_test] ++ PG_PASSWD=
[taipei_regression_test] ++ PG_DB=postgres
[taipei_regression_test] ++ INSIGHT_SCHEMA=insight
[taipei_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[taipei_regression_test] ++ VALHALLA_BRANCH=origin/master
[taipei_regression_test] ++ NAME_SERVER=12.34.5.67
[taipei_regression_test] ++ VALHALLA_CONCURRENCY=
[taipei_regression_test] ++ BASELINE_FILE=./baseline.txt
[taipei_regression_test] ++ BUILD_FILE=./build.txt
[taipei_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taipei_regression_test] ++ MAPDATA_VERSION=TW-170616-136
[taipei_regression_test] ++ MAPDATA_REGION=TW
[taipei_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taipei_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taipei_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taipei_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] +++ sed -e s/-/_/g
[taipei_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] + BOUNDARY=taipei_regression_test
[taipei_regression_test] + dump_map_info taipei_regression_test
[taipei_regression_test] + BOUNDARY=taipei_regression_test
[taipei_regression_test] + [[ -r /jenkins/autopilot-maps/TW-170616-136/VERSION ]]
[taipei_regression_test] + mapdata_version=mapdata-taipei_regression_test.version
[taipei_regression_test] + cp /jenkins/autopilot-maps/TW-170616-136/VERSION mapdata-taipei_regression_test.version
[Pipeline] [taipei_regression_test] sh
[taipei_regression_test] [ValhallaPipeline] Running shell script
[taipei_regression_test] + scripts/run-route-diagnostics.sh taipei_regression_test
[taipei_regression_test] + BOUNDARY=taipei_regression_test
[taipei_regression_test] + FAILURE_THRESHOLD=20
[taipei_regression_test] ++ realpath scripts/run-route-diagnostics.sh
[taipei_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[taipei_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[taipei_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taipei_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taipei_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] ++ POSTGIS=mdillon/postgis
[taipei_regression_test] ++ POSTGIS_LABEL=pg.test.com
[taipei_regression_test] ++ PG_USER=postgres
[taipei_regression_test] ++ PG_PASSWD=
[taipei_regression_test] ++ PG_DB=postgres
[taipei_regression_test] ++ INSIGHT_SCHEMA=insight
[taipei_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[taipei_regression_test] ++ VALHALLA_BRANCH=origin/master
[taipei_regression_test] ++ NAME_SERVER=12.34.5.67
[taipei_regression_test] ++ VALHALLA_CONCURRENCY=
[taipei_regression_test] ++ BASELINE_FILE=./baseline.txt
[taipei_regression_test] ++ BUILD_FILE=./build.txt
[taipei_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taipei_regression_test] ++ MAPDATA_VERSION=TW-170616-136
[taipei_regression_test] ++ MAPDATA_REGION=TW
[taipei_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taipei_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taipei_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taipei_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] +++ sed -e s/-/_/g
[taipei_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] + launch_postgis
[taipei_regression_test] + [[ -n yes ]]
[taipei_regression_test] + return 0
[taipei_regression_test] + launch_routing_engine nowait
[taipei_regression_test] + [[ -n '' ]]
[taipei_regression_test] + wait_for_routing_service=nowait
[taipei_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P'
[taipei_regression_test] + [[ -d /jenkins/autopilot-maps/TW-170616-136/tm/TW ]]
[taipei_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[taipei_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[taipei_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW --network jenkins_ValhallaPipeline_1004_TW --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[taipei_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'ln -sf /mapdata/TW-170616-136/tm/TW /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[taipei_regression_test] + local_host=localhost:8002
[taipei_regression_test] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[taipei_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[taipei_regression_test] ++ print_regional_request
[taipei_regression_test] ++ case "$MAPDATA_REGION" in
[taipei_regression_test] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + grep '"error":'
[taipei_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[taipei_regression_test] daa63233c3b2        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   6 seconds ago       Up 4 seconds        0.0.0.0:34577->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + kill_valhalla
[taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pkill -f valhalla_route_service
[taipei_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[taipei_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[taipei_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[taipei_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:/navigation/valhalla-install.tgz
[taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[taipei_regression_test] + launch_routing_engine
[taipei_regression_test] + [[ -n '' ]]
[taipei_regression_test] + wait_for_routing_service=wait
[taipei_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] ++ grep Status
[taipei_regression_test] ++ awk -F: '{print $2}'
[taipei_regression_test] ++ tr -d ' ",'
[taipei_regression_test] + container_status=running
[taipei_regression_test] + [[ running == \e\x\i\t\e\d ]]
[taipei_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW pgrep -f valhalla_route_service
[taipei_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[taipei_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_TW ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + network=jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}'
[taipei_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_TW}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + output='{<nil> [] [daa63233c3b2] d0cd12d066f0fecc031ce4b23734a1abd5db3dca83b36b2a70954abe46ff7bac 16c8a2bf3cc6c34e02f76fc9dc6e6b3de8519af27a58700566466229138a8079 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[taipei_regression_test] + [[ {<nil> [] [daa63233c3b2] d0cd12d066f0fecc031ce4b23734a1abd5db3dca83b36b2a70954abe46ff7bac 16c8a2bf3cc6c34e02f76fc9dc6e6b3de8519af27a58700566466229138a8079 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[taipei_regression_test] + return 0
[taipei_regression_test] + local_host=localhost:8002
[taipei_regression_test] + [[ jenkins_ValhallaPipeline_1004_TW == \h\o\s\t ]]
[taipei_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002
[taipei_regression_test] ++ print_regional_request
[taipei_regression_test] ++ case "$MAPDATA_REGION" in
[taipei_regression_test] ++ request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] ++ echo 'route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + request='route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[taipei_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + grep '"error":'
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW:8002/route?json={"locations":[{"lat":22.755254,"lon":121.155920,"type":"break"},{"lat":22.965838,"lon":121.300139,"type":"break"}],"costing":"auto"}'
[taipei_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[taipei_regression_test] daa63233c3b2        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   14 seconds ago      Up 13 seconds       0.0.0.0:34577->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW -host pg.test.com -boundary taipei_regression_test -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[taipei_regression_test] Namespace(bias=1, boundary='taipei_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW', valhalla_port=8002)
[taipei_regression_test] Retrieving baseline routes
[taipei_regression_test] Retrieving valhalla routes
[taipei_regression_test] Valhalla request threadpool size: 10
[taipei_regression_test] Out of 153 routes, found 151 trips
[taipei_regression_test] Exporting 151 valhalla routes to insight database
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary taipei_regression_test -tag _jenkins-ValhallaPipeline-1004'
[taiwan_boundary] Saving results
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary taiwan_boundary -tag _jenkins-ValhallaPipeline-1004'
[taipei_regression_test] Processing 151 polylines
[taipei_regression_test] Saving results
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary taipei_regression_test -tag _jenkins-ValhallaPipeline-1004'
[taiwan_boundary] Routing) Boundary: taiwan_boundary | Requested: 1720 | Successful: 1715 | Failed: 5 | Match pct: 35.0
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary taiwan_boundary -tag _jenkins-ValhallaPipeline-1004'
[taipei_regression_test] Routing) Boundary: taipei_regression_test | Requested: 151 | Successful: 151 | Failed: 0 | Match pct: 35.76
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary taipei_regression_test -tag _jenkins-ValhallaPipeline-1004'
[houston_regression_test] + create_network
[houston_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] ++ wc -l
[houston_regression_test] + network_count=1
[houston_regression_test] + test 1 -eq 2
[houston_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[houston_regression_test] Creating network jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] + docker network create jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] ee71d0d465ba575015c7f80bda0be2967f499cfb8d9a3ddda08d8838f657ada2
[houston_regression_test] + launch_postgis
[houston_regression_test] + [[ -n yes ]]
[houston_regression_test] + return 0
[Pipeline] [houston_regression_test] sh
[houston_regression_test] [ValhallaPipeline] Running shell script
[houston_regression_test] + scripts/dump-map-info.sh houston_regression_test
[houston_regression_test] ++ realpath scripts/dump-map-info.sh
[houston_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[houston_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[houston_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[houston_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[houston_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] ++ POSTGIS=mdillon/postgis
[houston_regression_test] ++ POSTGIS_LABEL=pg.test.com
[houston_regression_test] ++ PG_USER=postgres
[houston_regression_test] ++ PG_PASSWD=
[houston_regression_test] ++ PG_DB=postgres
[houston_regression_test] ++ INSIGHT_SCHEMA=insight
[houston_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[houston_regression_test] ++ VALHALLA_BRANCH=origin/master
[houston_regression_test] ++ NAME_SERVER=12.34.5.67
[houston_regression_test] ++ VALHALLA_CONCURRENCY=
[houston_regression_test] ++ BASELINE_FILE=./baseline.txt
[houston_regression_test] ++ BUILD_FILE=./build.txt
[houston_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[houston_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[houston_regression_test] ++ MAPDATA_REGION=NA
[houston_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[houston_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[houston_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[houston_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] +++ sed -e s/-/_/g
[houston_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] + BOUNDARY=houston_regression_test
[houston_regression_test] + dump_map_info houston_regression_test
[houston_regression_test] + BOUNDARY=houston_regression_test
[houston_regression_test] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[houston_regression_test] + mapdata_version=mapdata-houston_regression_test.version
[houston_regression_test] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-houston_regression_test.version
[Pipeline] [houston_regression_test] sh
[houston_regression_test] [ValhallaPipeline] Running shell script
[houston_regression_test] + scripts/run-route-diagnostics.sh houston_regression_test
[houston_regression_test] + BOUNDARY=houston_regression_test
[houston_regression_test] + FAILURE_THRESHOLD=20
[houston_regression_test] ++ realpath scripts/run-route-diagnostics.sh
[houston_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[houston_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[houston_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[houston_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[houston_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] ++ POSTGIS=mdillon/postgis
[houston_regression_test] ++ POSTGIS_LABEL=pg.test.com
[houston_regression_test] ++ PG_USER=postgres
[houston_regression_test] ++ PG_PASSWD=
[houston_regression_test] ++ PG_DB=postgres
[houston_regression_test] ++ INSIGHT_SCHEMA=insight
[houston_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[houston_regression_test] ++ VALHALLA_BRANCH=origin/master
[houston_regression_test] ++ NAME_SERVER=12.34.5.67
[houston_regression_test] ++ VALHALLA_CONCURRENCY=
[houston_regression_test] ++ BASELINE_FILE=./baseline.txt
[houston_regression_test] ++ BUILD_FILE=./build.txt
[houston_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[houston_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[houston_regression_test] ++ MAPDATA_REGION=NA
[houston_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[houston_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[houston_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[houston_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] +++ sed -e s/-/_/g
[houston_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] + launch_postgis
[houston_regression_test] + [[ -n yes ]]
[houston_regression_test] + return 0
[houston_regression_test] + launch_routing_engine nowait
[houston_regression_test] + [[ -n '' ]]
[houston_regression_test] + wait_for_routing_service=nowait
[houston_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[houston_regression_test] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[houston_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[houston_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[houston_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[houston_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[houston_regression_test] + local_host=localhost:8002
[houston_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[houston_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[houston_regression_test] ++ print_regional_request
[houston_regression_test] ++ case "$MAPDATA_REGION" in
[houston_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + [[ nowait == \n\o\w\a\i\t ]]
[houston_regression_test] + break
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + [[ nowait == \n\o\w\a\i\t ]]
[houston_regression_test] + break
[houston_regression_test] + grep '"error":'
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[houston_regression_test] 15ccf999e155        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   7 seconds ago       Up 6 seconds        0.0.0.0:34893->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + kill_valhalla
[houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[houston_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[houston_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[houston_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[houston_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[houston_regression_test] + launch_routing_engine
[houston_regression_test] + [[ -n '' ]]
[houston_regression_test] + wait_for_routing_service=wait
[houston_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] ++ tr -d ' ",'
[houston_regression_test] ++ awk -F: '{print $2}'
[houston_regression_test] ++ grep Status
[houston_regression_test] + container_status=running
[houston_regression_test] + [[ running == \e\x\i\t\e\d ]]
[houston_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[houston_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[houston_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[houston_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + output='{<nil> [] [15ccf999e155] ee71d0d465ba575015c7f80bda0be2967f499cfb8d9a3ddda08d8838f657ada2 efacaed0272d8956f6b80ce024f8ba31a985861886af9f725aa9dd10b00dc64e 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[houston_regression_test] + [[ {<nil> [] [15ccf999e155] ee71d0d465ba575015c7f80bda0be2967f499cfb8d9a3ddda08d8838f657ada2 efacaed0272d8956f6b80ce024f8ba31a985861886af9f725aa9dd10b00dc64e 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[houston_regression_test] + return 0
[houston_regression_test] + local_host=localhost:8002
[houston_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[houston_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[houston_regression_test] ++ print_regional_request
[houston_regression_test] ++ case "$MAPDATA_REGION" in
[houston_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[houston_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[houston_regression_test] + grep '"error":'
[houston_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[houston_regression_test] 15ccf999e155        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   22 seconds ago      Up 21 seconds       0.0.0.0:34893->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary houston_regression_test -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[houston_regression_test] Namespace(bias=1, boundary='houston_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[houston_regression_test] Retrieving baseline routes
[houston_regression_test] Retrieving valhalla routes
[houston_regression_test] Valhalla request threadpool size: 10
[houston_regression_test] Out of 97 routes, found 97 trips
[houston_regression_test] Exporting 97 valhalla routes to insight database
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary houston_regression_test -tag _jenkins-ValhallaPipeline-1004'
[houston_regression_test] Processing 97 polylines
[houston_regression_test] Saving results
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary houston_regression_test -tag _jenkins-ValhallaPipeline-1004'
[houston_regression_test] Routing) Boundary: houston_regression_test | Requested: 97 | Successful: 97 | Failed: 0 | Match pct: 26.8
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary houston_regression_test -tag _jenkins-ValhallaPipeline-1004'
[taipei_boundary] Saving error table with filename: max-error-table-taipei_boundary.png
[taipei_boundary] Plotly server error saving max-error-table-taipei_boundary.png, retrying #1
[taipei_boundary] Plotly server error saving max-error-table-taipei_boundary.png, retrying #2
[taipei_boundary] Plotly server error saving max-error-table-taipei_boundary.png, retrying #3
[taipei_boundary] Plotly server error saving max-error-table-taipei_boundary.png, retrying #4
[taipei_boundary] Plotly server error saving max-error-table-taipei_boundary.png, retrying #5
[taipei_boundary] Saving max error chart with filename: max-error-hist-taipei_boundary.png
[taipei_boundary] Plotly server error saving max-error-hist-taipei_boundary.png, retrying #1
[taipei_boundary] Plotly server error saving max-error-hist-taipei_boundary.png, retrying #2
[taipei_boundary] Plotly server error saving max-error-hist-taipei_boundary.png, retrying #3
[taipei_boundary] Plotly server error saving max-error-hist-taipei_boundary.png, retrying #4
[taipei_boundary] Plotly server error saving max-error-hist-taipei_boundary.png, retrying #5
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary taipei_boundary -tag _jenkins-ValhallaPipeline-1004'
[taipei_boundary] Guidance) Boundary: taipei_boundary | Total: 1222 | Steps Failed Count: 38 | Unnamed Start Count: 3 | Unnamed Middle Count: 90 | Unnamed Mid Short Count: 73 | Unnamed Mid Medium Count: 9 | Unnamed Mid Long Count: 19 | Unnamed End Count: 35 | Unnamed Verbal Count: 168
[taipei_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary taipei_boundary -tag _jenkins-ValhallaPipeline-1004'
[taipei_boundary] Processing 1222 routes
[taipei_boundary] Angles) Boundary: taipei_boundary | Total routes: 1222 | Total turns compared: 9854 |  Mismatches: 538 | Mismatch pct: 5.46 | Skipped: 7744
[taipei_boundary] + cleanup_routing_engine
[taipei_boundary] + [[ -n '' ]]
[taipei_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[taipei_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + gzip
[taipei_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[Pipeline] [taipei_boundary] stash
[taipei_boundary] Stashed 12 file(s)
[Pipeline] [taipei_boundary] sh
[taipei_boundary] [ValhallaPipeline] Running shell script
[taipei_boundary] + scripts/cleanup.sh
[taipei_boundary] ++ realpath scripts/cleanup.sh
[taipei_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[taipei_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[taipei_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taipei_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taipei_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taipei_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_boundary] ++ POSTGIS=mdillon/postgis
[taipei_boundary] ++ POSTGIS_LABEL=pg.test.com
[taipei_boundary] ++ PG_USER=postgres
[taipei_boundary] ++ PG_PASSWD=
[taipei_boundary] ++ PG_DB=postgres
[taipei_boundary] ++ INSIGHT_SCHEMA=insight
[taipei_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[taipei_boundary] ++ VALHALLA_BRANCH=origin/master
[taipei_boundary] ++ NAME_SERVER=12.34.5.67
[taipei_boundary] ++ VALHALLA_CONCURRENCY=
[taipei_boundary] ++ BASELINE_FILE=./baseline.txt
[taipei_boundary] ++ BUILD_FILE=./build.txt
[taipei_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taipei_boundary] ++ MAPDATA_VERSION=TW-170616-136
[taipei_boundary] ++ MAPDATA_REGION=TW
[taipei_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taipei_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taipei_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taipei_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taipei_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] +++ sed -e s/-/_/g
[taipei_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] + cleanup_network
[taipei_boundary] + [[ jenkins_ValhallaPipeline_1004_TW != \h\o\s\t ]]
[taipei_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[taipei_boundary] + leading='s/^[[:space:]]*//'
[taipei_boundary] + trailing='s/[[:space:]]*$//'
[taipei_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] ++ tr -s ' '
[taipei_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[taipei_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_TW'
[taipei_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] + docker network rm jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] jenkins_ValhallaPipeline_1004_TW
[taipei_boundary] + cleanup_routing_engine
[taipei_boundary] + [[ -n '' ]]
[taipei_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[taipei_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + gzip
[taipei_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_boundary] + true
[Pipeline] [taipei_boundary] }
[Pipeline] [taipei_boundary] // withEnv
[Pipeline] [taipei_boundary] }
[bayarea_regression_test] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [taipei_boundary] // node
[Pipeline] [bayarea_regression_test] {
[Pipeline] [taipei_boundary] }
[Pipeline] [bayarea_regression_test] withEnv
[Pipeline] [bayarea_regression_test] {
[Pipeline] [bayarea_regression_test] checkout
[bayarea_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[bayarea_regression_test] Fetching changes from the remote Git repository
[bayarea_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[bayarea_regression_test] Pruning obsolete local branches
[bayarea_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[bayarea_regression_test]  > /usr/bin/git --version # timeout=10
[bayarea_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[bayarea_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[bayarea_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[bayarea_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[bayarea_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[bayarea_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[bayarea_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[bayarea_regression_test] Cleaning workspace
[bayarea_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[bayarea_regression_test] Resetting working tree
[bayarea_regression_test]  > /usr/bin/git reset --hard # timeout=10
[bayarea_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [bayarea_regression_test] unstash
[Pipeline] [bayarea_regression_test] sh
[bayarea_regression_test] [ValhallaPipeline] Running shell script
[bayarea_regression_test] + scripts/setup.sh
[bayarea_regression_test] ++ realpath scripts/setup.sh
[bayarea_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[bayarea_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[bayarea_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[bayarea_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[bayarea_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] ++ POSTGIS=mdillon/postgis
[bayarea_regression_test] ++ POSTGIS_LABEL=pg.test.com
[bayarea_regression_test] ++ PG_USER=postgres
[bayarea_regression_test] ++ PG_PASSWD=
[bayarea_regression_test] ++ PG_DB=postgres
[bayarea_regression_test] ++ INSIGHT_SCHEMA=insight
[bayarea_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[bayarea_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[bayarea_regression_test] ++ VALHALLA_BRANCH=origin/master
[bayarea_regression_test] ++ NAME_SERVER=12.34.5.67
[bayarea_regression_test] ++ VALHALLA_CONCURRENCY=
[bayarea_regression_test] ++ BASELINE_FILE=./baseline.txt
[bayarea_regression_test] ++ BUILD_FILE=./build.txt
[bayarea_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[bayarea_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[bayarea_regression_test] ++ MAPDATA_REGION=NA
[bayarea_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[bayarea_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[bayarea_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[bayarea_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] +++ sed -e s/-/_/g
[bayarea_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[bayarea_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[bayarea_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[bayarea_regression_test] + [[ -n true ]]
[bayarea_regression_test] + sync_aws_mapdata
[bayarea_regression_test] + which aws
[bayarea_regression_test] /usr/bin/aws
[bayarea_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[bayarea_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[bayarea_regression_test] + create_network
[bayarea_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] ++ wc -l
[bayarea_regression_test] + network_count=1
[bayarea_regression_test] + test 1 -eq 2
[bayarea_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[bayarea_regression_test] Creating network jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] + docker network create jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] e7fad0096db2e2e384250c5e6b58b0d15101e4b2b925fca2730b7259c5e92643
[bayarea_regression_test] + launch_postgis
[bayarea_regression_test] + [[ -n yes ]]
[bayarea_regression_test] + return 0
[Pipeline] [bayarea_regression_test] sh
[bayarea_regression_test] [ValhallaPipeline] Running shell script
[bayarea_regression_test] + scripts/dump-map-info.sh bayarea_regression_test
[bayarea_regression_test] ++ realpath scripts/dump-map-info.sh
[bayarea_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[bayarea_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[bayarea_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[bayarea_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[bayarea_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] ++ POSTGIS=mdillon/postgis
[bayarea_regression_test] ++ POSTGIS_LABEL=pg.test.com
[bayarea_regression_test] ++ PG_USER=postgres
[bayarea_regression_test] ++ PG_PASSWD=
[bayarea_regression_test] ++ PG_DB=postgres
[bayarea_regression_test] ++ INSIGHT_SCHEMA=insight
[bayarea_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[bayarea_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[bayarea_regression_test] ++ VALHALLA_BRANCH=origin/master
[bayarea_regression_test] ++ NAME_SERVER=12.34.5.67
[bayarea_regression_test] ++ VALHALLA_CONCURRENCY=
[bayarea_regression_test] ++ BASELINE_FILE=./baseline.txt
[bayarea_regression_test] ++ BUILD_FILE=./build.txt
[bayarea_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[bayarea_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[bayarea_regression_test] ++ MAPDATA_REGION=NA
[bayarea_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[bayarea_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[bayarea_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[bayarea_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] +++ sed -e s/-/_/g
[bayarea_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] + BOUNDARY=bayarea_regression_test
[bayarea_regression_test] + dump_map_info bayarea_regression_test
[bayarea_regression_test] + BOUNDARY=bayarea_regression_test
[bayarea_regression_test] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[bayarea_regression_test] + mapdata_version=mapdata-bayarea_regression_test.version
[bayarea_regression_test] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-bayarea_regression_test.version
[Pipeline] [bayarea_regression_test] sh
[bayarea_regression_test] [ValhallaPipeline] Running shell script
[bayarea_regression_test] + scripts/run-route-diagnostics.sh bayarea_regression_test
[bayarea_regression_test] + BOUNDARY=bayarea_regression_test
[bayarea_regression_test] + FAILURE_THRESHOLD=20
[bayarea_regression_test] ++ realpath scripts/run-route-diagnostics.sh
[bayarea_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[bayarea_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[bayarea_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[bayarea_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[bayarea_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] ++ POSTGIS=mdillon/postgis
[bayarea_regression_test] ++ POSTGIS_LABEL=pg.test.com
[bayarea_regression_test] ++ PG_USER=postgres
[bayarea_regression_test] ++ PG_PASSWD=
[bayarea_regression_test] ++ PG_DB=postgres
[bayarea_regression_test] ++ INSIGHT_SCHEMA=insight
[bayarea_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[bayarea_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[bayarea_regression_test] ++ VALHALLA_BRANCH=origin/master
[bayarea_regression_test] ++ NAME_SERVER=12.34.5.67
[bayarea_regression_test] ++ VALHALLA_CONCURRENCY=
[bayarea_regression_test] ++ BASELINE_FILE=./baseline.txt
[bayarea_regression_test] ++ BUILD_FILE=./build.txt
[bayarea_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[bayarea_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[bayarea_regression_test] ++ MAPDATA_REGION=NA
[bayarea_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[bayarea_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[bayarea_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[bayarea_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] +++ sed -e s/-/_/g
[bayarea_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] + launch_postgis
[bayarea_regression_test] + [[ -n yes ]]
[bayarea_regression_test] + return 0
[bayarea_regression_test] + launch_routing_engine nowait
[bayarea_regression_test] + [[ -n '' ]]
[bayarea_regression_test] + wait_for_routing_service=nowait
[bayarea_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[bayarea_regression_test] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[bayarea_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[bayarea_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[bayarea_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[bayarea_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[bayarea_regression_test] + local_host=localhost:8002
[bayarea_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[bayarea_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[bayarea_regression_test] ++ print_regional_request
[bayarea_regression_test] ++ case "$MAPDATA_REGION" in
[bayarea_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + grep '"error":'
[bayarea_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[bayarea_regression_test] f272e6a993fb        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 10 seconds       0.0.0.0:34686->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + kill_valhalla
[bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[bayarea_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[bayarea_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[bayarea_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[bayarea_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[bayarea_regression_test] + launch_routing_engine
[bayarea_regression_test] + [[ -n '' ]]
[bayarea_regression_test] + wait_for_routing_service=wait
[bayarea_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] ++ grep Status
[bayarea_regression_test] ++ tr -d ' ",'
[bayarea_regression_test] ++ awk -F: '{print $2}'
[bayarea_regression_test] + container_status=running
[bayarea_regression_test] + [[ running == \e\x\i\t\e\d ]]
[bayarea_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[bayarea_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[bayarea_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[bayarea_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + output='{<nil> [] [f272e6a993fb] e7fad0096db2e2e384250c5e6b58b0d15101e4b2b925fca2730b7259c5e92643 918ac673195e5744dedbe1b1c3b1f95139c090c4f3300fe3f85d14f0a6e5704a 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[bayarea_regression_test] + [[ {<nil> [] [f272e6a993fb] e7fad0096db2e2e384250c5e6b58b0d15101e4b2b925fca2730b7259c5e92643 918ac673195e5744dedbe1b1c3b1f95139c090c4f3300fe3f85d14f0a6e5704a 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[bayarea_regression_test] + return 0
[bayarea_regression_test] + local_host=localhost:8002
[bayarea_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[bayarea_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[bayarea_regression_test] ++ print_regional_request
[bayarea_regression_test] ++ case "$MAPDATA_REGION" in
[bayarea_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[bayarea_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[bayarea_regression_test] + grep '"error":'
[bayarea_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[bayarea_regression_test] f272e6a993fb        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   22 seconds ago      Up 21 seconds       0.0.0.0:34686->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary bayarea_regression_test -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[bayarea_regression_test] Namespace(bias=1, boundary='bayarea_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[bayarea_regression_test] Retrieving baseline routes
[bayarea_regression_test] Retrieving valhalla routes
[bayarea_regression_test] Valhalla request threadpool size: 10
[bayarea_regression_test] Out of 14 routes, found 14 trips
[bayarea_regression_test] Exporting 14 valhalla routes to insight database
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary bayarea_regression_test -tag _jenkins-ValhallaPipeline-1004'
[bayarea_regression_test] Processing 14 polylines
[bayarea_regression_test] Saving results
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary bayarea_regression_test -tag _jenkins-ValhallaPipeline-1004'
[bayarea_regression_test] Routing) Boundary: bayarea_regression_test | Requested: 14 | Successful: 14 | Failed: 0 | Match pct: 100.0
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary bayarea_regression_test -tag _jenkins-ValhallaPipeline-1004'
[taiwan_boundary] Saving error table with filename: max-error-table-taiwan_boundary.png
[taiwan_boundary] Plotly server error saving max-error-table-taiwan_boundary.png, retrying #1
[taiwan_boundary] Plotly server error saving max-error-table-taiwan_boundary.png, retrying #2
[taiwan_boundary] Plotly server error saving max-error-table-taiwan_boundary.png, retrying #3
[taiwan_boundary] Plotly server error saving max-error-table-taiwan_boundary.png, retrying #4
[taiwan_boundary] Plotly server error saving max-error-table-taiwan_boundary.png, retrying #5
[taiwan_boundary] Saving max error chart with filename: max-error-hist-taiwan_boundary.png
[taiwan_boundary] Plotly server error saving max-error-hist-taiwan_boundary.png, retrying #1
[taiwan_boundary] Plotly server error saving max-error-hist-taiwan_boundary.png, retrying #2
[taiwan_boundary] Plotly server error saving max-error-hist-taiwan_boundary.png, retrying #3
[taiwan_boundary] Plotly server error saving max-error-hist-taiwan_boundary.png, retrying #4
[taiwan_boundary] Plotly server error saving max-error-hist-taiwan_boundary.png, retrying #5
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary taiwan_boundary -tag _jenkins-ValhallaPipeline-1004'
[taiwan_boundary] Guidance) Boundary: taiwan_boundary | Total: 1715 | Steps Failed Count: 238 | Unnamed Start Count: 23 | Unnamed Middle Count: 318 | Unnamed Mid Short Count: 172 | Unnamed Mid Medium Count: 102 | Unnamed Mid Long Count: 202 | Unnamed End Count: 63 | Unnamed Verbal Count: 85
[taiwan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary taiwan_boundary -tag _jenkins-ValhallaPipeline-1004'
[taipei_regression_test] Saving error table with filename: max-error-table-taipei_regression_test.png
[taipei_regression_test] Plotly server error saving max-error-table-taipei_regression_test.png, retrying #1
[taipei_regression_test] Plotly server error saving max-error-table-taipei_regression_test.png, retrying #2
[taipei_regression_test] Plotly server error saving max-error-table-taipei_regression_test.png, retrying #3
[taipei_regression_test] Plotly server error saving max-error-table-taipei_regression_test.png, retrying #4
[taipei_regression_test] Plotly server error saving max-error-table-taipei_regression_test.png, retrying #5
[taipei_regression_test] Saving max error chart with filename: max-error-hist-taipei_regression_test.png
[taipei_regression_test] Plotly server error saving max-error-hist-taipei_regression_test.png, retrying #1
[taipei_regression_test] Plotly server error saving max-error-hist-taipei_regression_test.png, retrying #2
[taipei_regression_test] Plotly server error saving max-error-hist-taipei_regression_test.png, retrying #3
[taipei_regression_test] Plotly server error saving max-error-hist-taipei_regression_test.png, retrying #4
[taipei_regression_test] Plotly server error saving max-error-hist-taipei_regression_test.png, retrying #5
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary taipei_regression_test -tag _jenkins-ValhallaPipeline-1004'
[taipei_regression_test] Guidance) Boundary: taipei_regression_test | Total: 151 | Steps Failed Count: 89 | Unnamed Start Count: 1 | Unnamed Middle Count: 4 | Unnamed Mid Short Count: 4 | Unnamed Mid Medium Count: 0 | Unnamed Mid Long Count: 0 | Unnamed End Count: 6 | Unnamed Verbal Count: 1
[taipei_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_TW --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary taipei_regression_test -tag _jenkins-ValhallaPipeline-1004'
[taipei_regression_test] Processing 151 routes
[taipei_regression_test] Angles) Boundary: taipei_regression_test | Total routes: 151 | Total turns compared: 151 |  Mismatches: 0 | Mismatch pct: 0.0 | Skipped: 0
[taipei_regression_test] + cleanup_routing_engine
[taipei_regression_test] + [[ -n '' ]]
[taipei_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[taipei_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + gzip
[taipei_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[Pipeline] [taipei_regression_test] stash
[taipei_regression_test] Stashed 11 file(s)
[Pipeline] [taipei_regression_test] sh
[taipei_regression_test] [ValhallaPipeline] Running shell script
[taipei_regression_test] + scripts/cleanup.sh
[taipei_regression_test] ++ realpath scripts/cleanup.sh
[taipei_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[taipei_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[taipei_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taipei_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taipei_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taipei_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taipei_regression_test] ++ POSTGIS=mdillon/postgis
[taipei_regression_test] ++ POSTGIS_LABEL=pg.test.com
[taipei_regression_test] ++ PG_USER=postgres
[taipei_regression_test] ++ PG_PASSWD=
[taipei_regression_test] ++ PG_DB=postgres
[taipei_regression_test] ++ INSIGHT_SCHEMA=insight
[taipei_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taipei_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[taipei_regression_test] ++ VALHALLA_BRANCH=origin/master
[taipei_regression_test] ++ NAME_SERVER=12.34.5.67
[taipei_regression_test] ++ VALHALLA_CONCURRENCY=
[taipei_regression_test] ++ BASELINE_FILE=./baseline.txt
[taipei_regression_test] ++ BUILD_FILE=./build.txt
[taipei_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taipei_regression_test] ++ MAPDATA_VERSION=TW-170616-136
[taipei_regression_test] ++ MAPDATA_REGION=TW
[taipei_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taipei_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taipei_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taipei_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taipei_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] +++ sed -e s/-/_/g
[taipei_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] + cleanup_network
[taipei_regression_test] + [[ jenkins_ValhallaPipeline_1004_TW != \h\o\s\t ]]
[taipei_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[taipei_regression_test] + leading='s/^[[:space:]]*//'
[taipei_regression_test] + trailing='s/[[:space:]]*$//'
[taipei_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] ++ tr -s ' '
[taipei_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[taipei_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_TW'
[taipei_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] jenkins_ValhallaPipeline_1004_TW
[taipei_regression_test] + cleanup_routing_engine
[taipei_regression_test] + [[ -n '' ]]
[taipei_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[taipei_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + gzip
[taipei_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taipei_regression_test] + true
[Pipeline] [taipei_regression_test] }
[Pipeline] [taipei_regression_test] // withEnv
[la_regression_test] Running on docker-tm-05 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [taipei_regression_test] }
[Pipeline] [taipei_regression_test] // node
[Pipeline] [la_regression_test] {
[Pipeline] [taipei_regression_test] }
[Pipeline] [la_regression_test] withEnv
[Pipeline] [la_regression_test] {
[Pipeline] [la_regression_test] checkout
[la_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[la_regression_test] Fetching changes from the remote Git repository
[la_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[la_regression_test] Pruning obsolete local branches
[la_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[la_regression_test]  > /usr/bin/git --version # timeout=10
[la_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[la_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[la_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[la_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[la_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[la_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[la_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[la_regression_test] Cleaning workspace
[la_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[la_regression_test] Resetting working tree
[la_regression_test]  > /usr/bin/git reset --hard # timeout=10
[la_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [la_regression_test] unstash
[Pipeline] [la_regression_test] sh
[la_regression_test] [ValhallaPipeline] Running shell script
[la_regression_test] + scripts/setup.sh
[la_regression_test] ++ realpath scripts/setup.sh
[la_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[la_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[la_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[la_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[la_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] ++ POSTGIS=mdillon/postgis
[la_regression_test] ++ POSTGIS_LABEL=pg.test.com
[la_regression_test] ++ PG_USER=postgres
[la_regression_test] ++ PG_PASSWD=
[la_regression_test] ++ PG_DB=postgres
[la_regression_test] ++ INSIGHT_SCHEMA=insight
[la_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[la_regression_test] ++ VALHALLA_BRANCH=origin/master
[la_regression_test] ++ NAME_SERVER=12.34.5.67
[la_regression_test] ++ VALHALLA_CONCURRENCY=
[la_regression_test] ++ BASELINE_FILE=./baseline.txt
[la_regression_test] ++ BUILD_FILE=./build.txt
[la_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[la_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[la_regression_test] ++ MAPDATA_REGION=NA
[la_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[la_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[la_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[la_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[la_regression_test] +++ sed -e s/-/_/g
[la_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[la_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[la_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_regression_test] + [[ -n true ]]
[la_regression_test] + sync_aws_mapdata
[la_regression_test] + which aws
[la_regression_test] /usr/bin/aws
[la_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[la_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[taiwan_boundary] Processing 1715 routes
[taiwan_boundary] Angles) Boundary: taiwan_boundary | Total routes: 1715 | Total turns compared: 14672 |  Mismatches: 629 | Mismatch pct: 4.29 | Skipped: 15259
[taiwan_boundary] + cleanup_routing_engine
[taiwan_boundary] + [[ -n '' ]]
[taiwan_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[taiwan_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + gzip
[taiwan_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[Pipeline] [taiwan_boundary] stash
[la_regression_test] + create_network
[la_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[la_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[la_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[la_regression_test] ++ wc -l
[la_regression_test] + network_count=1
[la_regression_test] + test 1 -eq 2
[la_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[la_regression_test] Creating network jenkins_ValhallaPipeline_1004_NA
[la_regression_test] + docker network create jenkins_ValhallaPipeline_1004_NA
[la_regression_test] 36e7955a603f890d4227a6351c26441066068ecb23f20798547fe563daee7704
[la_regression_test] + launch_postgis
[la_regression_test] + [[ -n yes ]]
[la_regression_test] + return 0
[Pipeline] [la_regression_test] sh
[la_regression_test] [ValhallaPipeline] Running shell script
[la_regression_test] + scripts/dump-map-info.sh la_regression_test
[la_regression_test] ++ realpath scripts/dump-map-info.sh
[la_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[la_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[la_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[la_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[la_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] ++ POSTGIS=mdillon/postgis
[la_regression_test] ++ POSTGIS_LABEL=pg.test.com
[la_regression_test] ++ PG_USER=postgres
[la_regression_test] ++ PG_PASSWD=
[la_regression_test] ++ PG_DB=postgres
[la_regression_test] ++ INSIGHT_SCHEMA=insight
[la_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[la_regression_test] ++ VALHALLA_BRANCH=origin/master
[la_regression_test] ++ NAME_SERVER=12.34.5.67
[la_regression_test] ++ VALHALLA_CONCURRENCY=
[la_regression_test] ++ BASELINE_FILE=./baseline.txt
[la_regression_test] ++ BUILD_FILE=./build.txt
[la_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[la_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[la_regression_test] ++ MAPDATA_REGION=NA
[la_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[la_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[la_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[la_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[la_regression_test] +++ sed -e s/-/_/g
[la_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[la_regression_test] + BOUNDARY=la_regression_test
[la_regression_test] + dump_map_info la_regression_test
[la_regression_test] + BOUNDARY=la_regression_test
[la_regression_test] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[la_regression_test] + mapdata_version=mapdata-la_regression_test.version
[la_regression_test] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-la_regression_test.version
[Pipeline] [la_regression_test] sh
[la_regression_test] [ValhallaPipeline] Running shell script
[la_regression_test] + scripts/run-route-diagnostics.sh la_regression_test
[la_regression_test] + BOUNDARY=la_regression_test
[la_regression_test] + FAILURE_THRESHOLD=20
[la_regression_test] ++ realpath scripts/run-route-diagnostics.sh
[la_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[la_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[la_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[la_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[la_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] ++ POSTGIS=mdillon/postgis
[la_regression_test] ++ POSTGIS_LABEL=pg.test.com
[la_regression_test] ++ PG_USER=postgres
[la_regression_test] ++ PG_PASSWD=
[la_regression_test] ++ PG_DB=postgres
[la_regression_test] ++ INSIGHT_SCHEMA=insight
[la_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[la_regression_test] ++ VALHALLA_BRANCH=origin/master
[la_regression_test] ++ NAME_SERVER=12.34.5.67
[la_regression_test] ++ VALHALLA_CONCURRENCY=
[la_regression_test] ++ BASELINE_FILE=./baseline.txt
[la_regression_test] ++ BUILD_FILE=./build.txt
[la_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[la_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[la_regression_test] ++ MAPDATA_REGION=NA
[la_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[la_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[la_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[la_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[la_regression_test] +++ sed -e s/-/_/g
[la_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[la_regression_test] + launch_postgis
[la_regression_test] + [[ -n yes ]]
[la_regression_test] + return 0
[la_regression_test] + launch_routing_engine nowait
[la_regression_test] + [[ -n '' ]]
[la_regression_test] + wait_for_routing_service=nowait
[la_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[la_regression_test] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[la_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[la_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[la_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[la_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[la_regression_test] + local_host=localhost:8002
[la_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[la_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[la_regression_test] ++ print_regional_request
[la_regression_test] ++ case "$MAPDATA_REGION" in
[la_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[taiwan_boundary] Stashed 12 file(s)
[Pipeline] [taiwan_boundary] sh
[taiwan_boundary] [ValhallaPipeline] Running shell script
[taiwan_boundary] + scripts/cleanup.sh
[taiwan_boundary] ++ realpath scripts/cleanup.sh
[taiwan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[taiwan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[taiwan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[taiwan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[taiwan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[taiwan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[taiwan_boundary] ++ POSTGIS=mdillon/postgis
[taiwan_boundary] ++ POSTGIS_LABEL=pg.test.com
[taiwan_boundary] ++ PG_USER=postgres
[taiwan_boundary] ++ PG_PASSWD=
[taiwan_boundary] ++ PG_DB=postgres
[taiwan_boundary] ++ INSIGHT_SCHEMA=insight
[taiwan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[taiwan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[taiwan_boundary] ++ VALHALLA_BRANCH=origin/master
[taiwan_boundary] ++ NAME_SERVER=12.34.5.67
[taiwan_boundary] ++ VALHALLA_CONCURRENCY=
[taiwan_boundary] ++ BASELINE_FILE=./baseline.txt
[taiwan_boundary] ++ BUILD_FILE=./build.txt
[taiwan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[taiwan_boundary] ++ MAPDATA_VERSION=TW-170616-136
[taiwan_boundary] ++ MAPDATA_REGION=TW
[taiwan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/TW-170616-136/VERSION
[taiwan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/TW-170616-136/tm/TW
[taiwan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[taiwan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[taiwan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] +++ sed -e s/-/_/g
[taiwan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] + cleanup_network
[taiwan_boundary] + [[ jenkins_ValhallaPipeline_1004_TW != \h\o\s\t ]]
[taiwan_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[taiwan_boundary] + leading='s/^[[:space:]]*//'
[taiwan_boundary] + trailing='s/[[:space:]]*$//'
[taiwan_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] ++ tr -s ' '
[taiwan_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[taiwan_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_TW'
[taiwan_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] + docker network rm jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] jenkins_ValhallaPipeline_1004_TW
[taiwan_boundary] + cleanup_routing_engine
[taiwan_boundary] + [[ -n '' ]]
[taiwan_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW'
[taiwan_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + gzip
[taiwan_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_TW
[taiwan_boundary] + true
[Pipeline] [taiwan_boundary] }
[Pipeline] [taiwan_boundary] // withEnv
[Pipeline] [taiwan_boundary] }
[seattle_regression_test] Running on docker-tm-04 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [taiwan_boundary] // node
[Pipeline] [seattle_regression_test] {
[Pipeline] [taiwan_boundary] }
[Pipeline] [seattle_regression_test] withEnv
[Pipeline] [seattle_regression_test] {
[Pipeline] [seattle_regression_test] checkout
[seattle_regression_test]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[seattle_regression_test] Fetching changes from the remote Git repository
[seattle_regression_test]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[seattle_regression_test] Pruning obsolete local branches
[seattle_regression_test] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[seattle_regression_test]  > /usr/bin/git --version # timeout=10
[seattle_regression_test] using GIT_SSH to set credentials second sqa-auto for valhalla
[seattle_regression_test]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[seattle_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[seattle_regression_test]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[seattle_regression_test] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[seattle_regression_test]  > /usr/bin/git config core.sparsecheckout # timeout=10
[seattle_regression_test]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[seattle_regression_test] Cleaning workspace
[seattle_regression_test]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[seattle_regression_test] Resetting working tree
[seattle_regression_test]  > /usr/bin/git reset --hard # timeout=10
[seattle_regression_test]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [seattle_regression_test] unstash
[houston_regression_test] Saving error table with filename: max-error-table-houston_regression_test.png
[houston_regression_test] Plotly server error saving max-error-table-houston_regression_test.png, retrying #1
[houston_regression_test] Plotly server error saving max-error-table-houston_regression_test.png, retrying #2
[houston_regression_test] Plotly server error saving max-error-table-houston_regression_test.png, retrying #3
[houston_regression_test] Plotly server error saving max-error-table-houston_regression_test.png, retrying #4
[houston_regression_test] Plotly server error saving max-error-table-houston_regression_test.png, retrying #5
[houston_regression_test] Saving max error chart with filename: max-error-hist-houston_regression_test.png
[houston_regression_test] Plotly server error saving max-error-hist-houston_regression_test.png, retrying #1
[houston_regression_test] Plotly server error saving max-error-hist-houston_regression_test.png, retrying #2
[houston_regression_test] Plotly server error saving max-error-hist-houston_regression_test.png, retrying #3
[houston_regression_test] Plotly server error saving max-error-hist-houston_regression_test.png, retrying #4
[houston_regression_test] Plotly server error saving max-error-hist-houston_regression_test.png, retrying #5
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary houston_regression_test -tag _jenkins-ValhallaPipeline-1004'
[houston_regression_test] Guidance) Boundary: houston_regression_test | Total: 97 | Steps Failed Count: 49 | Unnamed Start Count: 7 | Unnamed Middle Count: 2 | Unnamed Mid Short Count: 1 | Unnamed Mid Medium Count: 2 | Unnamed Mid Long Count: 0 | Unnamed End Count: 4 | Unnamed Verbal Count: 0
[houston_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary houston_regression_test -tag _jenkins-ValhallaPipeline-1004'
[houston_regression_test] Processing 97 routes
[houston_regression_test] Angles) Boundary: houston_regression_test | Total routes: 97 | Total turns compared: 97 |  Mismatches: 0 | Mismatch pct: 0.0 | Skipped: 0
[houston_regression_test] + cleanup_routing_engine
[houston_regression_test] + [[ -n '' ]]
[houston_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[houston_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + gzip
[houston_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [houston_regression_test] stash
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + grep '"error":'
[Pipeline] [seattle_regression_test] sh
[seattle_regression_test] [ValhallaPipeline] Running shell script
[seattle_regression_test] + scripts/setup.sh
[seattle_regression_test] ++ realpath scripts/setup.sh
[seattle_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[seattle_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[seattle_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[seattle_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seattle_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] ++ POSTGIS=mdillon/postgis
[seattle_regression_test] ++ POSTGIS_LABEL=pg.test.com
[seattle_regression_test] ++ PG_USER=postgres
[seattle_regression_test] ++ PG_PASSWD=
[seattle_regression_test] ++ PG_DB=postgres
[seattle_regression_test] ++ INSIGHT_SCHEMA=insight
[seattle_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[seattle_regression_test] ++ VALHALLA_BRANCH=origin/master
[seattle_regression_test] ++ NAME_SERVER=12.34.5.67
[seattle_regression_test] ++ VALHALLA_CONCURRENCY=
[seattle_regression_test] ++ BASELINE_FILE=./baseline.txt
[seattle_regression_test] ++ BUILD_FILE=./build.txt
[seattle_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[seattle_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[seattle_regression_test] ++ MAPDATA_REGION=NA
[seattle_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[seattle_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[seattle_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[seattle_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] +++ sed -e s/-/_/g
[seattle_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] + docker images --format '{{.Repository}}:{{.Tag}}'
[seattle_regression_test] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_regression_test] docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_regression_test] + [[ -n true ]]
[seattle_regression_test] + sync_aws_mapdata
[seattle_regression_test] + which aws
[seattle_regression_test] /usr/bin/aws
[seattle_regression_test] + [[ ! -d /jenkins/autopilot-maps ]]
[seattle_regression_test] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/NA-170714-148/ /jenkins/autopilot-maps/NA-170714-148
[houston_regression_test] Stashed 11 file(s)
[Pipeline] [houston_regression_test] sh
[houston_regression_test] [ValhallaPipeline] Running shell script
[houston_regression_test] + scripts/cleanup.sh
[houston_regression_test] ++ realpath scripts/cleanup.sh
[houston_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[houston_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[houston_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[houston_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[houston_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[houston_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[houston_regression_test] ++ POSTGIS=mdillon/postgis
[houston_regression_test] ++ POSTGIS_LABEL=pg.test.com
[houston_regression_test] ++ PG_USER=postgres
[houston_regression_test] ++ PG_PASSWD=
[houston_regression_test] ++ PG_DB=postgres
[houston_regression_test] ++ INSIGHT_SCHEMA=insight
[houston_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[houston_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[houston_regression_test] ++ VALHALLA_BRANCH=origin/master
[houston_regression_test] ++ NAME_SERVER=12.34.5.67
[houston_regression_test] ++ VALHALLA_CONCURRENCY=
[houston_regression_test] ++ BASELINE_FILE=./baseline.txt
[houston_regression_test] ++ BUILD_FILE=./build.txt
[houston_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[houston_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[houston_regression_test] ++ MAPDATA_REGION=NA
[houston_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[houston_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[houston_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[houston_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[houston_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] +++ sed -e s/-/_/g
[houston_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] + cleanup_network
[houston_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[houston_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[houston_regression_test] + leading='s/^[[:space:]]*//'
[houston_regression_test] + trailing='s/[[:space:]]*$//'
[houston_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[houston_regression_test] ++ tr -s ' '
[houston_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[houston_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] jenkins_ValhallaPipeline_1004_NA
[houston_regression_test] + cleanup_routing_engine
[houston_regression_test] + [[ -n '' ]]
[houston_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[houston_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + gzip
[houston_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[houston_regression_test] + true
[Pipeline] [houston_regression_test] }
[Pipeline] [houston_regression_test] // withEnv
[Pipeline] [houston_regression_test] }
[uae_boundary] Running on docker-tm-03 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [houston_regression_test] // node
[Pipeline] [uae_boundary] {
[Pipeline] [houston_regression_test] }
[Pipeline] [uae_boundary] withEnv
[Pipeline] [uae_boundary] {
[Pipeline] [uae_boundary] checkout
[uae_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[uae_boundary] Fetching changes from the remote Git repository
[uae_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[uae_boundary] Pruning obsolete local branches
[uae_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[uae_boundary]  > /usr/bin/git --version # timeout=10
[uae_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[uae_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[uae_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[uae_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[uae_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[uae_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[uae_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[uae_boundary] Cleaning workspace
[uae_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[uae_boundary] Resetting working tree
[uae_boundary]  > /usr/bin/git reset --hard # timeout=10
[uae_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [uae_boundary] unstash
[la_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[la_regression_test] 4113fb95504d        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   11 seconds ago      Up 9 seconds        0.0.0.0:34578->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + kill_valhalla
[la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[la_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[la_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[la_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[la_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[Pipeline] [uae_boundary] sh
[uae_boundary] [ValhallaPipeline] Running shell script
[uae_boundary] + scripts/setup.sh
[uae_boundary] ++ realpath scripts/setup.sh
[uae_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[uae_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[uae_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[uae_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[uae_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] ++ POSTGIS=mdillon/postgis
[uae_boundary] ++ POSTGIS_LABEL=pg.test.com
[uae_boundary] ++ PG_USER=postgres
[uae_boundary] ++ PG_PASSWD=
[uae_boundary] ++ PG_DB=postgres
[uae_boundary] ++ INSIGHT_SCHEMA=insight
[uae_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[uae_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[uae_boundary] ++ VALHALLA_BRANCH=origin/master
[uae_boundary] ++ NAME_SERVER=12.34.5.67
[uae_boundary] ++ VALHALLA_CONCURRENCY=
[uae_boundary] ++ BASELINE_FILE=./baseline.txt
[uae_boundary] ++ BUILD_FILE=./build.txt
[uae_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[uae_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[uae_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[uae_boundary] ++ MAPDATA_VERSION=ME-170803-183
[uae_boundary] ++ MAPDATA_REGION=ME
[uae_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[uae_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[uae_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[uae_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[uae_boundary] +++ sed -e s/-/_/g
[uae_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[uae_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[uae_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[uae_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[uae_boundary] + [[ -n true ]]
[uae_boundary] + sync_aws_mapdata
[uae_boundary] + which aws
[uae_boundary] /usr/bin/aws
[uae_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[uae_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/ME-170803-183/ /jenkins/autopilot-maps/ME-170803-183
[la_regression_test] + launch_routing_engine
[la_regression_test] + [[ -n '' ]]
[la_regression_test] + wait_for_routing_service=wait
[la_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] ++ grep Status
[la_regression_test] ++ awk -F: '{print $2}'
[la_regression_test] ++ tr -d ' ",'
[la_regression_test] + container_status=running
[la_regression_test] + [[ running == \e\x\i\t\e\d ]]
[la_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[la_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[la_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[la_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[la_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + output='{<nil> [] [4113fb95504d] 36e7955a603f890d4227a6351c26441066068ecb23f20798547fe563daee7704 52de9723ff1fbfa12281c4215b19e7e7c34cf10750415df50e1497a67782998e 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[la_regression_test] + [[ {<nil> [] [4113fb95504d] 36e7955a603f890d4227a6351c26441066068ecb23f20798547fe563daee7704 52de9723ff1fbfa12281c4215b19e7e7c34cf10750415df50e1497a67782998e 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[la_regression_test] + return 0
[la_regression_test] + local_host=localhost:8002
[la_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[la_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[la_regression_test] ++ print_regional_request
[la_regression_test] ++ case "$MAPDATA_REGION" in
[la_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[la_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[uae_boundary] + create_network
[uae_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_ME
[uae_boundary] + network=jenkins_ValhallaPipeline_1004_ME
[uae_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_ME
[uae_boundary] ++ wc -l
[uae_boundary] + network_count=1
[uae_boundary] + test 1 -eq 2
[uae_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_ME'
[uae_boundary] Creating network jenkins_ValhallaPipeline_1004_ME
[uae_boundary] + docker network create jenkins_ValhallaPipeline_1004_ME
[uae_boundary] 6b38807e4f195cd8624d1e4bf4ef7caa11c20cc80993bb0d0bef8eeaafeade25
[uae_boundary] + launch_postgis
[uae_boundary] + [[ -n yes ]]
[uae_boundary] + return 0
[Pipeline] [uae_boundary] sh
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[la_regression_test] + grep '"error":'
[uae_boundary] [ValhallaPipeline] Running shell script
[uae_boundary] + scripts/dump-map-info.sh uae_boundary
[uae_boundary] ++ realpath scripts/dump-map-info.sh
[uae_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[uae_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[uae_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[uae_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[uae_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] ++ POSTGIS=mdillon/postgis
[uae_boundary] ++ POSTGIS_LABEL=pg.test.com
[uae_boundary] ++ PG_USER=postgres
[uae_boundary] ++ PG_PASSWD=
[uae_boundary] ++ PG_DB=postgres
[uae_boundary] ++ INSIGHT_SCHEMA=insight
[uae_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[uae_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[uae_boundary] ++ VALHALLA_BRANCH=origin/master
[uae_boundary] ++ NAME_SERVER=12.34.5.67
[uae_boundary] ++ VALHALLA_CONCURRENCY=
[uae_boundary] ++ BASELINE_FILE=./baseline.txt
[uae_boundary] ++ BUILD_FILE=./build.txt
[uae_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[uae_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[uae_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[uae_boundary] ++ MAPDATA_VERSION=ME-170803-183
[uae_boundary] ++ MAPDATA_REGION=ME
[uae_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[uae_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[uae_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[uae_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[uae_boundary] +++ sed -e s/-/_/g
[uae_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[uae_boundary] + BOUNDARY=uae_boundary
[uae_boundary] + dump_map_info uae_boundary
[uae_boundary] + BOUNDARY=uae_boundary
[uae_boundary] + [[ -r /jenkins/autopilot-maps/ME-170803-183/VERSION ]]
[uae_boundary] + mapdata_version=mapdata-uae_boundary.version
[uae_boundary] + cp /jenkins/autopilot-maps/ME-170803-183/VERSION mapdata-uae_boundary.version
[Pipeline] [uae_boundary] sh
[uae_boundary] [ValhallaPipeline] Running shell script
[uae_boundary] + scripts/run-route-diagnostics.sh uae_boundary
[uae_boundary] + BOUNDARY=uae_boundary
[uae_boundary] + FAILURE_THRESHOLD=20
[uae_boundary] ++ realpath scripts/run-route-diagnostics.sh
[uae_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[uae_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[uae_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[uae_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[uae_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] ++ POSTGIS=mdillon/postgis
[uae_boundary] ++ POSTGIS_LABEL=pg.test.com
[uae_boundary] ++ PG_USER=postgres
[uae_boundary] ++ PG_PASSWD=
[uae_boundary] ++ PG_DB=postgres
[uae_boundary] ++ INSIGHT_SCHEMA=insight
[uae_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[uae_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[uae_boundary] ++ VALHALLA_BRANCH=origin/master
[uae_boundary] ++ NAME_SERVER=12.34.5.67
[uae_boundary] ++ VALHALLA_CONCURRENCY=
[uae_boundary] ++ BASELINE_FILE=./baseline.txt
[uae_boundary] ++ BUILD_FILE=./build.txt
[uae_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[uae_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[uae_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[uae_boundary] ++ MAPDATA_VERSION=ME-170803-183
[uae_boundary] ++ MAPDATA_REGION=ME
[uae_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[uae_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[uae_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[uae_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[uae_boundary] +++ sed -e s/-/_/g
[uae_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[uae_boundary] + launch_postgis
[uae_boundary] + [[ -n yes ]]
[uae_boundary] + return 0
[uae_boundary] + launch_routing_engine nowait
[uae_boundary] + [[ -n '' ]]
[uae_boundary] + wait_for_routing_service=nowait
[uae_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P'
[uae_boundary] + [[ -d /jenkins/autopilot-maps/ME-170803-183/tm/ME ]]
[uae_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[uae_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[uae_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[uae_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'ln -sf /mapdata/ME-170803-183/tm/ME /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[uae_boundary] + local_host=localhost:8002
[uae_boundary] + [[ jenkins_ValhallaPipeline_1004_ME == \h\o\s\t ]]
[uae_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002
[uae_boundary] ++ print_regional_request
[uae_boundary] ++ case "$MAPDATA_REGION" in
[uae_boundary] ++ request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] ++ echo 'route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] + request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[la_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[la_regression_test] 4113fb95504d        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   24 seconds ago      Up 22 seconds       0.0.0.0:34578->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary la_regression_test -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] + grep '"error":'
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[la_regression_test] Namespace(bias=1, boundary='la_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[la_regression_test] Retrieving baseline routes
[la_regression_test] Retrieving valhalla routes
[la_regression_test] Valhalla request threadpool size: 10
[uae_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[uae_boundary] d611532c260d        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   4 seconds ago       Up 3 seconds        0.0.0.0:34894->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + kill_valhalla
[uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME pkill -f valhalla_route_service
[uae_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[uae_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[uae_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[uae_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:/navigation/valhalla-install.tgz
[uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[uae_boundary] + launch_routing_engine
[uae_boundary] + [[ -n '' ]]
[uae_boundary] + wait_for_routing_service=wait
[uae_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] ++ grep Status
[uae_boundary] ++ awk -F: '{print $2}'
[uae_boundary] ++ tr -d ' ",'
[uae_boundary] + container_status=running
[uae_boundary] + [[ running == \e\x\i\t\e\d ]]
[uae_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME pgrep -f valhalla_route_service
[uae_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[uae_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_ME ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + network=jenkins_ValhallaPipeline_1004_ME
[uae_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_ME}}'
[uae_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_ME}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + output='{<nil> [] [d611532c260d] 6b38807e4f195cd8624d1e4bf4ef7caa11c20cc80993bb0d0bef8eeaafeade25 8c10b6f765dc44353d7d44ac6cdb4ba60ba596e525bc9a2abf30830c686c1c33 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[uae_boundary] + [[ {<nil> [] [d611532c260d] 6b38807e4f195cd8624d1e4bf4ef7caa11c20cc80993bb0d0bef8eeaafeade25 8c10b6f765dc44353d7d44ac6cdb4ba60ba596e525bc9a2abf30830c686c1c33 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[uae_boundary] + return 0
[uae_boundary] + local_host=localhost:8002
[uae_boundary] + [[ jenkins_ValhallaPipeline_1004_ME == \h\o\s\t ]]
[uae_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002
[uae_boundary] ++ print_regional_request
[uae_boundary] ++ case "$MAPDATA_REGION" in
[uae_boundary] ++ request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] ++ echo 'route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] + request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[uae_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[uae_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[la_regression_test] Out of 30 routes, found 30 trips
[la_regression_test] Exporting 30 valhalla routes to insight database
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary la_regression_test -tag _jenkins-ValhallaPipeline-1004'
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[la_regression_test] Processing 30 polylines
[seattle_regression_test] + create_network
[seattle_regression_test] + _network_exists_ jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] ++ wc -l
[seattle_regression_test] + network_count=1
[seattle_regression_test] + test 1 -eq 2
[seattle_regression_test] + echo 'Creating network jenkins_ValhallaPipeline_1004_NA'
[seattle_regression_test] Creating network jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] + docker network create jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] e8fbf69a205990842c005807ad990ceb543f0d8c0b46b0169ecc15f97ac3fc9a
[seattle_regression_test] + launch_postgis
[seattle_regression_test] + [[ -n yes ]]
[seattle_regression_test] + return 0
[uae_boundary] + grep '"error":'
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[Pipeline] [seattle_regression_test] sh
[la_regression_test] Saving results
[seattle_regression_test] [ValhallaPipeline] Running shell script
[seattle_regression_test] + scripts/dump-map-info.sh seattle_regression_test
[seattle_regression_test] ++ realpath scripts/dump-map-info.sh
[seattle_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[seattle_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[seattle_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[seattle_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seattle_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] ++ POSTGIS=mdillon/postgis
[seattle_regression_test] ++ POSTGIS_LABEL=pg.test.com
[seattle_regression_test] ++ PG_USER=postgres
[seattle_regression_test] ++ PG_PASSWD=
[seattle_regression_test] ++ PG_DB=postgres
[seattle_regression_test] ++ INSIGHT_SCHEMA=insight
[seattle_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[seattle_regression_test] ++ VALHALLA_BRANCH=origin/master
[seattle_regression_test] ++ NAME_SERVER=12.34.5.67
[seattle_regression_test] ++ VALHALLA_CONCURRENCY=
[seattle_regression_test] ++ BASELINE_FILE=./baseline.txt
[seattle_regression_test] ++ BUILD_FILE=./build.txt
[seattle_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[seattle_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[seattle_regression_test] ++ MAPDATA_REGION=NA
[seattle_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[seattle_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[seattle_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[seattle_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] +++ sed -e s/-/_/g
[seattle_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] + BOUNDARY=seattle_regression_test
[seattle_regression_test] + dump_map_info seattle_regression_test
[seattle_regression_test] + BOUNDARY=seattle_regression_test
[seattle_regression_test] + [[ -r /jenkins/autopilot-maps/NA-170714-148/VERSION ]]
[seattle_regression_test] + mapdata_version=mapdata-seattle_regression_test.version
[seattle_regression_test] + cp /jenkins/autopilot-maps/NA-170714-148/VERSION mapdata-seattle_regression_test.version
[Pipeline] [seattle_regression_test] sh
[seattle_regression_test] [ValhallaPipeline] Running shell script
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary la_regression_test -tag _jenkins-ValhallaPipeline-1004'
[uae_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[uae_boundary] d611532c260d        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   10 seconds ago      Up 10 seconds       0.0.0.0:34894->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME -host pg.test.com -boundary uae_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[seattle_regression_test] + scripts/run-route-diagnostics.sh seattle_regression_test
[seattle_regression_test] + BOUNDARY=seattle_regression_test
[seattle_regression_test] + FAILURE_THRESHOLD=20
[seattle_regression_test] ++ realpath scripts/run-route-diagnostics.sh
[seattle_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[seattle_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[seattle_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[seattle_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seattle_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] ++ POSTGIS=mdillon/postgis
[seattle_regression_test] ++ POSTGIS_LABEL=pg.test.com
[seattle_regression_test] ++ PG_USER=postgres
[seattle_regression_test] ++ PG_PASSWD=
[seattle_regression_test] ++ PG_DB=postgres
[seattle_regression_test] ++ INSIGHT_SCHEMA=insight
[seattle_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[seattle_regression_test] ++ VALHALLA_BRANCH=origin/master
[seattle_regression_test] ++ NAME_SERVER=12.34.5.67
[seattle_regression_test] ++ VALHALLA_CONCURRENCY=
[seattle_regression_test] ++ BASELINE_FILE=./baseline.txt
[seattle_regression_test] ++ BUILD_FILE=./build.txt
[seattle_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[seattle_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[seattle_regression_test] ++ MAPDATA_REGION=NA
[seattle_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[seattle_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[seattle_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[seattle_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] +++ sed -e s/-/_/g
[seattle_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] + launch_postgis
[seattle_regression_test] + [[ -n yes ]]
[seattle_regression_test] + return 0
[seattle_regression_test] + launch_routing_engine nowait
[seattle_regression_test] + [[ -n '' ]]
[seattle_regression_test] + wait_for_routing_service=nowait
[seattle_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P'
[seattle_regression_test] + [[ -d /jenkins/autopilot-maps/NA-170714-148/tm/NA ]]
[seattle_regression_test] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[seattle_regression_test] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[seattle_regression_test] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA --network jenkins_ValhallaPipeline_1004_NA --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[seattle_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'ln -sf /mapdata/NA-170714-148/tm/NA /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[seattle_regression_test] + local_host=localhost:8002
[seattle_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[seattle_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[seattle_regression_test] ++ print_regional_request
[seattle_regression_test] ++ case "$MAPDATA_REGION" in
[seattle_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[uae_boundary] Namespace(bias=1, boundary='uae_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME', valhalla_port=8002)
[uae_boundary] Retrieving baseline routes
[la_regression_test] Routing) Boundary: la_regression_test | Requested: 30 | Successful: 30 | Failed: 0 | Match pct: 76.67
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary la_regression_test -tag _jenkins-ValhallaPipeline-1004'
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + grep '"error":'
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[uae_boundary] Retrieving valhalla routes
[uae_boundary] Valhalla request threadpool size: 10
[seattle_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[seattle_regression_test] e77d952d83b3        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   9 seconds ago       Up 8 seconds        0.0.0.0:35247->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + kill_valhalla
[seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pkill -f valhalla_route_service
[seattle_regression_test] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[seattle_regression_test] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[seattle_regression_test] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[seattle_regression_test] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:/navigation/valhalla-install.tgz
[seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[seattle_regression_test] + launch_routing_engine
[seattle_regression_test] + [[ -n '' ]]
[seattle_regression_test] + wait_for_routing_service=wait
[seattle_regression_test] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] ++ awk -F: '{print $2}'
[seattle_regression_test] ++ tr -d ' ",'
[seattle_regression_test] ++ grep Status
[seattle_regression_test] + container_status=running
[seattle_regression_test] + [[ running == \e\x\i\t\e\d ]]
[seattle_regression_test] + [[ running != \r\u\n\n\i\n\g ]]
[seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA pgrep -f valhalla_route_service
[seattle_regression_test] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[seattle_regression_test] + _network_has_container_ jenkins_ValhallaPipeline_1004_NA ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + network=jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}'
[seattle_regression_test] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_NA}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + output='{<nil> [] [e77d952d83b3] e8fbf69a205990842c005807ad990ceb543f0d8c0b46b0169ecc15f97ac3fc9a 20cbb7ef2e5abdea7719ede8b25611891911aab180d32ae4007ad6fd15638079 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02}'
[seattle_regression_test] + [[ {<nil> [] [e77d952d83b3] e8fbf69a205990842c005807ad990ceb543f0d8c0b46b0169ecc15f97ac3fc9a 20cbb7ef2e5abdea7719ede8b25611891911aab180d32ae4007ad6fd15638079 172.19.0.1 172.19.0.2 16   0 02:42:ac:13:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[seattle_regression_test] + return 0
[seattle_regression_test] + local_host=localhost:8002
[seattle_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA == \h\o\s\t ]]
[seattle_regression_test] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002
[seattle_regression_test] ++ print_regional_request
[seattle_regression_test] ++ case "$MAPDATA_REGION" in
[seattle_regression_test] ++ request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] ++ echo 'route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + request='route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + local_request='http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + curl_opts='--silent --globoff --connect-timeout 5'
[seattle_regression_test] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + grep '"error":'
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA:8002/route?json={"locations":[{"lat":37.26802,"lon":-121.90667,"type":"break"},{"lat":37.62131,"lon":-122.37896,"type":"break"}],"costing":"auto"}'
[seattle_regression_test] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[seattle_regression_test] e77d952d83b3        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   20 seconds ago      Up 19 seconds       0.0.0.0:35247->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + name_suffix=_jenkins-ValhallaPipeline-1004
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA -host pg.test.com -boundary seattle_regression_test -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[seattle_regression_test] Namespace(bias=1, boundary='seattle_regression_test', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA', valhalla_port=8002)
[seattle_regression_test] Retrieving baseline routes
[seattle_regression_test] Retrieving valhalla routes
[seattle_regression_test] Valhalla request threadpool size: 10
[seattle_regression_test] Out of 15 routes, found 15 trips
[seattle_regression_test] Exporting 15 valhalla routes to insight database
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary seattle_regression_test -tag _jenkins-ValhallaPipeline-1004'
[seattle_regression_test] Processing 15 polylines
[seattle_regression_test] Saving results
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary seattle_regression_test -tag _jenkins-ValhallaPipeline-1004'
[seattle_regression_test] Routing) Boundary: seattle_regression_test | Requested: 15 | Successful: 15 | Failed: 0 | Match pct: 53.33
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary seattle_regression_test -tag _jenkins-ValhallaPipeline-1004'
[bayarea_regression_test] Saving error table with filename: max-error-table-bayarea_regression_test.png
[bayarea_regression_test] Plotly server error saving max-error-table-bayarea_regression_test.png, retrying #1
[bayarea_regression_test] Plotly server error saving max-error-table-bayarea_regression_test.png, retrying #2
[bayarea_regression_test] Plotly server error saving max-error-table-bayarea_regression_test.png, retrying #3
[bayarea_regression_test] Plotly server error saving max-error-table-bayarea_regression_test.png, retrying #4
[bayarea_regression_test] Plotly server error saving max-error-table-bayarea_regression_test.png, retrying #5
[bayarea_regression_test] Saving max error chart with filename: max-error-hist-bayarea_regression_test.png
[bayarea_regression_test] Plotly server error saving max-error-hist-bayarea_regression_test.png, retrying #1
[bayarea_regression_test] Plotly server error saving max-error-hist-bayarea_regression_test.png, retrying #2
[bayarea_regression_test] Plotly server error saving max-error-hist-bayarea_regression_test.png, retrying #3
[bayarea_regression_test] Plotly server error saving max-error-hist-bayarea_regression_test.png, retrying #4
[bayarea_regression_test] Plotly server error saving max-error-hist-bayarea_regression_test.png, retrying #5
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary bayarea_regression_test -tag _jenkins-ValhallaPipeline-1004'
[bayarea_regression_test] Guidance) Boundary: bayarea_regression_test | Total: 14 | Steps Failed Count: 1 | Unnamed Start Count: 0 | Unnamed Middle Count: 1 | Unnamed Mid Short Count: 1 | Unnamed Mid Medium Count: 0 | Unnamed Mid Long Count: 0 | Unnamed End Count: 1 | Unnamed Verbal Count: 0
[bayarea_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary bayarea_regression_test -tag _jenkins-ValhallaPipeline-1004'
[bayarea_regression_test] Processing 14 routes
[bayarea_regression_test] Angles) Boundary: bayarea_regression_test | Total routes: 14 | Total turns compared: 14 |  Mismatches: 0 | Mismatch pct: 0.0 | Skipped: 0
[bayarea_regression_test] + cleanup_routing_engine
[bayarea_regression_test] + [[ -n '' ]]
[bayarea_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[bayarea_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + gzip
[bayarea_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [bayarea_regression_test] stash
[uae_boundary] Out of 1387 routes, found 1387 trips
[uae_boundary] Exporting 1387 valhalla routes to insight database
[bayarea_regression_test] Stashed 10 file(s)
[Pipeline] [bayarea_regression_test] sh
[bayarea_regression_test] [ValhallaPipeline] Running shell script
[bayarea_regression_test] + scripts/cleanup.sh
[bayarea_regression_test] ++ realpath scripts/cleanup.sh
[bayarea_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[bayarea_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[bayarea_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[bayarea_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[bayarea_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[bayarea_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[bayarea_regression_test] ++ POSTGIS=mdillon/postgis
[bayarea_regression_test] ++ POSTGIS_LABEL=pg.test.com
[bayarea_regression_test] ++ PG_USER=postgres
[bayarea_regression_test] ++ PG_PASSWD=
[bayarea_regression_test] ++ PG_DB=postgres
[bayarea_regression_test] ++ INSIGHT_SCHEMA=insight
[bayarea_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[bayarea_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[bayarea_regression_test] ++ VALHALLA_BRANCH=origin/master
[bayarea_regression_test] ++ NAME_SERVER=12.34.5.67
[bayarea_regression_test] ++ VALHALLA_CONCURRENCY=
[bayarea_regression_test] ++ BASELINE_FILE=./baseline.txt
[bayarea_regression_test] ++ BUILD_FILE=./build.txt
[bayarea_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[bayarea_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[bayarea_regression_test] ++ MAPDATA_REGION=NA
[bayarea_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[bayarea_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[bayarea_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[bayarea_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[bayarea_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] +++ sed -e s/-/_/g
[bayarea_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] + cleanup_network
[bayarea_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[bayarea_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[bayarea_regression_test] + leading='s/^[[:space:]]*//'
[bayarea_regression_test] + trailing='s/[[:space:]]*$//'
[bayarea_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[bayarea_regression_test] ++ tr -s ' '
[bayarea_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[bayarea_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] jenkins_ValhallaPipeline_1004_NA
[bayarea_regression_test] + cleanup_routing_engine
[bayarea_regression_test] + [[ -n '' ]]
[bayarea_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[bayarea_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + gzip
[bayarea_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[bayarea_regression_test] + true
[Pipeline] [bayarea_regression_test] }
[Pipeline] [bayarea_regression_test] // withEnv
[Pipeline] [bayarea_regression_test] }
[jordan_boundary] Running on docker-tm-06 in /jenkins/workspace/ValhallaPipeline
[Pipeline] [bayarea_regression_test] // node
[Pipeline] [jordan_boundary] {
[Pipeline] [bayarea_regression_test] }
[Pipeline] [jordan_boundary] withEnv
[Pipeline] [jordan_boundary] {
[Pipeline] [jordan_boundary] checkout
[jordan_boundary]  > /usr/bin/git rev-parse --is-inside-work-tree # timeout=10
[jordan_boundary] Fetching changes from the remote Git repository
[jordan_boundary]  > /usr/bin/git config remote.origin.url ssh://git@stash.test.com:1234/nav/tm-docker.git # timeout=10
[jordan_boundary] Pruning obsolete local branches
[jordan_boundary] Fetching upstream changes from ssh://git@stash.test.com:1234/nav/tm-docker.git
[jordan_boundary]  > /usr/bin/git --version # timeout=10
[jordan_boundary] using GIT_SSH to set credentials second sqa-auto for valhalla
[jordan_boundary]  > /usr/bin/git fetch --tags --progress ssh://git@stash.test.com:1234/nav/tm-docker.git +refs/heads/*:refs/remotes/origin/* --prune
[jordan_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/master^{commit} # timeout=10
[jordan_boundary]  > /usr/bin/git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
[jordan_boundary] Checking out Revision 095a4fbdf7fa0a0ee59387ff541f85eaee361686 (refs/remotes/origin/master)
[jordan_boundary]  > /usr/bin/git config core.sparsecheckout # timeout=10
[jordan_boundary]  > /usr/bin/git checkout -f 095a4fbdf7fa0a0ee59387ff541f85eaee361686
[jordan_boundary] Cleaning workspace
[jordan_boundary]  > /usr/bin/git rev-parse --verify HEAD # timeout=10
[jordan_boundary] Resetting working tree
[jordan_boundary]  > /usr/bin/git reset --hard # timeout=10
[jordan_boundary]  > /usr/bin/git clean -fdx # timeout=10
[Pipeline] [jordan_boundary] unstash
[Pipeline] [jordan_boundary] sh
[jordan_boundary] [ValhallaPipeline] Running shell script
[jordan_boundary] + scripts/setup.sh
[jordan_boundary] ++ realpath scripts/setup.sh
[jordan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[jordan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/setup.sh
[jordan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[jordan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[jordan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] ++ POSTGIS=mdillon/postgis
[jordan_boundary] ++ POSTGIS_LABEL=pg.test.com
[jordan_boundary] ++ PG_USER=postgres
[jordan_boundary] ++ PG_PASSWD=
[jordan_boundary] ++ PG_DB=postgres
[jordan_boundary] ++ INSIGHT_SCHEMA=insight
[jordan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[jordan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[jordan_boundary] ++ VALHALLA_BRANCH=origin/master
[jordan_boundary] ++ NAME_SERVER=12.34.5.67
[jordan_boundary] ++ VALHALLA_CONCURRENCY=
[jordan_boundary] ++ BASELINE_FILE=./baseline.txt
[jordan_boundary] ++ BUILD_FILE=./build.txt
[jordan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[jordan_boundary] ++ MAPDATA_VERSION=ME-170803-183
[jordan_boundary] ++ MAPDATA_REGION=ME
[jordan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[jordan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[jordan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[jordan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] +++ sed -e s/-/_/g
[jordan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] + docker images --format '{{.Repository}}:{{.Tag}}'
[jordan_boundary] + grep docker.dev.test.com/user/tesla-nav-server:2.0.5
[jordan_boundary] docker.dev.test.com/user/tesla-nav-server:2.0.5
[jordan_boundary] + [[ -n true ]]
[jordan_boundary] + sync_aws_mapdata
[jordan_boundary] + which aws
[jordan_boundary] /usr/bin/aws
[jordan_boundary] + [[ ! -d /jenkins/autopilot-maps ]]
[jordan_boundary] + aws s3 sync --only-show-errors s3://autopilot-maps/osm/release/valhalla/ME-170803-183/ /jenkins/autopilot-maps/ME-170803-183
[jordan_boundary] + create_network
[jordan_boundary] + _network_exists_ jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] + network=jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] ++ docker network ls --filter name=jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] ++ wc -l
[jordan_boundary] + network_count=1
[jordan_boundary] + test 1 -eq 2
[jordan_boundary] + echo 'Creating network jenkins_ValhallaPipeline_1004_ME'
[jordan_boundary] Creating network jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] + docker network create jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] 9c82fb559c2b57083d08bab00d2d09ea4ded82e0e419fb02a533f0ce18d959cc
[jordan_boundary] + launch_postgis
[jordan_boundary] + [[ -n yes ]]
[jordan_boundary] + return 0
[Pipeline] [jordan_boundary] sh
[jordan_boundary] [ValhallaPipeline] Running shell script
[jordan_boundary] + scripts/dump-map-info.sh jordan_boundary
[jordan_boundary] ++ realpath scripts/dump-map-info.sh
[jordan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[jordan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/dump-map-info.sh
[jordan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[jordan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[jordan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] ++ POSTGIS=mdillon/postgis
[jordan_boundary] ++ POSTGIS_LABEL=pg.test.com
[jordan_boundary] ++ PG_USER=postgres
[jordan_boundary] ++ PG_PASSWD=
[jordan_boundary] ++ PG_DB=postgres
[jordan_boundary] ++ INSIGHT_SCHEMA=insight
[jordan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[jordan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[jordan_boundary] ++ VALHALLA_BRANCH=origin/master
[jordan_boundary] ++ NAME_SERVER=12.34.5.67
[jordan_boundary] ++ VALHALLA_CONCURRENCY=
[jordan_boundary] ++ BASELINE_FILE=./baseline.txt
[jordan_boundary] ++ BUILD_FILE=./build.txt
[jordan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[jordan_boundary] ++ MAPDATA_VERSION=ME-170803-183
[jordan_boundary] ++ MAPDATA_REGION=ME
[jordan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[jordan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[jordan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[jordan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] +++ sed -e s/-/_/g
[jordan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] + BOUNDARY=jordan_boundary
[jordan_boundary] + dump_map_info jordan_boundary
[jordan_boundary] + BOUNDARY=jordan_boundary
[jordan_boundary] + [[ -r /jenkins/autopilot-maps/ME-170803-183/VERSION ]]
[jordan_boundary] + mapdata_version=mapdata-jordan_boundary.version
[jordan_boundary] + cp /jenkins/autopilot-maps/ME-170803-183/VERSION mapdata-jordan_boundary.version
[Pipeline] [jordan_boundary] sh
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary uae_boundary -tag _jenkins-ValhallaPipeline-1004'
[uae_boundary] Processing 1387 polylines
[jordan_boundary] [ValhallaPipeline] Running shell script
[jordan_boundary] + scripts/run-route-diagnostics.sh jordan_boundary
[jordan_boundary] + BOUNDARY=jordan_boundary
[jordan_boundary] + FAILURE_THRESHOLD=20
[jordan_boundary] ++ realpath scripts/run-route-diagnostics.sh
[jordan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[jordan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/run-route-diagnostics.sh
[jordan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[jordan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[jordan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] ++ POSTGIS=mdillon/postgis
[jordan_boundary] ++ POSTGIS_LABEL=pg.test.com
[jordan_boundary] ++ PG_USER=postgres
[jordan_boundary] ++ PG_PASSWD=
[jordan_boundary] ++ PG_DB=postgres
[jordan_boundary] ++ INSIGHT_SCHEMA=insight
[jordan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[jordan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[jordan_boundary] ++ VALHALLA_BRANCH=origin/master
[jordan_boundary] ++ NAME_SERVER=12.34.5.67
[jordan_boundary] ++ VALHALLA_CONCURRENCY=
[jordan_boundary] ++ BASELINE_FILE=./baseline.txt
[jordan_boundary] ++ BUILD_FILE=./build.txt
[jordan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[jordan_boundary] ++ MAPDATA_VERSION=ME-170803-183
[jordan_boundary] ++ MAPDATA_REGION=ME
[jordan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[jordan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[jordan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[jordan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] +++ sed -e s/-/_/g
[jordan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] + launch_postgis
[jordan_boundary] + [[ -n yes ]]
[jordan_boundary] + return 0
[jordan_boundary] + launch_routing_engine nowait
[jordan_boundary] + [[ -n '' ]]
[jordan_boundary] + wait_for_routing_service=nowait
[jordan_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + routing_args='--detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P'
[jordan_boundary] + [[ -d /jenkins/autopilot-maps/ME-170803-183/tm/ME ]]
[jordan_boundary] + routing_args+=' --volume /jenkins/autopilot-maps:/mapdata'
[jordan_boundary] + eval docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[jordan_boundary] ++ docker run --detach --name ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME --network jenkins_ValhallaPipeline_1004_ME --dns=12.34.5.67 -P --volume /jenkins/autopilot-maps:/mapdata docker.dev.test.com/user/tesla-nav-server:2.0.5 tail -f /dev/null
[jordan_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'ln -sf /mapdata/ME-170803-183/tm/ME /data &&         valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[jordan_boundary] + local_host=localhost:8002
[jordan_boundary] + [[ jenkins_ValhallaPipeline_1004_ME == \h\o\s\t ]]
[jordan_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002
[jordan_boundary] ++ print_regional_request
[jordan_boundary] ++ case "$MAPDATA_REGION" in
[jordan_boundary] ++ request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] ++ echo 'route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + grep '"error":'
[jordan_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[jordan_boundary] 67420fc3faea        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   5 seconds ago       Up 4 seconds        0.0.0.0:34687->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + kill_valhalla
[jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME pkill -f valhalla_route_service
[jordan_boundary] + install_valhalla_from_package /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[jordan_boundary] + inputfile=/jenkins/workspace/ValhallaPipeline/valhalla-install.tgz
[jordan_boundary] + [[ ! -r /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ]]
[jordan_boundary] + docker cp /jenkins/workspace/ValhallaPipeline/valhalla-install.tgz ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:/navigation/valhalla-install.tgz
[jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME /bin/bash -c 'cd /navigation     && tar xf valhalla-install.tgz -C /usr/local --overwrite --strip-components=1 valhalla-install     && tar xf valhalla-install.tgz -C /usr/local --overwrite conf'
[jordan_boundary] + launch_routing_engine
[jordan_boundary] + [[ -n '' ]]
[jordan_boundary] + wait_for_routing_service=wait
[jordan_boundary] + docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] ++ docker inspect ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] ++ tr -d ' ",'
[jordan_boundary] ++ grep Status
[jordan_boundary] ++ awk -F: '{print $2}'
[jordan_boundary] + container_status=running
[jordan_boundary] + [[ running == \e\x\i\t\e\d ]]
[jordan_boundary] + [[ running != \r\u\n\n\i\n\g ]]
[jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME pgrep -f valhalla_route_service
[jordan_boundary] + docker exec --detach ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME bash -c 'valhalla_route_service /usr/local/conf/valhalla.json  1>/proc/1/fd/1 2>/proc/1/fd/2'
[jordan_boundary] + _network_has_container_ jenkins_ValhallaPipeline_1004_ME ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + network=jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] + container=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + format='{{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_ME}}'
[jordan_boundary] ++ docker inspect '--format={{.NetworkSettings.Networks.jenkins_ValhallaPipeline_1004_ME}}' ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + output='{<nil> [] [67420fc3faea] 9c82fb559c2b57083d08bab00d2d09ea4ded82e0e419fb02a533f0ce18d959cc d2f548b715404865b0b97977b71c3c7b2c60f291b577a5678bbda329f7ece3ad 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02}'
[jordan_boundary] + [[ {<nil> [] [67420fc3faea] 9c82fb559c2b57083d08bab00d2d09ea4ded82e0e419fb02a533f0ce18d959cc d2f548b715404865b0b97977b71c3c7b2c60f291b577a5678bbda329f7ece3ad 172.18.0.1 172.18.0.2 16   0 02:42:ac:12:00:02} == *\<\n\o\ \v\a\l\u\e\>* ]]
[jordan_boundary] + return 0
[jordan_boundary] + local_host=localhost:8002
[jordan_boundary] + [[ jenkins_ValhallaPipeline_1004_ME == \h\o\s\t ]]
[jordan_boundary] + remote_host=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002
[jordan_boundary] ++ print_regional_request
[jordan_boundary] ++ case "$MAPDATA_REGION" in
[jordan_boundary] ++ request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] ++ echo 'route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + request='route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + local_request='http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + remote_request='http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + curl_opts='--silent --globoff --connect-timeout 5'
[jordan_boundary] + docker exec ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME curl --silent --globoff --connect-timeout 5 'http://localhost:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + grep '"error":'
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME docker.dev.test.com/user/tesla-nav-server:2.0.5 curl --silent --globoff --connect-timeout 5 'http://ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME:8002/route?json={"locations":[{"lat":24.424428,"lon":54.433707,"type":"break"},{"lat":24.496487,"lon":54.382442,"type":"break"}],"costing":"auto"}'
[jordan_boundary] + docker ps -f name=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] CONTAINER ID        IMAGE                                                          COMMAND               CREATED             STATUS              PORTS                     NAMES
[jordan_boundary] 67420fc3faea        docker.dev.test.com/user/tesla-nav-server:2.0.5   "tail -f /dev/null"   14 seconds ago      Up 12 seconds       0.0.0.0:34687->8002/tcp   ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + name_suffix=_jenkins-ValhallaPipeline-1004
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name collect_route__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_collection/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 collect_route.py -valhalla ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME -host pg.test.com -boundary jordan_boundary -tag=_jenkins-ValhallaPipeline-1004 -noprogress'
[uae_boundary] Saving results
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary uae_boundary -tag _jenkins-ValhallaPipeline-1004'
[jordan_boundary] Namespace(bias=1, boundary='jordan_boundary', database='postgres', host='pg.test.com', insert='valhalla', limit=-1, log='', maxworkers=10, noprogress=True, password='', port=5432, schema='insight', tag='_jenkins-ValhallaPipeline-1004', trips='', username='postgres', valhalla='ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME', valhalla_port=8002)
[jordan_boundary] Retrieving baseline routes
[jordan_boundary] Retrieving valhalla routes
[jordan_boundary] Valhalla request threadpool size: 10
[uae_boundary] Routing) Boundary: uae_boundary | Requested: 1387 | Successful: 1387 | Failed: 0 | Match pct: 46.21
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary uae_boundary -tag _jenkins-ValhallaPipeline-1004'
[la_regression_test] Saving error table with filename: max-error-table-la_regression_test.png
[la_regression_test] Plotly server error saving max-error-table-la_regression_test.png, retrying #1
[la_regression_test] Plotly server error saving max-error-table-la_regression_test.png, retrying #2
[la_regression_test] Plotly server error saving max-error-table-la_regression_test.png, retrying #3
[la_regression_test] Plotly server error saving max-error-table-la_regression_test.png, retrying #4
[la_regression_test] Plotly server error saving max-error-table-la_regression_test.png, retrying #5
[la_regression_test] Saving max error chart with filename: max-error-hist-la_regression_test.png
[la_regression_test] Plotly server error saving max-error-hist-la_regression_test.png, retrying #1
[la_regression_test] Plotly server error saving max-error-hist-la_regression_test.png, retrying #2
[la_regression_test] Plotly server error saving max-error-hist-la_regression_test.png, retrying #3
[la_regression_test] Plotly server error saving max-error-hist-la_regression_test.png, retrying #4
[la_regression_test] Plotly server error saving max-error-hist-la_regression_test.png, retrying #5
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary la_regression_test -tag _jenkins-ValhallaPipeline-1004'
[la_regression_test] Guidance) Boundary: la_regression_test | Total: 30 | Steps Failed Count: 5 | Unnamed Start Count: 0 | Unnamed Middle Count: 4 | Unnamed Mid Short Count: 2 | Unnamed Mid Medium Count: 1 | Unnamed Mid Long Count: 1 | Unnamed End Count: 0 | Unnamed Verbal Count: 0
[la_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary la_regression_test -tag _jenkins-ValhallaPipeline-1004'
[la_regression_test] Processing 30 routes
[la_regression_test] Angles) Boundary: la_regression_test | Total routes: 30 | Total turns compared: 30 |  Mismatches: 0 | Mismatch pct: 0.0 | Skipped: 0
[la_regression_test] + cleanup_routing_engine
[la_regression_test] + [[ -n '' ]]
[la_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[la_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + gzip
[la_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [la_regression_test] stash
[la_regression_test] Stashed 11 file(s)
[Pipeline] [la_regression_test] sh
[la_regression_test] [ValhallaPipeline] Running shell script
[la_regression_test] + scripts/cleanup.sh
[la_regression_test] ++ realpath scripts/cleanup.sh
[la_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[la_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[la_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[la_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[la_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[la_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[la_regression_test] ++ POSTGIS=mdillon/postgis
[la_regression_test] ++ POSTGIS_LABEL=pg.test.com
[la_regression_test] ++ PG_USER=postgres
[la_regression_test] ++ PG_PASSWD=
[la_regression_test] ++ PG_DB=postgres
[la_regression_test] ++ INSIGHT_SCHEMA=insight
[la_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[la_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[la_regression_test] ++ VALHALLA_BRANCH=origin/master
[la_regression_test] ++ NAME_SERVER=12.34.5.67
[la_regression_test] ++ VALHALLA_CONCURRENCY=
[la_regression_test] ++ BASELINE_FILE=./baseline.txt
[la_regression_test] ++ BUILD_FILE=./build.txt
[la_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[la_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[la_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[la_regression_test] ++ MAPDATA_REGION=NA
[la_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[la_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[la_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[la_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[la_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[la_regression_test] +++ sed -e s/-/_/g
[la_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[la_regression_test] + cleanup_network
[la_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[la_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[la_regression_test] + leading='s/^[[:space:]]*//'
[la_regression_test] + trailing='s/[[:space:]]*$//'
[la_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[la_regression_test] ++ tr -s ' '
[la_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[la_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[la_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[la_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_NA
[la_regression_test] jenkins_ValhallaPipeline_1004_NA
[la_regression_test] + cleanup_routing_engine
[la_regression_test] + [[ -n '' ]]
[la_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[la_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + gzip
[la_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[la_regression_test] + true
[Pipeline] [la_regression_test] }
[Pipeline] [la_regression_test] // withEnv
[Pipeline] [la_regression_test] }
[Pipeline] [la_regression_test] // node
[Pipeline] [la_regression_test] }
[seattle_regression_test] Saving error table with filename: max-error-table-seattle_regression_test.png
[seattle_regression_test] Plotly server error saving max-error-table-seattle_regression_test.png, retrying #1
[seattle_regression_test] Plotly server error saving max-error-table-seattle_regression_test.png, retrying #2
[seattle_regression_test] Plotly server error saving max-error-table-seattle_regression_test.png, retrying #3
[seattle_regression_test] Plotly server error saving max-error-table-seattle_regression_test.png, retrying #4
[seattle_regression_test] Plotly server error saving max-error-table-seattle_regression_test.png, retrying #5
[seattle_regression_test] Saving max error chart with filename: max-error-hist-seattle_regression_test.png
[seattle_regression_test] Plotly server error saving max-error-hist-seattle_regression_test.png, retrying #1
[seattle_regression_test] Plotly server error saving max-error-hist-seattle_regression_test.png, retrying #2
[seattle_regression_test] Plotly server error saving max-error-hist-seattle_regression_test.png, retrying #3
[seattle_regression_test] Plotly server error saving max-error-hist-seattle_regression_test.png, retrying #4
[seattle_regression_test] Plotly server error saving max-error-hist-seattle_regression_test.png, retrying #5
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary seattle_regression_test -tag _jenkins-ValhallaPipeline-1004'
[seattle_regression_test] Guidance) Boundary: seattle_regression_test | Total: 15 | Steps Failed Count: 5 | Unnamed Start Count: 0 | Unnamed Middle Count: 1 | Unnamed Mid Short Count: 0 | Unnamed Mid Medium Count: 1 | Unnamed Mid Long Count: 0 | Unnamed End Count: 1 | Unnamed Verbal Count: 0
[seattle_regression_test] + docker run --rm --network jenkins_ValhallaPipeline_1004_NA --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary seattle_regression_test -tag _jenkins-ValhallaPipeline-1004'
[seattle_regression_test] Processing 15 routes
[seattle_regression_test] Angles) Boundary: seattle_regression_test | Total routes: 15 | Total turns compared: 15 |  Mismatches: 0 | Mismatch pct: 0.0 | Skipped: 0
[seattle_regression_test] + cleanup_routing_engine
[seattle_regression_test] + [[ -n '' ]]
[seattle_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[seattle_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + gzip
[seattle_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[Pipeline] [seattle_regression_test] stash
[seattle_regression_test] Stashed 11 file(s)
[Pipeline] [seattle_regression_test] sh
[seattle_regression_test] [ValhallaPipeline] Running shell script
[seattle_regression_test] + scripts/cleanup.sh
[seattle_regression_test] ++ realpath scripts/cleanup.sh
[seattle_regression_test] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[seattle_regression_test] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[seattle_regression_test] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[seattle_regression_test] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[seattle_regression_test] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[seattle_regression_test] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[seattle_regression_test] ++ POSTGIS=mdillon/postgis
[seattle_regression_test] ++ POSTGIS_LABEL=pg.test.com
[seattle_regression_test] ++ PG_USER=postgres
[seattle_regression_test] ++ PG_PASSWD=
[seattle_regression_test] ++ PG_DB=postgres
[seattle_regression_test] ++ INSIGHT_SCHEMA=insight
[seattle_regression_test] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[seattle_regression_test] ++ ROUTE_VALIDATORS_BRANCH=master
[seattle_regression_test] ++ VALHALLA_BRANCH=origin/master
[seattle_regression_test] ++ NAME_SERVER=12.34.5.67
[seattle_regression_test] ++ VALHALLA_CONCURRENCY=
[seattle_regression_test] ++ BASELINE_FILE=./baseline.txt
[seattle_regression_test] ++ BUILD_FILE=./build.txt
[seattle_regression_test] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[seattle_regression_test] ++ MAPDATA_VERSION=NA-170714-148
[seattle_regression_test] ++ MAPDATA_REGION=NA
[seattle_regression_test] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
[seattle_regression_test] ++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
[seattle_regression_test] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[seattle_regression_test] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[seattle_regression_test] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] +++ sed -e s/-/_/g
[seattle_regression_test] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] + cleanup_network
[seattle_regression_test] + [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
[seattle_regression_test] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[seattle_regression_test] + leading='s/^[[:space:]]*//'
[seattle_regression_test] + trailing='s/[[:space:]]*$//'
[seattle_regression_test] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[seattle_regression_test] ++ tr -s ' '
[seattle_regression_test] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
[seattle_regression_test] Cleaning up network jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] + docker network rm jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] jenkins_ValhallaPipeline_1004_NA
[seattle_regression_test] + cleanup_routing_engine
[seattle_regression_test] + [[ -n '' ]]
[seattle_regression_test] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
[seattle_regression_test] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + gzip
[seattle_regression_test] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
[seattle_regression_test] + true
[Pipeline] [seattle_regression_test] }
[Pipeline] [seattle_regression_test] // withEnv
[Pipeline] [seattle_regression_test] }
[Pipeline] [seattle_regression_test] // node
[Pipeline] [seattle_regression_test] }
[jordan_boundary] Out of 360 routes, found 360 trips
[jordan_boundary] Exporting 360 valhalla routes to insight database
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name run_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && python3 run_comparison.py -host pg.test.com -boundary jordan_boundary -tag _jenkins-ValhallaPipeline-1004'
[jordan_boundary] Processing 360 polylines
[jordan_boundary] Saving results
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name get_rate__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_rate.py       max_error 20 -host pg.test.com -boundary jordan_boundary -tag _jenkins-ValhallaPipeline-1004'
[uae_boundary] Saving error table with filename: max-error-table-uae_boundary.png
[uae_boundary] Plotly server error saving max-error-table-uae_boundary.png, retrying #1
[uae_boundary] Plotly server error saving max-error-table-uae_boundary.png, retrying #2
[uae_boundary] Plotly server error saving max-error-table-uae_boundary.png, retrying #3
[uae_boundary] Plotly server error saving max-error-table-uae_boundary.png, retrying #4
[uae_boundary] Plotly server error saving max-error-table-uae_boundary.png, retrying #5
[uae_boundary] Saving max error chart with filename: max-error-hist-uae_boundary.png
[uae_boundary] Plotly server error saving max-error-hist-uae_boundary.png, retrying #1
[uae_boundary] Plotly server error saving max-error-hist-uae_boundary.png, retrying #2
[uae_boundary] Plotly server error saving max-error-hist-uae_boundary.png, retrying #3
[uae_boundary] Plotly server error saving max-error-hist-uae_boundary.png, retrying #4
[uae_boundary] Plotly server error saving max-error-hist-uae_boundary.png, retrying #5
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary uae_boundary -tag _jenkins-ValhallaPipeline-1004'
[uae_boundary] Guidance) Boundary: uae_boundary | Total: 1387 | Steps Failed Count: 652 | Unnamed Start Count: 260 | Unnamed Middle Count: 453 | Unnamed Mid Short Count: 221 | Unnamed Mid Medium Count: 251 | Unnamed Mid Long Count: 331 | Unnamed End Count: 331 | Unnamed Verbal Count: 89
[uae_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary uae_boundary -tag _jenkins-ValhallaPipeline-1004'
[uae_boundary] Processing 1387 routes
[uae_boundary] Angles) Boundary: uae_boundary | Total routes: 1387 | Total turns compared: 9856 |  Mismatches: 250 | Mismatch pct: 2.54 | Skipped: 19708
[uae_boundary] + cleanup_routing_engine
[uae_boundary] + [[ -n '' ]]
[uae_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME'
[uae_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + gzip
[uae_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[Pipeline] [uae_boundary] stash
[uae_boundary] Stashed 11 file(s)
[Pipeline] [uae_boundary] sh
[uae_boundary] [ValhallaPipeline] Running shell script
[uae_boundary] + scripts/cleanup.sh
[uae_boundary] ++ realpath scripts/cleanup.sh
[uae_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[uae_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[uae_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[uae_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[uae_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[uae_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[uae_boundary] ++ POSTGIS=mdillon/postgis
[uae_boundary] ++ POSTGIS_LABEL=pg.test.com
[uae_boundary] ++ PG_USER=postgres
[uae_boundary] ++ PG_PASSWD=
[uae_boundary] ++ PG_DB=postgres
[uae_boundary] ++ INSIGHT_SCHEMA=insight
[uae_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[uae_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[uae_boundary] ++ VALHALLA_BRANCH=origin/master
[uae_boundary] ++ NAME_SERVER=12.34.5.67
[uae_boundary] ++ VALHALLA_CONCURRENCY=
[uae_boundary] ++ BASELINE_FILE=./baseline.txt
[uae_boundary] ++ BUILD_FILE=./build.txt
[uae_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[uae_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[uae_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[uae_boundary] ++ MAPDATA_VERSION=ME-170803-183
[uae_boundary] ++ MAPDATA_REGION=ME
[uae_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[uae_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[uae_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[uae_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[uae_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[uae_boundary] +++ sed -e s/-/_/g
[uae_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[uae_boundary] + cleanup_network
[uae_boundary] + [[ jenkins_ValhallaPipeline_1004_ME != \h\o\s\t ]]
[uae_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[uae_boundary] + leading='s/^[[:space:]]*//'
[uae_boundary] + trailing='s/[[:space:]]*$//'
[uae_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_ME
[uae_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[uae_boundary] ++ tr -s ' '
[uae_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_ME'
[uae_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_ME
[uae_boundary] + docker network rm jenkins_ValhallaPipeline_1004_ME
[uae_boundary] jenkins_ValhallaPipeline_1004_ME
[uae_boundary] + cleanup_routing_engine
[uae_boundary] + [[ -n '' ]]
[uae_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME'
[uae_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + gzip
[uae_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[uae_boundary] + true
[Pipeline] [uae_boundary] }
[Pipeline] [uae_boundary] // withEnv
[Pipeline] [uae_boundary] }
[Pipeline] [uae_boundary] // node
[Pipeline] [uae_boundary] }
[jordan_boundary] Routing) Boundary: jordan_boundary | Requested: 360 | Successful: 360 | Failed: 0 | Match pct: 18.33
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name get_charts__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_charts.py       max_error -host pg.test.com -boundary jordan_boundary -tag _jenkins-ValhallaPipeline-1004'
[jordan_boundary] Saving error table with filename: max-error-table-jordan_boundary.png
[jordan_boundary] Saving max error chart with filename: max-error-hist-jordan_boundary.png
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name get_guidance__jenkins-ValhallaPipeline-1004 -v /jenkins/workspace/ValhallaPipeline:/workspace --dns=12.34.5.67 docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'git -C /navigation/route_validators/ fetch -q     && git -C /navigation/route_validators/ checkout -q -f master     && git -C /navigation/route_validators/ reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/diagnostic/get_guidance_metrics.py       -host pg.test.com -boundary jordan_boundary -tag _jenkins-ValhallaPipeline-1004'
[jordan_boundary] Guidance) Boundary: jordan_boundary | Total: 360 | Steps Failed Count: 27 | Unnamed Start Count: 54 | Unnamed Middle Count: 113 | Unnamed Mid Short Count: 60 | Unnamed Mid Medium Count: 67 | Unnamed Mid Long Count: 224 | Unnamed End Count: 113 | Unnamed Verbal Count: 0
[jordan_boundary] + docker run --rm --network jenkins_ValhallaPipeline_1004_ME --name turn_angle_comparison__jenkins-ValhallaPipeline-1004 --dns=12.34.5.67 -v /jenkins/workspace/ValhallaPipeline:/workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 bash -c 'cd /navigation/route_validators/route_diagnostics/route_analysis/     && git fetch -q     && git checkout -q -f master     && git reset -q --hard origin/master     && cd /workspace     && python3 /navigation/route_validators/route_diagnostics/route_analysis/turn_angle_comparison.py       -host pg.test.com -boundary jordan_boundary -tag _jenkins-ValhallaPipeline-1004'
[jordan_boundary] Processing 360 routes
[jordan_boundary] Angles) Boundary: jordan_boundary | Total routes: 360 | Total turns compared: 2211 |  Mismatches: 208 | Mismatch pct: 9.41 | Skipped: 2996
[jordan_boundary] + cleanup_routing_engine
[jordan_boundary] + [[ -n '' ]]
[jordan_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME'
[jordan_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + gzip
[jordan_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[Pipeline] [jordan_boundary] stash
[jordan_boundary] Stashed 13 file(s)
[Pipeline] [jordan_boundary] sh
[jordan_boundary] [ValhallaPipeline] Running shell script
[jordan_boundary] + scripts/cleanup.sh
[jordan_boundary] ++ realpath scripts/cleanup.sh
[jordan_boundary] + SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[jordan_boundary] ++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
[jordan_boundary] + SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
[jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
[jordan_boundary] + REPO_ROOT=/jenkins/workspace/ValhallaPipeline
[jordan_boundary] ++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] + ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] + [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
[jordan_boundary] + source /jenkins/workspace/ValhallaPipeline/env/docker.env
[jordan_boundary] ++ POSTGIS=mdillon/postgis
[jordan_boundary] ++ POSTGIS_LABEL=pg.test.com
[jordan_boundary] ++ PG_USER=postgres
[jordan_boundary] ++ PG_PASSWD=
[jordan_boundary] ++ PG_DB=postgres
[jordan_boundary] ++ INSIGHT_SCHEMA=insight
[jordan_boundary] ++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
[jordan_boundary] ++ ROUTE_VALIDATORS_BRANCH=master
[jordan_boundary] ++ VALHALLA_BRANCH=origin/master
[jordan_boundary] ++ NAME_SERVER=12.34.5.67
[jordan_boundary] ++ VALHALLA_CONCURRENCY=
[jordan_boundary] ++ BASELINE_FILE=./baseline.txt
[jordan_boundary] ++ BUILD_FILE=./build.txt
[jordan_boundary] ++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ MAPDATA_DIR=/jenkins/autopilot-maps
[jordan_boundary] ++ MAPDATA_VERSION=ME-170803-183
[jordan_boundary] ++ MAPDATA_REGION=ME
[jordan_boundary] ++ VALHALLA_VERSION=/jenkins/autopilot-maps/ME-170803-183/VERSION
[jordan_boundary] ++ VALHALLA_DATA=/jenkins/autopilot-maps/ME-170803-183/tm/ME
[jordan_boundary] ++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
[jordan_boundary] ++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
[jordan_boundary] ++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] +++ sed -e s/-/_/g
[jordan_boundary] ++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] + cleanup_network
[jordan_boundary] + [[ jenkins_ValhallaPipeline_1004_ME != \h\o\s\t ]]
[jordan_boundary] + fmt='{{range .Containers}} {{.Name}} {{end}}'
[jordan_boundary] + leading='s/^[[:space:]]*//'
[jordan_boundary] + trailing='s/[[:space:]]*$//'
[jordan_boundary] ++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] ++ tr -s ' '
[jordan_boundary] ++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
[jordan_boundary] + echo 'Cleaning up network jenkins_ValhallaPipeline_1004_ME'
[jordan_boundary] Cleaning up network jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] + docker network rm jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] jenkins_ValhallaPipeline_1004_ME
[jordan_boundary] + cleanup_routing_engine
[jordan_boundary] + [[ -n '' ]]
[jordan_boundary] + echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME'
[jordan_boundary] Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + gzip
[jordan_boundary] + docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_ME
[jordan_boundary] + true
[Pipeline] [jordan_boundary] }
[Pipeline] [jordan_boundary] // withEnv
[Pipeline] [jordan_boundary] }
[Pipeline] [jordan_boundary] // node
[Pipeline] [jordan_boundary] }
[Pipeline] // parallel
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Teardown)
[Pipeline] echo
Unstashing 'guidance_regression_test-routes_uca'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'guidance_regression_test-routes_kr'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'guidance_regression_test-routes_tw'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'guidance_regression_test-routes_me'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'atlanta_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_atlanta_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'austin_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_austin_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'bay_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_bay_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'chicago_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_chicago_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'dallas_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_dallas_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'houston_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_houston_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'la_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_la_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'san_diego_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_san_diego_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'seattle_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_seattle_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'south_korea_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_south_korea_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'seoul_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_seoul_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'taiwan_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_taiwan_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'taipei_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_taipei_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'houston_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_houston_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'taipei_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_taipei_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'bayarea_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_bayarea_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'la_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_la_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'seattle_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_seattle_regression_test'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'uae_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_uae_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'jordan_boundary'
[Pipeline] unstash
[Pipeline] echo
Unstashing 'valhalla_route_calculation_jordan_boundary'
[Pipeline] unstash
[Pipeline] readFile
[Pipeline] step
Unable to expand commit SHA value with org.jenkinsci.plugins.workflow.job.WorkflowRun
Notified Stash for commit with id 2cd1734fa669c180f007999329e54fefc0d07feb
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
[ValhallaPipeline] Running shell script
+ ./scripts/generate-valhalla-report.sh
++ realpath ./scripts/generate-valhalla-report.sh
+ SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/generate-valhalla-report.sh
++ dirname /jenkins/workspace/ValhallaPipeline/scripts/generate-valhalla-report.sh
+ SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
+ REPO_ROOT=/jenkins/workspace/ValhallaPipeline
++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
+ ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
+ [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
+ source /jenkins/workspace/ValhallaPipeline/env/docker.env
++ POSTGIS=mdillon/postgis
++ POSTGIS_LABEL=pg.test.com
++ PG_USER=postgres
++ PG_PASSWD=
++ PG_DB=postgres
++ INSIGHT_SCHEMA=insight
++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
++ ROUTE_VALIDATORS_BRANCH=master
++ VALHALLA_BRANCH=origin/master
++ NAME_SERVER=12.34.5.67
++ VALHALLA_CONCURRENCY=
++ BASELINE_FILE=./baseline.txt
++ BUILD_FILE=./build.txt
++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
++ MAPDATA_DIR=/jenkins/autopilot-maps
++ MAPDATA_VERSION=NA-170714-148
++ MAPDATA_REGION=NA
++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
+++ sed -e s/-/_/g
++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
+ name_suffix=_jenkins-ValhallaPipeline-1004
+ docker run --rm --interactive --env PYTHONIOENCODING=utf-8 --name retrieve_console_text__jenkins-ValhallaPipeline-1004 --volume /jenkins/workspace/ValhallaPipeline:/workspace --workdir /workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 /bin/bash -c 'curl -s http://jenkins.test.com/job/ValhallaPipeline/964/consoleText > ./baseline.txt;
                curl -s http://jenkins.test.com/job/ValhallaPipeline/1004//consoleText > ./build.txt'
+ docker run --rm --interactive --env PYTHONIOENCODING=utf-8 --name generate_report__jenkins-ValhallaPipeline-1004 --volume /jenkins/workspace/ValhallaPipeline:/workspace --workdir /workspace docker.dev.test.com/user/tesla-nav-server:2.0.5 /bin/bash -c 'pip3 install -q xmltodict;
                python3 scripts/valhalla-report-tool.py -debug -parse -table -insert -buildfile ./build.txt -baseline ./baseline.txt -tag='\''_jenkins-ValhallaPipeline-1004'\'' -host pg.test.com -files mapdata-*'
Namespace(baseline='./baseline.txt', baseline_output='baseline.json', buildfile='./build.txt', db='postgres', debug=True, files=['mapdata-atlanta_boundary.version', 'mapdata-austin_boundary.version', 'mapdata-bay_boundary.version', 'mapdata-bayarea_regression_test.version', 'mapdata-chicago_boundary.version', 'mapdata-dallas_boundary.version', 'mapdata-houston_boundary.version', 'mapdata-houston_regression_test.version', 'mapdata-jordan_boundary.version', 'mapdata-la_boundary.version', 'mapdata-la_regression_test.version', 'mapdata-routes_kr.version', 'mapdata-routes_me.version', 'mapdata-routes_tw.version', 'mapdata-routes_uca.version', 'mapdata-san_diego_boundary.version', 'mapdata-seattle_boundary.version', 'mapdata-seattle_regression_test.version', 'mapdata-seoul_boundary.version', 'mapdata-south_korea_boundary.version', 'mapdata-taipei_boundary.version', 'mapdata-taipei_regression_test.version', 'mapdata-taiwan_boundary.version', 'mapdata-uae_boundary.version'], host='pg.test.com', insert=True, json='report.json', output='report.json', parse=True, password='', port=5432, schema='insight', table=True, tag='_jenkins-ValhallaPipeline-1004', username='postgres')
Parsing mapdata file mapdata-atlanta_boundary.version
Parsing mapdata file mapdata-austin_boundary.version
Parsing mapdata file mapdata-bay_boundary.version
Parsing mapdata file mapdata-bayarea_regression_test.version
Parsing mapdata file mapdata-chicago_boundary.version
Parsing mapdata file mapdata-dallas_boundary.version
Parsing mapdata file mapdata-houston_boundary.version
Parsing mapdata file mapdata-houston_regression_test.version
Parsing mapdata file mapdata-jordan_boundary.version
Parsing mapdata file mapdata-la_boundary.version
Parsing mapdata file mapdata-la_regression_test.version
Parsing mapdata file mapdata-routes_kr.version
Parsing mapdata file mapdata-routes_me.version
Parsing mapdata file mapdata-routes_tw.version
Parsing mapdata file mapdata-routes_uca.version
Parsing mapdata file mapdata-san_diego_boundary.version
Parsing mapdata file mapdata-seattle_boundary.version
Parsing mapdata file mapdata-seattle_regression_test.version
Parsing mapdata file mapdata-seoul_boundary.version
Parsing mapdata file mapdata-south_korea_boundary.version
Parsing mapdata file mapdata-taipei_boundary.version
Parsing mapdata file mapdata-taipei_regression_test.version
Parsing mapdata file mapdata-taiwan_boundary.version
Parsing mapdata file mapdata-uae_boundary.version
Parsing mapdata file mapdata-atlanta_boundary.version
Parsing mapdata file mapdata-austin_boundary.version
Parsing mapdata file mapdata-bay_boundary.version
Parsing mapdata file mapdata-bayarea_regression_test.version
Parsing mapdata file mapdata-chicago_boundary.version
Parsing mapdata file mapdata-dallas_boundary.version
Parsing mapdata file mapdata-houston_boundary.version
Parsing mapdata file mapdata-houston_regression_test.version
Parsing mapdata file mapdata-jordan_boundary.version
Parsing mapdata file mapdata-la_boundary.version
Parsing mapdata file mapdata-la_regression_test.version
Parsing mapdata file mapdata-routes_kr.version
Parsing mapdata file mapdata-routes_me.version
Parsing mapdata file mapdata-routes_tw.version
Parsing mapdata file mapdata-routes_uca.version
Parsing mapdata file mapdata-san_diego_boundary.version
Parsing mapdata file mapdata-seattle_boundary.version
Parsing mapdata file mapdata-seattle_regression_test.version
Parsing mapdata file mapdata-seoul_boundary.version
Parsing mapdata file mapdata-south_korea_boundary.version
Parsing mapdata file mapdata-taipei_boundary.version
Parsing mapdata file mapdata-taipei_regression_test.version
Parsing mapdata file mapdata-taiwan_boundary.version
Parsing mapdata file mapdata-uae_boundary.version
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] readFile
[Pipeline] readFile
[Pipeline] sh
[ValhallaPipeline] Running shell script
+ fgrep ^FAIL test-suite.log
+ echo -n <span style="color:#00AA00">PASS</span>
[Pipeline] sh
[ValhallaPipeline] Running shell script
+ mkdir -p html
[Pipeline] writeFile
[Pipeline] publishHTML
[htmlpublisher] Archiving HTML reports...
[htmlpublisher] Archiving at BUILD level /jenkins/workspace/ValhallaPipeline/html to /var/lib/jenkins/jobs/ValhallaPipeline/builds/1004/htmlreports/Valhalla_Pipeline_Report
[Pipeline] emailext
Sending email to: infotainment-automation@tesla.com navigation@tesla.com cmiguelgorry@tesla.com cshieh@tesla.com mvu@tesla.com
[Pipeline] step
Archiving artifacts
[Pipeline] sh
[ValhallaPipeline] Running shell script
+ scripts/cleanup.sh
++ realpath scripts/cleanup.sh
+ SCRIPT=/jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
++ dirname /jenkins/workspace/ValhallaPipeline/scripts/cleanup.sh
+ SCRIPT_DIR=/jenkins/workspace/ValhallaPipeline/scripts
++ realpath /jenkins/workspace/ValhallaPipeline/scripts/../
+ REPO_ROOT=/jenkins/workspace/ValhallaPipeline
++ realpath /jenkins/workspace/ValhallaPipeline/env/docker.env
+ ENV_FILE=/jenkins/workspace/ValhallaPipeline/env/docker.env
+ [[ -r /jenkins/workspace/ValhallaPipeline/env/docker.env ]]
+ source /jenkins/workspace/ValhallaPipeline/env/docker.env
++ POSTGIS=mdillon/postgis
++ POSTGIS_LABEL=VALHALLA_DIAGNOSTICS
++ PG_USER=postgres
++ PG_PASSWD=
++ PG_DB=postgres
++ INSIGHT_SCHEMA=insight
++ TM_SERVER=docker.dev.test.com/user/tesla-nav-server:2.0.5
++ ROUTE_VALIDATORS_BRANCH=master
++ VALHALLA_BRANCH=origin/master
++ NAME_SERVER=12.34.5.67
++ VALHALLA_CONCURRENCY=
++ BASELINE_FILE=./baseline.txt
++ BUILD_FILE=./build.txt
++ JENKINS_SUFFIX=_jenkins-ValhallaPipeline-1004
++ LABEL_SUFFIX=_jenkins-ValhallaPipeline-1004
++ MAPDATA_DIR=/jenkins/autopilot-maps
++ MAPDATA_VERSION=NA-170714-148
++ MAPDATA_REGION=NA
++ VALHALLA_VERSION=/jenkins/autopilot-maps/NA-170714-148/VERSION
++ VALHALLA_DATA=/jenkins/autopilot-maps/NA-170714-148/tm/NA
++ AUTOPILOT_MAPS_URL=s3://autopilot-maps/osm/release/valhalla
++ VALHALLA_LABEL=ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
++ TEST_NETWORK=jenkins-ValhallaPipeline-1004
++ TEST_NETWORK=jenkins-ValhallaPipeline-1004_NA
+++ sed -e s/-/_/g
++ TEST_NETWORK=jenkins_ValhallaPipeline_1004_NA
+ cleanup_network
+ [[ jenkins_ValhallaPipeline_1004_NA != \h\o\s\t ]]
+ fmt='{{range .Containers}} {{.Name}} {{end}}'
+ leading='s/^[[:space:]]*//'
+ trailing='s/[[:space:]]*$//'
++ docker network inspect '--format={{range .Containers}} {{.Name}} {{end}}' jenkins_ValhallaPipeline_1004_NA
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
++ tr -s ' '
+ for container in '$(docker network inspect --format="$fmt" $TEST_NETWORK | sed -e $leading -e $trailing | tr -s '\'' '\'')'
+ echo Disconnecting VALHALLA_DIAGNOSTICS from jenkins_ValhallaPipeline_1004_NA
Disconnecting VALHALLA_DIAGNOSTICS from jenkins_ValhallaPipeline_1004_NA
+ docker network disconnect jenkins_ValhallaPipeline_1004_NA VALHALLA_DIAGNOSTICS
+ echo 'Cleaning up network jenkins_ValhallaPipeline_1004_NA'
Cleaning up network jenkins_ValhallaPipeline_1004_NA
+ docker network rm jenkins_ValhallaPipeline_1004_NA
jenkins_ValhallaPipeline_1004_NA
+ cleanup_routing_engine
+ [[ -n '' ]]
+ echo 'Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA'
Cleaning up ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
+ gzip
+ docker logs --details --timestamps ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
+ docker stop ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
+ docker rm ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
Error response from daemon: No such container: ROUTING_ENGINE_jenkins-ValhallaPipeline-1004_NA
+ true
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // timestamps
[Pipeline] End of Pipeline
Finished: SUCCESS
